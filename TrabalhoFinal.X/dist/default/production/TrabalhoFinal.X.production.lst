

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 02 18:39:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  000600                     __psmallconst:
    77                           	callstack 0
    78  000600  00                 	db	0
    79  000601                     _valor@ssd$F652:
    80                           	callstack 0
    81  000601  3F                 	db	63
    82  000602  06                 	db	6
    83  000603  5B                 	db	91
    84  000604  4F                 	db	79
    85  000605  66                 	db	102
    86  000606  6D                 	db	109
    87  000607  7D                 	db	125
    88  000608  07                 	db	7
    89  000609  7F                 	db	127
    90  00060A  6F                 	db	111
    91  00060B  77                 	db	119
    92  00060C  7C                 	db	124
    93  00060D  39                 	db	57
    94  00060E  5E                 	db	94
    95  00060F  79                 	db	121
    96  000610  71                 	db	113
    97  000611                     __end_of_valor@ssd$F652:
    98                           	callstack 0
    99  000611                     _valor:
   100                           	callstack 0
   101  000611  3F                 	db	63
   102  000612  06                 	db	6
   103  000613  5B                 	db	91
   104  000614  4F                 	db	79
   105  000615  66                 	db	102
   106  000616  6D                 	db	109
   107  000617  7D                 	db	125
   108  000618  07                 	db	7
   109  000619  7F                 	db	127
   110  00061A  6F                 	db	111
   111  00061B  77                 	db	119
   112  00061C  7C                 	db	124
   113  00061D  39                 	db	57
   114  00061E  5E                 	db	94
   115  00061F  79                 	db	121
   116  000620  71                 	db	113
   117  000621                     __end_of_valor:
   118                           	callstack 0
   119  000621                     _charKey:
   120                           	callstack 0
   121  000621  55                 	db	85
   122  000622  4C                 	db	76
   123  000623  44                 	db	68
   124  000624  52                 	db	82
   125  000625  53                 	db	83
   126  000626  58                 	db	88
   127  000627  41                 	db	65
   128  000628  42                 	db	66
   129  000629  59                 	db	89
   130  00062A  73                 	db	115
   131  00062B                     __end_of_charKey:
   132                           	callstack 0
   133  0000                     _T0CON	set	4053
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136  0000                     _INTCON	set	4082
   137  0000                     _SPBRG	set	4015
   138  0000                     _SPBRGH	set	4016
   139  0000                     _BAUDCON	set	4024
   140  0000                     _TXSTA	set	4012
   141  0000                     _RCREG	set	4014
   142  0000                     _RCSTA	set	4011
   143  0000                     _TXREG	set	4013
   144  0000                     _PIR1	set	3998
   145  0000                     _T2CON	set	4042
   146  0000                     _CCP2CON	set	4026
   147  0000                     _CCPR2L	set	4027
   148  0000                     _PR2	set	4043
   149  0000                     _TRISE	set	3990
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISA	set	3986
   154  0000                     _PORTE	set	3972
   155  0000                     _PORTD	set	3971
   156  0000                     _PORTC	set	3970
   157  0000                     _PORTB	set	3969
   158  0000                     _PORTA	set	3968
   159  0000                     _ADRESL	set	4035
   160  0000                     _ADRESH	set	4036
   161  0000                     _ADCON2	set	4032
   162  0000                     _ADCON1	set	4033
   163  0000                     _ADCON0	set	4034
   164  00062B                     STR_6:
   165  00062B  49                 	db	73	;'I'
   166  00062C  4D                 	db	77	;'M'
   167  00062D  41                 	db	65	;'A'
   168  00062E  47                 	db	71	;'G'
   169  00062F  49                 	db	73	;'I'
   170  000630  4E                 	db	78	;'N'
   171  000631  45                 	db	69	;'E'
   172  000632  20                 	db	32
   173  000633  44                 	db	68	;'D'
   174  000634  52                 	db	82	;'R'
   175  000635  41                 	db	65	;'A'
   176  000636  47                 	db	71	;'G'
   177  000637  4F                 	db	79	;'O'
   178  000638  4E                 	db	78	;'N'
   179  000639  53                 	db	83	;'S'
   180  00063A  00                 	db	0
   181  00063B                     STR_8:
   182  00063B  42                 	db	66	;'B'
   183  00063C  4C                 	db	76	;'L'
   184  00063D  41                 	db	65	;'A'
   185  00063E  43                 	db	67	;'C'
   186  00063F  4B                 	db	75	;'K'
   187  000640  50                 	db	80	;'P'
   188  000641  49                 	db	73	;'I'
   189  000642  4E                 	db	78	;'N'
   190  000643  4B                 	db	75	;'K'
   191  000644  00                 	db	0
   192  000645                     STR_1:
   193  000645  52                 	db	82	;'R'
   194  000646  61                 	db	97	;'a'
   195  000647  64                 	db	100	;'d'
   196  000648  69                 	db	105	;'i'
   197  000649  6F                 	db	111	;'o'
   198  00064A  20                 	db	32
   199  00064B  31                 	db	49	;'1'
   200  00064C  00                 	db	0
   201  00064D                     STR_3:
   202  00064D  52                 	db	82	;'R'
   203  00064E  61                 	db	97	;'a'
   204  00064F  64                 	db	100	;'d'
   205  000650  69                 	db	105	;'i'
   206  000651  6F                 	db	111	;'o'
   207  000652  20                 	db	32
   208  000653  32                 	db	50	;'2'
   209  000654  00                 	db	0
   210  000655                     STR_5:
   211  000655  52                 	db	82	;'R'
   212  000656  61                 	db	97	;'a'
   213  000657  64                 	db	100	;'d'
   214  000658  69                 	db	105	;'i'
   215  000659  6F                 	db	111	;'o'
   216  00065A  20                 	db	32
   217  00065B  33                 	db	51	;'3'
   218  00065C  00                 	db	0
   219  00065D                     STR_7:
   220  00065D  52                 	db	82	;'R'
   221  00065E  61                 	db	97	;'a'
   222  00065F  64                 	db	100	;'d'
   223  000660  69                 	db	105	;'i'
   224  000661  6F                 	db	111	;'o'
   225  000662  20                 	db	32
   226  000663  34                 	db	52	;'4'
   227  000664  00                 	db	0
   228  000665                     STR_2:
   229  000665  42                 	db	66	;'B'
   230  000666  45                 	db	69	;'E'
   231  000667  41                 	db	65	;'A'
   232  000668  54                 	db	84	;'T'
   233  000669  4C                 	db	76	;'L'
   234  00066A  45                 	db	69	;'E'
   235  00066B  53                 	db	83	;'S'
   236  00066C  00                 	db	0
   237  00066D                     STR_4:
   238  00066D  41                 	db	65	;'A'
   239  00066E  43                 	db	67	;'C'
   240  00066F  44                 	db	68	;'D'
   241  000670  43                 	db	67	;'C'
   242  000671  00                 	db	0
   243  000672  00                 	db	0	; dummy byte at the end
   244  0000                     
   245                           ; #config settings
   246                           
   247                           	psect	cinit
   248  001DDE                     __pcinit:
   249                           	callstack 0
   250  001DDE                     start_initialization:
   251                           	callstack 0
   252  001DDE                     __initialization:
   253                           	callstack 0
   254                           
   255                           ; Clear objects allocated to COMRAM (20 bytes)
   256  001DDE  EE00  F019         	lfsr	0,__pbssCOMRAM
   257  001DE2  0E14               	movlw	20
   258  001DE4                     clear_0:
   259  001DE4  6AEE               	clrf	postinc0,c
   260  001DE6  06E8               	decf	wreg,f,c
   261  001DE8  E1FD               	bnz	clear_0
   262  001DEA                     end_of_initialization:
   263                           	callstack 0
   264  001DEA                     __end_of__initialization:
   265                           	callstack 0
   266  001DEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   267  001DEC  6EF8               	movwf	tblptru,c
   268  001DEE  0100               	movlb	0
   269  001DF0  EF3A  F003         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMRAM
   272  000019                     __pbssCOMRAM:
   273                           	callstack 0
   274  000019                     kpDebounce@oldRead:
   275                           	callstack 0
   276  000019                     	ds	2
   277  00001B                     kpDebounce@newRead:
   278                           	callstack 0
   279  00001B                     	ds	2
   280  00001D                     _keys:
   281                           	callstack 0
   282  00001D                     	ds	2
   283  00001F                     _v:
   284                           	callstack 0
   285  00001F                     	ds	2
   286  000021                     _v3@ssd$F657:
   287                           	callstack 0
   288  000021                     	ds	1
   289  000022                     _v2@ssd$F656:
   290                           	callstack 0
   291  000022                     	ds	1
   292  000023                     _v1@ssd$F655:
   293                           	callstack 0
   294  000023                     	ds	1
   295  000024                     _v0@ssd$F654:
   296                           	callstack 0
   297  000024                     	ds	1
   298  000025                     _display@ssd$F653:
   299                           	callstack 0
   300  000025                     	ds	1
   301  000026                     kpDebounce@tempo:
   302                           	callstack 0
   303  000026                     	ds	1
   304  000027                     _started:
   305                           	callstack 0
   306  000027                     	ds	1
   307  000028                     _v3:
   308                           	callstack 0
   309  000028                     	ds	1
   310  000029                     _v2:
   311                           	callstack 0
   312  000029                     	ds	1
   313  00002A                     _v1:
   314                           	callstack 0
   315  00002A                     	ds	1
   316  00002B                     _v0:
   317                           	callstack 0
   318  00002B                     	ds	1
   319  00002C                     _display:
   320                           	callstack 0
   321  00002C                     	ds	1
   322                           
   323                           	psect	cstackCOMRAM
   324  000001                     __pcstackCOMRAM:
   325                           	callstack 0
   326  000001                     ??_kpReadKey:
   327  000001                     ?_digitalRead:
   328                           	callstack 0
   329  000001                     ?___awdiv:
   330                           	callstack 0
   331  000001                     digitalWrite@pin:
   332                           	callstack 0
   333  000001                     digitalRead@pin:
   334                           	callstack 0
   335  000001                     pinMode@pin:
   336                           	callstack 0
   337  000001                     delayMicro@a:
   338                           	callstack 0
   339  000001                     delayMili@a:
   340                           	callstack 0
   341  000001                     atraso_ms@num:
   342                           	callstack 0
   343  000001                     ___awdiv@dividend:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347  000001                     	ds	2
   348  000003                     ??_digitalRead:
   349  000003                     ??_delayMili:
   350  000003                     digitalWrite@value:
   351                           	callstack 0
   352  000003                     pinMode@type:
   353                           	callstack 0
   354  000003                     atraso_ms@i:
   355                           	callstack 0
   356  000003                     ___awdiv@divisor:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  000003                     	ds	1
   361  000004                     kpReadKey@i:
   362                           	callstack 0
   363  000004                     delayMili@i:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x3
   367  000004                     	ds	1
   368  000005                     ??_pinMode:
   369  000005                     ??_digitalWrite:
   370  000005                     atraso_ms@j:
   371                           	callstack 0
   372  000005                     ___awdiv@counter:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x4
   376  000005                     	ds	1
   377  000006                     atraso_ms@k:
   378                           	callstack 0
   379  000006                     ___awdiv@sign:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x5
   383  000006                     	ds	1
   384  000007                     rgbColor@led:
   385                           	callstack 0
   386  000007                     soWrite@value:
   387                           	callstack 0
   388  000007                     ___awdiv@quotient:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x6
   392  000007                     	ds	2
   393  000009                     ?___awmod:
   394                           	callstack 0
   395  000009                     soWrite@i:
   396                           	callstack 0
   397  000009                     ___awmod@dividend:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x8
   401  000009                     	ds	1
   402  00000A                     ??_kpDebounce:
   403  00000A                     pushNibble@rs:
   404                           	callstack 0
   405  00000A                     pushByte@rs:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x9
   409  00000A                     	ds	1
   410  00000B                     ___awmod@divisor:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xA
   414  00000B                     	ds	1
   415  00000C                     ??_pushByte:
   416  00000C                     pushNibble@value:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xB
   420  00000C                     	ds	1
   421  00000D                     pushByte@value:
   422                           	callstack 0
   423  00000D                     ___awmod@counter:
   424                           	callstack 0
   425  00000D                     kpDebounce@i:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xC
   429  00000D                     	ds	1
   430  00000E                     lcdCommand@value:
   431                           	callstack 0
   432  00000E                     lcdChar@value:
   433                           	callstack 0
   434  00000E                     ___awmod@sign:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0xD
   438  00000E                     	ds	1
   439  00000F                     lcdString@msg:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xE
   443  00000F                     	ds	2
   444  000011                     ??_lcdString:
   445                           
   446                           ; 1 bytes @ 0x10
   447  000011                     	ds	2
   448  000013                     lcdString@i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452  000013                     	ds	2
   453  000015                     ??_main:
   454                           
   455                           ; 1 bytes @ 0x14
   456  000015                     	ds	2
   457  000017                     main@player:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x16
   461  000017                     	ds	2
   462                           
   463 ;;
   464 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   465 ;;
   466 ;; *************** function _main *****************
   467 ;; Defined at:
   468 ;;		line 20 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  player          2   22[COMRAM] int 
   473 ;;  tempo           2    0        int 
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   483 ;;      Params:         0       0       0       0       0       0       0
   484 ;;      Locals:         2       0       0       0       0       0       0
   485 ;;      Temps:          2       0       0       0       0       0       0
   486 ;;      Totals:         4       0       0       0       0       0       0
   487 ;;Total ram usage:        4 bytes
   488 ;; Hardware stack levels required when called: 6
   489 ;; This function calls:
   490 ;;		___awdiv
   491 ;;		___awmod
   492 ;;		_adcInit
   493 ;;		_atraso_ms
   494 ;;		_digitalWrite
   495 ;;		_kpDebounce
   496 ;;		_kpInit
   497 ;;		_kpReadKey
   498 ;;		_lcdCommand
   499 ;;		_lcdInit
   500 ;;		_lcdString
   501 ;;		_pinMode
   502 ;;		_rgbColor
   503 ;;		_rgbInit
   504 ;;		_soInit
   505 ;;		_soWrite
   506 ;; This function is called by:
   507 ;;		Startup code after reset
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text0
   512  000674                     __ptext0:
   513                           	callstack 0
   514  000674                     _main:
   515                           	callstack 25
   516  000674                     
   517                           ;main.c: 21:     pinMode(PIN_D0, 0);
   518  000674  0E00               	movlw	0
   519  000676  6E02               	movwf	(pinMode@pin+1)^0,c
   520  000678  0E18               	movlw	24
   521  00067A  6E01               	movwf	pinMode@pin^0,c
   522  00067C  0E00               	movlw	0
   523  00067E  6E04               	movwf	(pinMode@type+1)^0,c
   524  000680  0E00               	movlw	0
   525  000682  6E03               	movwf	pinMode@type^0,c
   526  000684  EC10  F009         	call	_pinMode	;wreg free
   527                           
   528                           ;main.c: 22:     pinMode(PIN_D1, 0);
   529  000688  0E00               	movlw	0
   530  00068A  6E02               	movwf	(pinMode@pin+1)^0,c
   531  00068C  0E19               	movlw	25
   532  00068E  6E01               	movwf	pinMode@pin^0,c
   533  000690  0E00               	movlw	0
   534  000692  6E04               	movwf	(pinMode@type+1)^0,c
   535  000694  0E00               	movlw	0
   536  000696  6E03               	movwf	pinMode@type^0,c
   537  000698  EC10  F009         	call	_pinMode	;wreg free
   538                           
   539                           ;main.c: 23:     pinMode(PIN_D2, 0);
   540  00069C  0E00               	movlw	0
   541  00069E  6E02               	movwf	(pinMode@pin+1)^0,c
   542  0006A0  0E1A               	movlw	26
   543  0006A2  6E01               	movwf	pinMode@pin^0,c
   544  0006A4  0E00               	movlw	0
   545  0006A6  6E04               	movwf	(pinMode@type+1)^0,c
   546  0006A8  0E00               	movlw	0
   547  0006AA  6E03               	movwf	pinMode@type^0,c
   548  0006AC  EC10  F009         	call	_pinMode	;wreg free
   549                           
   550                           ;main.c: 24:     pinMode(PIN_D3, 0);
   551  0006B0  0E00               	movlw	0
   552  0006B2  6E02               	movwf	(pinMode@pin+1)^0,c
   553  0006B4  0E1B               	movlw	27
   554  0006B6  6E01               	movwf	pinMode@pin^0,c
   555  0006B8  0E00               	movlw	0
   556  0006BA  6E04               	movwf	(pinMode@type+1)^0,c
   557  0006BC  0E00               	movlw	0
   558  0006BE  6E03               	movwf	pinMode@type^0,c
   559  0006C0  EC10  F009         	call	_pinMode	;wreg free
   560                           
   561                           ;main.c: 25:     soInit();
   562  0006C4  EC44  F00E         	call	_soInit	;wreg free
   563                           
   564                           ;main.c: 26:     rgbInit();
   565  0006C8  EC25  F00E         	call	_rgbInit	;wreg free
   566                           
   567                           ;main.c: 27:     adcInit();
   568  0006CC  ECE0  F00D         	call	_adcInit	;wreg free
   569  0006D0                     
   570                           ;main.c: 32:     int player=0;
   571  0006D0  0E00               	movlw	0
   572  0006D2  6E18               	movwf	(main@player+1)^0,c
   573  0006D4  0E00               	movlw	0
   574  0006D6  6E17               	movwf	main@player^0,c
   575                           
   576                           ;main.c: 33:     lcdInit();
   577  0006D8  ECE9  F00B         	call	_lcdInit	;wreg free
   578                           
   579                           ;main.c: 34:     kpInit();
   580  0006DC  EC63  F00E         	call	_kpInit	;wreg free
   581  0006E0                     l47:
   582                           
   583                           ;main.c: 43:         v0 = ((v / 1) % 10);
   584  0006E0  C01F  F009         	movff	_v,___awmod@dividend
   585  0006E4  C020  F00A         	movff	_v+1,___awmod@dividend+1
   586  0006E8  0E00               	movlw	0
   587  0006EA  6E0C               	movwf	(___awmod@divisor+1)^0,c
   588  0006EC  0E0A               	movlw	10
   589  0006EE  6E0B               	movwf	___awmod@divisor^0,c
   590  0006F0  EC9B  F00C         	call	___awmod	;wreg free
   591  0006F4  5009               	movf	?___awmod^0,w,c
   592  0006F6  6E2B               	movwf	_v0^0,c
   593                           
   594                           ;main.c: 44:         v1 = ((v / 10) % 10);
   595  0006F8  0E00               	movlw	0
   596  0006FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   597  0006FC  0E0A               	movlw	10
   598  0006FE  6E03               	movwf	___awdiv@divisor^0,c
   599  000700  C01F  F001         	movff	_v,___awdiv@dividend
   600  000704  C020  F002         	movff	_v+1,___awdiv@dividend+1
   601  000708  EC87  F00B         	call	___awdiv	;wreg free
   602  00070C  C001  F009         	movff	?___awdiv,___awmod@dividend
   603  000710  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   604  000714  0E00               	movlw	0
   605  000716  6E0C               	movwf	(___awmod@divisor+1)^0,c
   606  000718  0E0A               	movlw	10
   607  00071A  6E0B               	movwf	___awmod@divisor^0,c
   608  00071C  EC9B  F00C         	call	___awmod	;wreg free
   609  000720  5009               	movf	?___awmod^0,w,c
   610  000722  6E2A               	movwf	_v1^0,c
   611                           
   612                           ;main.c: 45:         v2 = ((v / 100) % 10);
   613  000724  0E00               	movlw	0
   614  000726  6E04               	movwf	(___awdiv@divisor+1)^0,c
   615  000728  0E64               	movlw	100
   616  00072A  6E03               	movwf	___awdiv@divisor^0,c
   617  00072C  C01F  F001         	movff	_v,___awdiv@dividend
   618  000730  C020  F002         	movff	_v+1,___awdiv@dividend+1
   619  000734  EC87  F00B         	call	___awdiv	;wreg free
   620  000738  C001  F009         	movff	?___awdiv,___awmod@dividend
   621  00073C  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   622  000740  0E00               	movlw	0
   623  000742  6E0C               	movwf	(___awmod@divisor+1)^0,c
   624  000744  0E0A               	movlw	10
   625  000746  6E0B               	movwf	___awmod@divisor^0,c
   626  000748  EC9B  F00C         	call	___awmod	;wreg free
   627  00074C  5009               	movf	?___awmod^0,w,c
   628  00074E  6E29               	movwf	_v2^0,c
   629                           
   630                           ;main.c: 46:         v3 = ((v / 1000) % 10);
   631  000750  0E03               	movlw	3
   632  000752  6E04               	movwf	(___awdiv@divisor+1)^0,c
   633  000754  0EE8               	movlw	232
   634  000756  6E03               	movwf	___awdiv@divisor^0,c
   635  000758  C01F  F001         	movff	_v,___awdiv@dividend
   636  00075C  C020  F002         	movff	_v+1,___awdiv@dividend+1
   637  000760  EC87  F00B         	call	___awdiv	;wreg free
   638  000764  C001  F009         	movff	?___awdiv,___awmod@dividend
   639  000768  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   640  00076C  0E00               	movlw	0
   641  00076E  6E0C               	movwf	(___awmod@divisor+1)^0,c
   642  000770  0E0A               	movlw	10
   643  000772  6E0B               	movwf	___awmod@divisor^0,c
   644  000774  EC9B  F00C         	call	___awmod	;wreg free
   645  000778  5009               	movf	?___awmod^0,w,c
   646  00077A  6E28               	movwf	_v3^0,c
   647  00077C                     
   648                           ;main.c: 49:         if(v==60) {
   649  00077C  0E3C               	movlw	60
   650  00077E  181F               	xorwf	_v^0,w,c
   651  000780  1020               	iorwf	(_v+1)^0,w,c
   652  000782  A4D8               	btfss	status,2,c
   653  000784  EFC6  F003         	goto	u2311
   654  000788  EFC8  F003         	goto	u2310
   655  00078C                     u2311:
   656  00078C  EFCC  F003         	goto	l2751
   657  000790                     u2310:
   658  000790                     
   659                           ;main.c: 50:             v = 100;
   660  000790  0E00               	movlw	0
   661  000792  6E20               	movwf	(_v+1)^0,c
   662  000794  0E64               	movlw	100
   663  000796  6E1F               	movwf	_v^0,c
   664  000798                     l2751:
   665                           
   666                           ;main.c: 52:         if(v==160) {
   667  000798  0EA0               	movlw	160
   668  00079A  181F               	xorwf	_v^0,w,c
   669  00079C  1020               	iorwf	(_v+1)^0,w,c
   670  00079E  A4D8               	btfss	status,2,c
   671  0007A0  EFD4  F003         	goto	u2321
   672  0007A4  EFD6  F003         	goto	u2320
   673  0007A8                     u2321:
   674  0007A8  EFDA  F003         	goto	l2755
   675  0007AC                     u2320:
   676  0007AC                     
   677                           ;main.c: 53:             v = 200;
   678  0007AC  0E00               	movlw	0
   679  0007AE  6E20               	movwf	(_v+1)^0,c
   680  0007B0  0EC8               	movlw	200
   681  0007B2  6E1F               	movwf	_v^0,c
   682  0007B4                     l2755:
   683                           
   684                           ;main.c: 55:         if(v==260) {
   685  0007B4  0E04               	movlw	4
   686  0007B6  181F               	xorwf	_v^0,w,c
   687  0007B8  E106               	bnz	u2331
   688  0007BA  0420               	decf	(_v+1)^0,w,c
   689  0007BC  A4D8               	btfss	status,2,c
   690  0007BE  EFE3  F003         	goto	u2331
   691  0007C2  EFE5  F003         	goto	u2330
   692  0007C6                     u2331:
   693  0007C6  EFE9  F003         	goto	l2759
   694  0007CA                     u2330:
   695  0007CA                     
   696                           ;main.c: 56:             v = 0;
   697  0007CA  0E00               	movlw	0
   698  0007CC  6E20               	movwf	(_v+1)^0,c
   699  0007CE  0E00               	movlw	0
   700  0007D0  6E1F               	movwf	_v^0,c
   701  0007D2                     l2759:
   702                           
   703                           ;main.c: 59:         if((v>=0)&&(v<=59)) {
   704  0007D2  BE20               	btfsc	(_v+1)^0,7,c
   705  0007D4  EFEE  F003         	goto	u2341
   706  0007D8  EFF0  F003         	goto	u2340
   707  0007DC                     u2341:
   708  0007DC  EF04  F004         	goto	l2765
   709  0007E0                     u2340:
   710  0007E0  BE20               	btfsc	(_v+1)^0,7,c
   711  0007E2  EFFE  F003         	goto	u2350
   712  0007E6  5020               	movf	(_v+1)^0,w,c
   713  0007E8  E107               	bnz	u2351
   714  0007EA  0E3C               	movlw	60
   715  0007EC  5C1F               	subwf	_v^0,w,c
   716  0007EE  B0D8               	btfsc	status,0,c
   717  0007F0  EFFC  F003         	goto	u2351
   718  0007F4  EFFE  F003         	goto	u2350
   719  0007F8                     u2351:
   720  0007F8  EF04  F004         	goto	l2765
   721  0007FC                     u2350:
   722  0007FC                     
   723                           ;main.c: 60:             rgbColor(2);
   724  0007FC  0E00               	movlw	0
   725  0007FE  6E08               	movwf	(rgbColor@led+1)^0,c
   726  000800  0E02               	movlw	2
   727  000802  6E07               	movwf	rgbColor@led^0,c
   728  000804  EC43  F00C         	call	_rgbColor	;wreg free
   729  000808                     l2765:
   730                           
   731                           ;main.c: 62:         if((v>=100)&&(v<=159)) {
   732  000808  BE20               	btfsc	(_v+1)^0,7,c
   733  00080A  EF10  F004         	goto	u2361
   734  00080E  5020               	movf	(_v+1)^0,w,c
   735  000810  E109               	bnz	u2360
   736  000812  0E64               	movlw	100
   737  000814  5C1F               	subwf	_v^0,w,c
   738  000816  A0D8               	btfss	status,0,c
   739  000818  EF10  F004         	goto	u2361
   740  00081C  EF12  F004         	goto	u2360
   741  000820                     u2361:
   742  000820  EF26  F004         	goto	l2771
   743  000824                     u2360:
   744  000824  BE20               	btfsc	(_v+1)^0,7,c
   745  000826  EF20  F004         	goto	u2370
   746  00082A  5020               	movf	(_v+1)^0,w,c
   747  00082C  E107               	bnz	u2371
   748  00082E  0EA0               	movlw	160
   749  000830  5C1F               	subwf	_v^0,w,c
   750  000832  B0D8               	btfsc	status,0,c
   751  000834  EF1E  F004         	goto	u2371
   752  000838  EF20  F004         	goto	u2370
   753  00083C                     u2371:
   754  00083C  EF26  F004         	goto	l2771
   755  000840                     u2370:
   756  000840                     
   757                           ;main.c: 63:             rgbColor(3);
   758  000840  0E00               	movlw	0
   759  000842  6E08               	movwf	(rgbColor@led+1)^0,c
   760  000844  0E03               	movlw	3
   761  000846  6E07               	movwf	rgbColor@led^0,c
   762  000848  EC43  F00C         	call	_rgbColor	;wreg free
   763  00084C                     l2771:
   764                           
   765                           ;main.c: 65:         if((v>=159)&&(v<=300)) {
   766  00084C  BE20               	btfsc	(_v+1)^0,7,c
   767  00084E  EF32  F004         	goto	u2381
   768  000852  5020               	movf	(_v+1)^0,w,c
   769  000854  E109               	bnz	u2380
   770  000856  0E9F               	movlw	159
   771  000858  5C1F               	subwf	_v^0,w,c
   772  00085A  A0D8               	btfss	status,0,c
   773  00085C  EF32  F004         	goto	u2381
   774  000860  EF34  F004         	goto	u2380
   775  000864                     u2381:
   776  000864  EF48  F004         	goto	l53
   777  000868                     u2380:
   778  000868  BE20               	btfsc	(_v+1)^0,7,c
   779  00086A  EF42  F004         	goto	u2390
   780  00086E  0E2D               	movlw	45
   781  000870  5C1F               	subwf	_v^0,w,c
   782  000872  0E01               	movlw	1
   783  000874  5820               	subwfb	(_v+1)^0,w,c
   784  000876  B0D8               	btfsc	status,0,c
   785  000878  EF40  F004         	goto	u2391
   786  00087C  EF42  F004         	goto	u2390
   787  000880                     u2391:
   788  000880  EF48  F004         	goto	l53
   789  000884                     u2390:
   790  000884                     
   791                           ;main.c: 66:             rgbColor(1);
   792  000884  0E00               	movlw	0
   793  000886  6E08               	movwf	(rgbColor@led+1)^0,c
   794  000888  0E01               	movlw	1
   795  00088A  6E07               	movwf	rgbColor@led^0,c
   796  00088C  EC43  F00C         	call	_rgbColor	;wreg free
   797  000890                     l53:
   798                           
   799                           ;main.c: 71:         digitalWrite(PIN_D0, 0);
   800  000890  0E00               	movlw	0
   801  000892  6E02               	movwf	(digitalWrite@pin+1)^0,c
   802  000894  0E18               	movlw	24
   803  000896  6E01               	movwf	digitalWrite@pin^0,c
   804  000898  0E00               	movlw	0
   805  00089A  6E04               	movwf	(digitalWrite@value+1)^0,c
   806  00089C  0E00               	movlw	0
   807  00089E  6E03               	movwf	digitalWrite@value^0,c
   808  0008A0  ECE9  F007         	call	_digitalWrite	;wreg free
   809                           
   810                           ;main.c: 72:         digitalWrite(PIN_D1, 0);
   811  0008A4  0E00               	movlw	0
   812  0008A6  6E02               	movwf	(digitalWrite@pin+1)^0,c
   813  0008A8  0E19               	movlw	25
   814  0008AA  6E01               	movwf	digitalWrite@pin^0,c
   815  0008AC  0E00               	movlw	0
   816  0008AE  6E04               	movwf	(digitalWrite@value+1)^0,c
   817  0008B0  0E00               	movlw	0
   818  0008B2  6E03               	movwf	digitalWrite@value^0,c
   819  0008B4  ECE9  F007         	call	_digitalWrite	;wreg free
   820                           
   821                           ;main.c: 73:         digitalWrite(PIN_D2, 0);
   822  0008B8  0E00               	movlw	0
   823  0008BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
   824  0008BC  0E1A               	movlw	26
   825  0008BE  6E01               	movwf	digitalWrite@pin^0,c
   826  0008C0  0E00               	movlw	0
   827  0008C2  6E04               	movwf	(digitalWrite@value+1)^0,c
   828  0008C4  0E00               	movlw	0
   829  0008C6  6E03               	movwf	digitalWrite@value^0,c
   830  0008C8  ECE9  F007         	call	_digitalWrite	;wreg free
   831                           
   832                           ;main.c: 74:         digitalWrite(PIN_D3, 0);
   833  0008CC  0E00               	movlw	0
   834  0008CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
   835  0008D0  0E1B               	movlw	27
   836  0008D2  6E01               	movwf	digitalWrite@pin^0,c
   837  0008D4  0E00               	movlw	0
   838  0008D6  6E04               	movwf	(digitalWrite@value+1)^0,c
   839  0008D8  0E00               	movlw	0
   840  0008DA  6E03               	movwf	digitalWrite@value^0,c
   841  0008DC  ECE9  F007         	call	_digitalWrite	;wreg free
   842                           
   843                           ;main.c: 75:         soWrite(0x00);
   844  0008E0  0E00               	movlw	0
   845  0008E2  6E08               	movwf	(soWrite@value+1)^0,c
   846  0008E4  0E00               	movlw	0
   847  0008E6  6E07               	movwf	soWrite@value^0,c
   848  0008E8  ECB9  F00D         	call	_soWrite	;wreg free
   849                           
   850                           ;main.c: 76:         kpDebounce();
   851  0008EC  ECEC  F00A         	call	_kpDebounce	;wreg free
   852                           
   853                           ;main.c: 77:         lcdCommand(0x80);
   854  0008F0  0E80               	movlw	128
   855  0008F2  ECE0  F00E         	call	_lcdCommand
   856                           
   857                           ;main.c: 79:         switch(player) {
   858  0008F6  EFC9  F007         	goto	l3069
   859  0008FA                     l2777:
   860                           
   861                           ;main.c: 81:                 if(v2 == 3) {
   862  0008FA  0E03               	movlw	3
   863  0008FC  1829               	xorwf	_v2^0,w,c
   864  0008FE  A4D8               	btfss	status,2,c
   865  000900  EF84  F004         	goto	u2401
   866  000904  EF86  F004         	goto	u2400
   867  000908                     u2401:
   868  000908  EF8A  F004         	goto	l2781
   869  00090C                     u2400:
   870  00090C                     
   871                           ;main.c: 82:                     v = 0;
   872  00090C  0E00               	movlw	0
   873  00090E  6E20               	movwf	(_v+1)^0,c
   874  000910  0E00               	movlw	0
   875  000912  6E1F               	movwf	_v^0,c
   876  000914                     l2781:
   877                           
   878                           ;main.c: 84:                 kpDebounce();
   879  000914  ECEC  F00A         	call	_kpDebounce	;wreg free
   880  000918                     
   881                           ;main.c: 85:                 lcdString("Radio 1");
   882  000918  0E45               	movlw	low STR_1
   883  00091A  6E0F               	movwf	lcdString@msg^0,c
   884  00091C  0E06               	movlw	high STR_1
   885  00091E  6E10               	movwf	(lcdString@msg+1)^0,c
   886  000920  EC8E  F00D         	call	_lcdString	;wreg free
   887  000924                     
   888                           ;main.c: 86:                 lcdCommand(0xC0);
   889  000924  0EC0               	movlw	192
   890  000926  ECE0  F00E         	call	_lcdCommand
   891  00092A                     
   892                           ;main.c: 87:                 lcdString("BEATLES");
   893  00092A  0E65               	movlw	low STR_2
   894  00092C  6E0F               	movwf	lcdString@msg^0,c
   895  00092E  0E06               	movlw	high STR_2
   896  000930  6E10               	movwf	(lcdString@msg+1)^0,c
   897  000932  EC8E  F00D         	call	_lcdString	;wreg free
   898                           
   899                           ;main.c: 88:                 switch(display) {
   900  000936  EF0D  F005         	goto	l2831
   901  00093A                     l2789:
   902                           
   903                           ;main.c: 90:                         soWrite(valor[v0]);
   904  00093A  0E11               	movlw	low _valor
   905  00093C  242B               	addwf	_v0^0,w,c
   906  00093E  6EF6               	movwf	tblptrl,c
   907  000940  6AF7               	clrf	tblptrh,c
   908  000942  0E06               	movlw	high _valor
   909  000944  22F7               	addwfc	tblptrh,f,c
   910  000946                     	if	0	;There are less than 3 active tblptr bytes
   911  000946                     	endif
   912  000946  0008               	tblrd		*
   913  000948  50F5               	movf	tablat,w,c
   914  00094A  6E07               	movwf	soWrite@value^0,c
   915  00094C  6A08               	clrf	(soWrite@value+1)^0,c
   916  00094E  ECB9  F00D         	call	_soWrite	;wreg free
   917  000952                     
   918                           ;main.c: 91:                         digitalWrite(PIN_D3, 1);
   919  000952  0E00               	movlw	0
   920  000954  6E02               	movwf	(digitalWrite@pin+1)^0,c
   921  000956  0E1B               	movlw	27
   922  000958  6E01               	movwf	digitalWrite@pin^0,c
   923  00095A  0E00               	movlw	0
   924  00095C  6E04               	movwf	(digitalWrite@value+1)^0,c
   925  00095E  0E01               	movlw	1
   926  000960  6E03               	movwf	digitalWrite@value^0,c
   927  000962  ECE9  F007         	call	_digitalWrite	;wreg free
   928  000966                     
   929                           ;main.c: 92:                         display = 1;
   930  000966  0E01               	movlw	1
   931  000968  6E2C               	movwf	_display^0,c
   932  00096A                     l2795:
   933                           
   934                           ;main.c: 93:                         v++;
   935  00096A  4A1F               	infsnz	_v^0,f,c
   936  00096C  2A20               	incf	(_v+1)^0,f,c
   937  00096E                     
   938                           ;main.c: 94:                         atraso_ms(20);
   939  00096E  0E00               	movlw	0
   940  000970  6E02               	movwf	(atraso_ms@num+1)^0,c
   941  000972  0E14               	movlw	20
   942  000974  6E01               	movwf	atraso_ms@num^0,c
   943  000976  EC2F  F00D         	call	_atraso_ms	;wreg free
   944                           
   945                           ;main.c: 95:                         break;
   946  00097A  EF2A  F005         	goto	l2833
   947  00097E                     l2799:
   948                           
   949                           ;main.c: 97:                         soWrite(valor[v1]);
   950  00097E  0E11               	movlw	low _valor
   951  000980  242A               	addwf	_v1^0,w,c
   952  000982  6EF6               	movwf	tblptrl,c
   953  000984  6AF7               	clrf	tblptrh,c
   954  000986  0E06               	movlw	high _valor
   955  000988  22F7               	addwfc	tblptrh,f,c
   956  00098A                     	if	0	;There are less than 3 active tblptr bytes
   957  00098A                     	endif
   958  00098A  0008               	tblrd		*
   959  00098C  50F5               	movf	tablat,w,c
   960  00098E  6E07               	movwf	soWrite@value^0,c
   961  000990  6A08               	clrf	(soWrite@value+1)^0,c
   962  000992  ECB9  F00D         	call	_soWrite	;wreg free
   963  000996                     
   964                           ;main.c: 98:                         digitalWrite(PIN_D2, 1);
   965  000996  0E00               	movlw	0
   966  000998  6E02               	movwf	(digitalWrite@pin+1)^0,c
   967  00099A  0E1A               	movlw	26
   968  00099C  6E01               	movwf	digitalWrite@pin^0,c
   969  00099E  0E00               	movlw	0
   970  0009A0  6E04               	movwf	(digitalWrite@value+1)^0,c
   971  0009A2  0E01               	movlw	1
   972  0009A4  6E03               	movwf	digitalWrite@value^0,c
   973  0009A6  ECE9  F007         	call	_digitalWrite	;wreg free
   974  0009AA                     
   975                           ;main.c: 99:                         display = 2;
   976  0009AA  0E02               	movlw	2
   977  0009AC  6E2C               	movwf	_display^0,c
   978  0009AE  EFB5  F004         	goto	l2795
   979  0009B2                     l2809:
   980                           
   981                           ;main.c: 104:                         soWrite(valor[v2]);
   982  0009B2  0E11               	movlw	low _valor
   983  0009B4  2429               	addwf	_v2^0,w,c
   984  0009B6  6EF6               	movwf	tblptrl,c
   985  0009B8  6AF7               	clrf	tblptrh,c
   986  0009BA  0E06               	movlw	high _valor
   987  0009BC  22F7               	addwfc	tblptrh,f,c
   988  0009BE                     	if	0	;There are less than 3 active tblptr bytes
   989  0009BE                     	endif
   990  0009BE  0008               	tblrd		*
   991  0009C0  50F5               	movf	tablat,w,c
   992  0009C2  6E07               	movwf	soWrite@value^0,c
   993  0009C4  6A08               	clrf	(soWrite@value+1)^0,c
   994  0009C6  ECB9  F00D         	call	_soWrite	;wreg free
   995  0009CA                     
   996                           ;main.c: 105:                         digitalWrite(PIN_D1, 1);
   997  0009CA  0E00               	movlw	0
   998  0009CC  6E02               	movwf	(digitalWrite@pin+1)^0,c
   999  0009CE  0E19               	movlw	25
  1000  0009D0  6E01               	movwf	digitalWrite@pin^0,c
  1001  0009D2  0E00               	movlw	0
  1002  0009D4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1003  0009D6  0E01               	movlw	1
  1004  0009D8  6E03               	movwf	digitalWrite@value^0,c
  1005  0009DA  ECE9  F007         	call	_digitalWrite	;wreg free
  1006  0009DE                     
  1007                           ;main.c: 106:                         display = 3;
  1008  0009DE  0E03               	movlw	3
  1009  0009E0  6E2C               	movwf	_display^0,c
  1010  0009E2  EFB5  F004         	goto	l2795
  1011  0009E6                     l2819:
  1012                           
  1013                           ;main.c: 111:                         soWrite(valor[v3]);
  1014  0009E6  0E11               	movlw	low _valor
  1015  0009E8  2428               	addwf	_v3^0,w,c
  1016  0009EA  6EF6               	movwf	tblptrl,c
  1017  0009EC  6AF7               	clrf	tblptrh,c
  1018  0009EE  0E06               	movlw	high _valor
  1019  0009F0  22F7               	addwfc	tblptrh,f,c
  1020  0009F2                     	if	0	;There are less than 3 active tblptr bytes
  1021  0009F2                     	endif
  1022  0009F2  0008               	tblrd		*
  1023  0009F4  50F5               	movf	tablat,w,c
  1024  0009F6  6E07               	movwf	soWrite@value^0,c
  1025  0009F8  6A08               	clrf	(soWrite@value+1)^0,c
  1026  0009FA  ECB9  F00D         	call	_soWrite	;wreg free
  1027  0009FE                     
  1028                           ;main.c: 112:                         digitalWrite(PIN_D0, 1);
  1029  0009FE  0E00               	movlw	0
  1030  000A00  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1031  000A02  0E18               	movlw	24
  1032  000A04  6E01               	movwf	digitalWrite@pin^0,c
  1033  000A06  0E00               	movlw	0
  1034  000A08  6E04               	movwf	(digitalWrite@value+1)^0,c
  1035  000A0A  0E01               	movlw	1
  1036  000A0C  6E03               	movwf	digitalWrite@value^0,c
  1037  000A0E  ECE9  F007         	call	_digitalWrite	;wreg free
  1038  000A12                     
  1039                           ;main.c: 113:                         display = 0;
  1040  000A12  0E00               	movlw	0
  1041  000A14  6E2C               	movwf	_display^0,c
  1042  000A16  EFB5  F004         	goto	l2795
  1043  000A1A                     l2831:
  1044  000A1A  502C               	movf	_display^0,w,c
  1045  000A1C  6E15               	movwf	??_main^0,c
  1046  000A1E  6A16               	clrf	(??_main+1)^0,c
  1047                           
  1048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1049                           ; Switch size 1, requested type "simple"
  1050                           ; Number of cases is 1, Range of values is 0 to 0
  1051                           ; switch strategies available:
  1052                           ; Name         Instructions Cycles
  1053                           ; simple_byte            4     3 (average)
  1054                           ;	Chosen strategy is simple_byte
  1055  000A20  5016               	movf	(??_main+1)^0,w,c
  1056  000A22  0A00               	xorlw	0	; case 0
  1057  000A24  B4D8               	btfsc	status,2,c
  1058  000A26  EF17  F005         	goto	l3259
  1059  000A2A  EF2A  F005         	goto	l2833
  1060  000A2E                     l3259:
  1061                           
  1062                           ; Switch size 1, requested type "simple"
  1063                           ; Number of cases is 4, Range of values is 0 to 3
  1064                           ; switch strategies available:
  1065                           ; Name         Instructions Cycles
  1066                           ; simple_byte           13     7 (average)
  1067                           ;	Chosen strategy is simple_byte
  1068  000A2E  5015               	movf	??_main^0,w,c
  1069  000A30  0A00               	xorlw	0	; case 0
  1070  000A32  B4D8               	btfsc	status,2,c
  1071  000A34  EF9D  F004         	goto	l2789
  1072  000A38  0A01               	xorlw	1	; case 1
  1073  000A3A  B4D8               	btfsc	status,2,c
  1074  000A3C  EFBF  F004         	goto	l2799
  1075  000A40  0A03               	xorlw	3	; case 2
  1076  000A42  B4D8               	btfsc	status,2,c
  1077  000A44  EFD9  F004         	goto	l2809
  1078  000A48  0A01               	xorlw	1	; case 3
  1079  000A4A  B4D8               	btfsc	status,2,c
  1080  000A4C  EFF3  F004         	goto	l2819
  1081  000A50  EF2A  F005         	goto	l2833
  1082  000A54                     l2833:
  1083                           
  1084                           ;main.c: 119:                 if(kpReadKey() == 'R') {
  1085  000A54  ECF3  F00C         	call	_kpReadKey	;wreg free
  1086  000A58  0A52               	xorlw	82
  1087  000A5A  A4D8               	btfss	status,2,c
  1088  000A5C  EF32  F005         	goto	u2411
  1089  000A60  EF34  F005         	goto	u2410
  1090  000A64                     u2411:
  1091  000A64  EF47  F005         	goto	l2841
  1092  000A68                     u2410:
  1093  000A68                     
  1094                           ;main.c: 120:                     lcdCommand(0x01);
  1095  000A68  0E01               	movlw	1
  1096  000A6A  ECE0  F00E         	call	_lcdCommand
  1097  000A6E                     l2837:
  1098                           
  1099                           ;main.c: 121:                     player = 1;
  1100  000A6E  0E00               	movlw	0
  1101  000A70  6E18               	movwf	(main@player+1)^0,c
  1102  000A72  0E01               	movlw	1
  1103  000A74  6E17               	movwf	main@player^0,c
  1104  000A76                     l2839:
  1105                           
  1106                           ;main.c: 122:                     v= 0;
  1107  000A76  0E00               	movlw	0
  1108  000A78  6E20               	movwf	(_v+1)^0,c
  1109  000A7A  0E00               	movlw	0
  1110  000A7C  6E1F               	movwf	_v^0,c
  1111                           
  1112                           ;main.c: 123:                     atraso_ms(1000);
  1113  000A7E  0E03               	movlw	3
  1114  000A80  6E02               	movwf	(atraso_ms@num+1)^0,c
  1115  000A82  0EE8               	movlw	232
  1116  000A84  6E01               	movwf	atraso_ms@num^0,c
  1117  000A86  EC2F  F00D         	call	_atraso_ms	;wreg free
  1118                           
  1119                           ;main.c: 124:                 } else if (kpReadKey() == 'L') {
  1120  000A8A  EF70  F003         	goto	l47
  1121  000A8E                     l2841:
  1122  000A8E  ECF3  F00C         	call	_kpReadKey	;wreg free
  1123  000A92  0A4C               	xorlw	76
  1124  000A94  A4D8               	btfss	status,2,c
  1125  000A96  EF4F  F005         	goto	u2421
  1126  000A9A  EF51  F005         	goto	u2420
  1127  000A9E                     u2421:
  1128  000A9E  EF70  F003         	goto	l47
  1129  000AA2                     u2420:
  1130  000AA2                     
  1131                           ;main.c: 125:                     lcdCommand(0x01);
  1132  000AA2  0E01               	movlw	1
  1133  000AA4  ECE0  F00E         	call	_lcdCommand
  1134  000AA8                     l2845:
  1135                           
  1136                           ;main.c: 126:                     player = 3;
  1137  000AA8  0E00               	movlw	0
  1138  000AAA  6E18               	movwf	(main@player+1)^0,c
  1139  000AAC  0E03               	movlw	3
  1140  000AAE  6E17               	movwf	main@player^0,c
  1141  000AB0  EF3B  F005         	goto	l2839
  1142  000AB4                     l2849:
  1143                           
  1144                           ;main.c: 133:                 if(v2 == 3) {
  1145  000AB4  0E03               	movlw	3
  1146  000AB6  1829               	xorwf	_v2^0,w,c
  1147  000AB8  A4D8               	btfss	status,2,c
  1148  000ABA  EF61  F005         	goto	u2431
  1149  000ABE  EF63  F005         	goto	u2430
  1150  000AC2                     u2431:
  1151  000AC2  EF67  F005         	goto	l2853
  1152  000AC6                     u2430:
  1153  000AC6                     
  1154                           ;main.c: 134:                     v = 0;
  1155  000AC6  0E00               	movlw	0
  1156  000AC8  6E20               	movwf	(_v+1)^0,c
  1157  000ACA  0E00               	movlw	0
  1158  000ACC  6E1F               	movwf	_v^0,c
  1159  000ACE                     l2853:
  1160                           
  1161                           ;main.c: 136:                 kpDebounce();
  1162  000ACE  ECEC  F00A         	call	_kpDebounce	;wreg free
  1163  000AD2                     
  1164                           ;main.c: 137:                 lcdString("Radio 2");
  1165  000AD2  0E4D               	movlw	low STR_3
  1166  000AD4  6E0F               	movwf	lcdString@msg^0,c
  1167  000AD6  0E06               	movlw	high STR_3
  1168  000AD8  6E10               	movwf	(lcdString@msg+1)^0,c
  1169  000ADA  EC8E  F00D         	call	_lcdString	;wreg free
  1170  000ADE                     
  1171                           ;main.c: 138:                 lcdCommand(0xC0);
  1172  000ADE  0EC0               	movlw	192
  1173  000AE0  ECE0  F00E         	call	_lcdCommand
  1174  000AE4                     
  1175                           ;main.c: 139:                 lcdString("ACDC");
  1176  000AE4  0E6D               	movlw	low STR_4
  1177  000AE6  6E0F               	movwf	lcdString@msg^0,c
  1178  000AE8  0E06               	movlw	high STR_4
  1179  000AEA  6E10               	movwf	(lcdString@msg+1)^0,c
  1180  000AEC  EC8E  F00D         	call	_lcdString	;wreg free
  1181                           
  1182                           ;main.c: 140:                 switch(display) {
  1183  000AF0  EFEA  F005         	goto	l2903
  1184  000AF4                     l2861:
  1185                           
  1186                           ;main.c: 142:                         soWrite(valor[v0]);
  1187  000AF4  0E11               	movlw	low _valor
  1188  000AF6  242B               	addwf	_v0^0,w,c
  1189  000AF8  6EF6               	movwf	tblptrl,c
  1190  000AFA  6AF7               	clrf	tblptrh,c
  1191  000AFC  0E06               	movlw	high _valor
  1192  000AFE  22F7               	addwfc	tblptrh,f,c
  1193  000B00                     	if	0	;There are less than 3 active tblptr bytes
  1194  000B00                     	endif
  1195  000B00  0008               	tblrd		*
  1196  000B02  50F5               	movf	tablat,w,c
  1197  000B04  6E07               	movwf	soWrite@value^0,c
  1198  000B06  6A08               	clrf	(soWrite@value+1)^0,c
  1199  000B08  ECB9  F00D         	call	_soWrite	;wreg free
  1200  000B0C                     
  1201                           ;main.c: 143:                         digitalWrite(PIN_D3, 1);
  1202  000B0C  0E00               	movlw	0
  1203  000B0E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1204  000B10  0E1B               	movlw	27
  1205  000B12  6E01               	movwf	digitalWrite@pin^0,c
  1206  000B14  0E00               	movlw	0
  1207  000B16  6E04               	movwf	(digitalWrite@value+1)^0,c
  1208  000B18  0E01               	movlw	1
  1209  000B1A  6E03               	movwf	digitalWrite@value^0,c
  1210  000B1C  ECE9  F007         	call	_digitalWrite	;wreg free
  1211  000B20                     
  1212                           ;main.c: 144:                         display = 1;
  1213  000B20  0E01               	movlw	1
  1214  000B22  6E2C               	movwf	_display^0,c
  1215  000B24                     l2867:
  1216                           
  1217                           ;main.c: 145:                         v++;
  1218  000B24  4A1F               	infsnz	_v^0,f,c
  1219  000B26  2A20               	incf	(_v+1)^0,f,c
  1220  000B28                     
  1221                           ;main.c: 146:                         atraso_ms(20);
  1222  000B28  0E00               	movlw	0
  1223  000B2A  6E02               	movwf	(atraso_ms@num+1)^0,c
  1224  000B2C  0E14               	movlw	20
  1225  000B2E  6E01               	movwf	atraso_ms@num^0,c
  1226  000B30  EC2F  F00D         	call	_atraso_ms	;wreg free
  1227                           
  1228                           ;main.c: 147:                         break;
  1229  000B34  EF07  F006         	goto	l2905
  1230  000B38                     l2871:
  1231                           
  1232                           ;main.c: 149:                         soWrite(valor[v1]);
  1233  000B38  0E11               	movlw	low _valor
  1234  000B3A  242A               	addwf	_v1^0,w,c
  1235  000B3C  6EF6               	movwf	tblptrl,c
  1236  000B3E  6AF7               	clrf	tblptrh,c
  1237  000B40  0E06               	movlw	high _valor
  1238  000B42  22F7               	addwfc	tblptrh,f,c
  1239  000B44                     	if	0	;There are less than 3 active tblptr bytes
  1240  000B44                     	endif
  1241  000B44  0008               	tblrd		*
  1242  000B46  50F5               	movf	tablat,w,c
  1243  000B48  6E07               	movwf	soWrite@value^0,c
  1244  000B4A  6A08               	clrf	(soWrite@value+1)^0,c
  1245  000B4C  ECB9  F00D         	call	_soWrite	;wreg free
  1246  000B50                     
  1247                           ;main.c: 150:                         digitalWrite(PIN_D2, 1);
  1248  000B50  0E00               	movlw	0
  1249  000B52  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1250  000B54  0E1A               	movlw	26
  1251  000B56  6E01               	movwf	digitalWrite@pin^0,c
  1252  000B58  0E00               	movlw	0
  1253  000B5A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1254  000B5C  0E01               	movlw	1
  1255  000B5E  6E03               	movwf	digitalWrite@value^0,c
  1256  000B60  ECE9  F007         	call	_digitalWrite	;wreg free
  1257  000B64                     
  1258                           ;main.c: 151:                         display = 2;
  1259  000B64  0E02               	movlw	2
  1260  000B66  6E2C               	movwf	_display^0,c
  1261  000B68  EF92  F005         	goto	l2867
  1262  000B6C                     l2881:
  1263                           
  1264                           ;main.c: 156:                         soWrite(valor[v2]);
  1265  000B6C  0E11               	movlw	low _valor
  1266  000B6E  2429               	addwf	_v2^0,w,c
  1267  000B70  6EF6               	movwf	tblptrl,c
  1268  000B72  6AF7               	clrf	tblptrh,c
  1269  000B74  0E06               	movlw	high _valor
  1270  000B76  22F7               	addwfc	tblptrh,f,c
  1271  000B78                     	if	0	;There are less than 3 active tblptr bytes
  1272  000B78                     	endif
  1273  000B78  0008               	tblrd		*
  1274  000B7A  50F5               	movf	tablat,w,c
  1275  000B7C  6E07               	movwf	soWrite@value^0,c
  1276  000B7E  6A08               	clrf	(soWrite@value+1)^0,c
  1277  000B80  ECB9  F00D         	call	_soWrite	;wreg free
  1278  000B84                     
  1279                           ;main.c: 157:                         digitalWrite(PIN_D1, 1);
  1280  000B84  0E00               	movlw	0
  1281  000B86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1282  000B88  0E19               	movlw	25
  1283  000B8A  6E01               	movwf	digitalWrite@pin^0,c
  1284  000B8C  0E00               	movlw	0
  1285  000B8E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1286  000B90  0E01               	movlw	1
  1287  000B92  6E03               	movwf	digitalWrite@value^0,c
  1288  000B94  ECE9  F007         	call	_digitalWrite	;wreg free
  1289  000B98                     
  1290                           ;main.c: 158:                         display = 3;
  1291  000B98  0E03               	movlw	3
  1292  000B9A  6E2C               	movwf	_display^0,c
  1293  000B9C  EF92  F005         	goto	l2867
  1294  000BA0                     l2891:
  1295                           
  1296                           ;main.c: 163:                         soWrite(valor[v3]);
  1297  000BA0  0E11               	movlw	low _valor
  1298  000BA2  2428               	addwf	_v3^0,w,c
  1299  000BA4  6EF6               	movwf	tblptrl,c
  1300  000BA6  6AF7               	clrf	tblptrh,c
  1301  000BA8  0E06               	movlw	high _valor
  1302  000BAA  22F7               	addwfc	tblptrh,f,c
  1303  000BAC                     	if	0	;There are less than 3 active tblptr bytes
  1304  000BAC                     	endif
  1305  000BAC  0008               	tblrd		*
  1306  000BAE  50F5               	movf	tablat,w,c
  1307  000BB0  6E07               	movwf	soWrite@value^0,c
  1308  000BB2  6A08               	clrf	(soWrite@value+1)^0,c
  1309  000BB4  ECB9  F00D         	call	_soWrite	;wreg free
  1310  000BB8                     
  1311                           ;main.c: 164:                         digitalWrite(PIN_D0, 1);
  1312  000BB8  0E00               	movlw	0
  1313  000BBA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1314  000BBC  0E18               	movlw	24
  1315  000BBE  6E01               	movwf	digitalWrite@pin^0,c
  1316  000BC0  0E00               	movlw	0
  1317  000BC2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1318  000BC4  0E01               	movlw	1
  1319  000BC6  6E03               	movwf	digitalWrite@value^0,c
  1320  000BC8  ECE9  F007         	call	_digitalWrite	;wreg free
  1321  000BCC                     
  1322                           ;main.c: 165:                         display = 0;
  1323  000BCC  0E00               	movlw	0
  1324  000BCE  6E2C               	movwf	_display^0,c
  1325  000BD0  EF92  F005         	goto	l2867
  1326  000BD4                     l2903:
  1327  000BD4  502C               	movf	_display^0,w,c
  1328  000BD6  6E15               	movwf	??_main^0,c
  1329  000BD8  6A16               	clrf	(??_main+1)^0,c
  1330                           
  1331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 1, Range of values is 0 to 0
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte            4     3 (average)
  1337                           ;	Chosen strategy is simple_byte
  1338  000BDA  5016               	movf	(??_main+1)^0,w,c
  1339  000BDC  0A00               	xorlw	0	; case 0
  1340  000BDE  B4D8               	btfsc	status,2,c
  1341  000BE0  EFF4  F005         	goto	l3261
  1342  000BE4  EF07  F006         	goto	l2905
  1343  000BE8                     l3261:
  1344                           
  1345                           ; Switch size 1, requested type "simple"
  1346                           ; Number of cases is 4, Range of values is 0 to 3
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte           13     7 (average)
  1350                           ;	Chosen strategy is simple_byte
  1351  000BE8  5015               	movf	??_main^0,w,c
  1352  000BEA  0A00               	xorlw	0	; case 0
  1353  000BEC  B4D8               	btfsc	status,2,c
  1354  000BEE  EF7A  F005         	goto	l2861
  1355  000BF2  0A01               	xorlw	1	; case 1
  1356  000BF4  B4D8               	btfsc	status,2,c
  1357  000BF6  EF9C  F005         	goto	l2871
  1358  000BFA  0A03               	xorlw	3	; case 2
  1359  000BFC  B4D8               	btfsc	status,2,c
  1360  000BFE  EFB6  F005         	goto	l2881
  1361  000C02  0A01               	xorlw	1	; case 3
  1362  000C04  B4D8               	btfsc	status,2,c
  1363  000C06  EFD0  F005         	goto	l2891
  1364  000C0A  EF07  F006         	goto	l2905
  1365  000C0E                     l2905:
  1366                           
  1367                           ;main.c: 171:                 if(kpReadKey() == 'R') {
  1368  000C0E  ECF3  F00C         	call	_kpReadKey	;wreg free
  1369  000C12  0A52               	xorlw	82
  1370  000C14  A4D8               	btfss	status,2,c
  1371  000C16  EF0F  F006         	goto	u2441
  1372  000C1A  EF11  F006         	goto	u2440
  1373  000C1E                     u2441:
  1374  000C1E  EF1A  F006         	goto	l2913
  1375  000C22                     u2440:
  1376  000C22                     
  1377                           ;main.c: 172:                     lcdCommand(0x01);
  1378  000C22  0E01               	movlw	1
  1379  000C24  ECE0  F00E         	call	_lcdCommand
  1380  000C28                     l2909:
  1381                           
  1382                           ;main.c: 173:                     player = 2;
  1383  000C28  0E00               	movlw	0
  1384  000C2A  6E18               	movwf	(main@player+1)^0,c
  1385  000C2C  0E02               	movlw	2
  1386  000C2E  6E17               	movwf	main@player^0,c
  1387  000C30  EF3B  F005         	goto	l2839
  1388  000C34                     l2913:
  1389  000C34  ECF3  F00C         	call	_kpReadKey	;wreg free
  1390  000C38  0A4C               	xorlw	76
  1391  000C3A  A4D8               	btfss	status,2,c
  1392  000C3C  EF22  F006         	goto	u2451
  1393  000C40  EF24  F006         	goto	u2450
  1394  000C44                     u2451:
  1395  000C44  EF70  F003         	goto	l47
  1396  000C48                     u2450:
  1397  000C48                     
  1398                           ;main.c: 177:                     lcdCommand(0x01);
  1399  000C48  0E01               	movlw	1
  1400  000C4A  ECE0  F00E         	call	_lcdCommand
  1401  000C4E                     l2917:
  1402                           
  1403                           ;main.c: 178:                     player = 0;
  1404  000C4E  0E00               	movlw	0
  1405  000C50  6E18               	movwf	(main@player+1)^0,c
  1406  000C52  0E00               	movlw	0
  1407  000C54  6E17               	movwf	main@player^0,c
  1408  000C56  EF3B  F005         	goto	l2839
  1409  000C5A                     l2921:
  1410                           
  1411                           ;main.c: 185:                 if(v2 == 3) {
  1412  000C5A  0E03               	movlw	3
  1413  000C5C  1829               	xorwf	_v2^0,w,c
  1414  000C5E  A4D8               	btfss	status,2,c
  1415  000C60  EF34  F006         	goto	u2461
  1416  000C64  EF36  F006         	goto	u2460
  1417  000C68                     u2461:
  1418  000C68  EF3A  F006         	goto	l2925
  1419  000C6C                     u2460:
  1420  000C6C                     
  1421                           ;main.c: 186:                     v = 0;
  1422  000C6C  0E00               	movlw	0
  1423  000C6E  6E20               	movwf	(_v+1)^0,c
  1424  000C70  0E00               	movlw	0
  1425  000C72  6E1F               	movwf	_v^0,c
  1426  000C74                     l2925:
  1427                           
  1428                           ;main.c: 188:                 kpDebounce();
  1429  000C74  ECEC  F00A         	call	_kpDebounce	;wreg free
  1430  000C78                     
  1431                           ;main.c: 189:                 lcdString("Radio 3");
  1432  000C78  0E55               	movlw	low STR_5
  1433  000C7A  6E0F               	movwf	lcdString@msg^0,c
  1434  000C7C  0E06               	movlw	high STR_5
  1435  000C7E  6E10               	movwf	(lcdString@msg+1)^0,c
  1436  000C80  EC8E  F00D         	call	_lcdString	;wreg free
  1437  000C84                     
  1438                           ;main.c: 190:                 lcdCommand(0xC0);
  1439  000C84  0EC0               	movlw	192
  1440  000C86  ECE0  F00E         	call	_lcdCommand
  1441  000C8A                     
  1442                           ;main.c: 191:                 lcdString("IMAGINE DRAGONS");
  1443  000C8A  0E2B               	movlw	low STR_6
  1444  000C8C  6E0F               	movwf	lcdString@msg^0,c
  1445  000C8E  0E06               	movlw	high STR_6
  1446  000C90  6E10               	movwf	(lcdString@msg+1)^0,c
  1447  000C92  EC8E  F00D         	call	_lcdString	;wreg free
  1448                           
  1449                           ;main.c: 192:                 switch(display) {
  1450  000C96  EFBD  F006         	goto	l2975
  1451  000C9A                     l2933:
  1452                           
  1453                           ;main.c: 194:                         soWrite(valor[v0]);
  1454  000C9A  0E11               	movlw	low _valor
  1455  000C9C  242B               	addwf	_v0^0,w,c
  1456  000C9E  6EF6               	movwf	tblptrl,c
  1457  000CA0  6AF7               	clrf	tblptrh,c
  1458  000CA2  0E06               	movlw	high _valor
  1459  000CA4  22F7               	addwfc	tblptrh,f,c
  1460  000CA6                     	if	0	;There are less than 3 active tblptr bytes
  1461  000CA6                     	endif
  1462  000CA6  0008               	tblrd		*
  1463  000CA8  50F5               	movf	tablat,w,c
  1464  000CAA  6E07               	movwf	soWrite@value^0,c
  1465  000CAC  6A08               	clrf	(soWrite@value+1)^0,c
  1466  000CAE  ECB9  F00D         	call	_soWrite	;wreg free
  1467  000CB2                     
  1468                           ;main.c: 195:                         digitalWrite(PIN_D3, 1);
  1469  000CB2  0E00               	movlw	0
  1470  000CB4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1471  000CB6  0E1B               	movlw	27
  1472  000CB8  6E01               	movwf	digitalWrite@pin^0,c
  1473  000CBA  0E00               	movlw	0
  1474  000CBC  6E04               	movwf	(digitalWrite@value+1)^0,c
  1475  000CBE  0E01               	movlw	1
  1476  000CC0  6E03               	movwf	digitalWrite@value^0,c
  1477  000CC2  ECE9  F007         	call	_digitalWrite	;wreg free
  1478  000CC6                     
  1479                           ;main.c: 196:                         display = 1;
  1480  000CC6  0E01               	movlw	1
  1481  000CC8  6E2C               	movwf	_display^0,c
  1482  000CCA                     l2939:
  1483                           
  1484                           ;main.c: 197:                         v++;
  1485  000CCA  4A1F               	infsnz	_v^0,f,c
  1486  000CCC  2A20               	incf	(_v+1)^0,f,c
  1487  000CCE                     
  1488                           ;main.c: 198:                         atraso_ms(20);
  1489  000CCE  0E00               	movlw	0
  1490  000CD0  6E02               	movwf	(atraso_ms@num+1)^0,c
  1491  000CD2  0E14               	movlw	20
  1492  000CD4  6E01               	movwf	atraso_ms@num^0,c
  1493  000CD6  EC2F  F00D         	call	_atraso_ms	;wreg free
  1494                           
  1495                           ;main.c: 199:                         break;
  1496  000CDA  EFDA  F006         	goto	l2977
  1497  000CDE                     l2943:
  1498                           
  1499                           ;main.c: 201:                         soWrite(valor[v1]);
  1500  000CDE  0E11               	movlw	low _valor
  1501  000CE0  242A               	addwf	_v1^0,w,c
  1502  000CE2  6EF6               	movwf	tblptrl,c
  1503  000CE4  6AF7               	clrf	tblptrh,c
  1504  000CE6  0E06               	movlw	high _valor
  1505  000CE8  22F7               	addwfc	tblptrh,f,c
  1506  000CEA                     	if	0	;There are less than 3 active tblptr bytes
  1507  000CEA                     	endif
  1508  000CEA  0008               	tblrd		*
  1509  000CEC  50F5               	movf	tablat,w,c
  1510  000CEE  6E07               	movwf	soWrite@value^0,c
  1511  000CF0  6A08               	clrf	(soWrite@value+1)^0,c
  1512  000CF2  ECB9  F00D         	call	_soWrite	;wreg free
  1513  000CF6                     
  1514                           ;main.c: 202:                         digitalWrite(PIN_D2, 1);
  1515  000CF6  0E00               	movlw	0
  1516  000CF8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1517  000CFA  0E1A               	movlw	26
  1518  000CFC  6E01               	movwf	digitalWrite@pin^0,c
  1519  000CFE  0E00               	movlw	0
  1520  000D00  6E04               	movwf	(digitalWrite@value+1)^0,c
  1521  000D02  0E01               	movlw	1
  1522  000D04  6E03               	movwf	digitalWrite@value^0,c
  1523  000D06  ECE9  F007         	call	_digitalWrite	;wreg free
  1524  000D0A                     
  1525                           ;main.c: 203:                         display = 2;
  1526  000D0A  0E02               	movlw	2
  1527  000D0C  6E2C               	movwf	_display^0,c
  1528  000D0E  EF65  F006         	goto	l2939
  1529  000D12                     l2953:
  1530                           
  1531                           ;main.c: 208:                         soWrite(valor[v2]);
  1532  000D12  0E11               	movlw	low _valor
  1533  000D14  2429               	addwf	_v2^0,w,c
  1534  000D16  6EF6               	movwf	tblptrl,c
  1535  000D18  6AF7               	clrf	tblptrh,c
  1536  000D1A  0E06               	movlw	high _valor
  1537  000D1C  22F7               	addwfc	tblptrh,f,c
  1538  000D1E                     	if	0	;There are less than 3 active tblptr bytes
  1539  000D1E                     	endif
  1540  000D1E  0008               	tblrd		*
  1541  000D20  50F5               	movf	tablat,w,c
  1542  000D22  6E07               	movwf	soWrite@value^0,c
  1543  000D24  6A08               	clrf	(soWrite@value+1)^0,c
  1544  000D26  ECB9  F00D         	call	_soWrite	;wreg free
  1545  000D2A                     
  1546                           ;main.c: 209:                         digitalWrite(PIN_D1, 1);
  1547  000D2A  0E00               	movlw	0
  1548  000D2C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1549  000D2E  0E19               	movlw	25
  1550  000D30  6E01               	movwf	digitalWrite@pin^0,c
  1551  000D32  0E00               	movlw	0
  1552  000D34  6E04               	movwf	(digitalWrite@value+1)^0,c
  1553  000D36  0E01               	movlw	1
  1554  000D38  6E03               	movwf	digitalWrite@value^0,c
  1555  000D3A  ECE9  F007         	call	_digitalWrite	;wreg free
  1556  000D3E                     
  1557                           ;main.c: 210:                         display = 3;
  1558  000D3E  0E03               	movlw	3
  1559  000D40  6E2C               	movwf	_display^0,c
  1560  000D42  EF65  F006         	goto	l2939
  1561  000D46                     l2963:
  1562                           
  1563                           ;main.c: 215:                         soWrite(valor[v3]);
  1564  000D46  0E11               	movlw	low _valor
  1565  000D48  2428               	addwf	_v3^0,w,c
  1566  000D4A  6EF6               	movwf	tblptrl,c
  1567  000D4C  6AF7               	clrf	tblptrh,c
  1568  000D4E  0E06               	movlw	high _valor
  1569  000D50  22F7               	addwfc	tblptrh,f,c
  1570  000D52                     	if	0	;There are less than 3 active tblptr bytes
  1571  000D52                     	endif
  1572  000D52  0008               	tblrd		*
  1573  000D54  50F5               	movf	tablat,w,c
  1574  000D56  6E07               	movwf	soWrite@value^0,c
  1575  000D58  6A08               	clrf	(soWrite@value+1)^0,c
  1576  000D5A  ECB9  F00D         	call	_soWrite	;wreg free
  1577  000D5E                     
  1578                           ;main.c: 216:                         digitalWrite(PIN_D0, 1);
  1579  000D5E  0E00               	movlw	0
  1580  000D60  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1581  000D62  0E18               	movlw	24
  1582  000D64  6E01               	movwf	digitalWrite@pin^0,c
  1583  000D66  0E00               	movlw	0
  1584  000D68  6E04               	movwf	(digitalWrite@value+1)^0,c
  1585  000D6A  0E01               	movlw	1
  1586  000D6C  6E03               	movwf	digitalWrite@value^0,c
  1587  000D6E  ECE9  F007         	call	_digitalWrite	;wreg free
  1588  000D72                     
  1589                           ;main.c: 217:                         display = 0;
  1590  000D72  0E00               	movlw	0
  1591  000D74  6E2C               	movwf	_display^0,c
  1592  000D76  EF65  F006         	goto	l2939
  1593  000D7A                     l2975:
  1594  000D7A  502C               	movf	_display^0,w,c
  1595  000D7C  6E15               	movwf	??_main^0,c
  1596  000D7E  6A16               	clrf	(??_main+1)^0,c
  1597                           
  1598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1599                           ; Switch size 1, requested type "simple"
  1600                           ; Number of cases is 1, Range of values is 0 to 0
  1601                           ; switch strategies available:
  1602                           ; Name         Instructions Cycles
  1603                           ; simple_byte            4     3 (average)
  1604                           ;	Chosen strategy is simple_byte
  1605  000D80  5016               	movf	(??_main+1)^0,w,c
  1606  000D82  0A00               	xorlw	0	; case 0
  1607  000D84  B4D8               	btfsc	status,2,c
  1608  000D86  EFC7  F006         	goto	l3263
  1609  000D8A  EFDA  F006         	goto	l2977
  1610  000D8E                     l3263:
  1611                           
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 4, Range of values is 0 to 3
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte           13     7 (average)
  1617                           ;	Chosen strategy is simple_byte
  1618  000D8E  5015               	movf	??_main^0,w,c
  1619  000D90  0A00               	xorlw	0	; case 0
  1620  000D92  B4D8               	btfsc	status,2,c
  1621  000D94  EF4D  F006         	goto	l2933
  1622  000D98  0A01               	xorlw	1	; case 1
  1623  000D9A  B4D8               	btfsc	status,2,c
  1624  000D9C  EF6F  F006         	goto	l2943
  1625  000DA0  0A03               	xorlw	3	; case 2
  1626  000DA2  B4D8               	btfsc	status,2,c
  1627  000DA4  EF89  F006         	goto	l2953
  1628  000DA8  0A01               	xorlw	1	; case 3
  1629  000DAA  B4D8               	btfsc	status,2,c
  1630  000DAC  EFA3  F006         	goto	l2963
  1631  000DB0  EFDA  F006         	goto	l2977
  1632  000DB4                     l2977:
  1633                           
  1634                           ;main.c: 223:                 if(kpReadKey() == 'R') {
  1635  000DB4  ECF3  F00C         	call	_kpReadKey	;wreg free
  1636  000DB8  0A52               	xorlw	82
  1637  000DBA  A4D8               	btfss	status,2,c
  1638  000DBC  EFE2  F006         	goto	u2471
  1639  000DC0  EFE4  F006         	goto	u2470
  1640  000DC4                     u2471:
  1641  000DC4  EFE9  F006         	goto	l2985
  1642  000DC8                     u2470:
  1643  000DC8                     
  1644                           ;main.c: 224:                     lcdCommand(0x01);
  1645  000DC8  0E01               	movlw	1
  1646  000DCA  ECE0  F00E         	call	_lcdCommand
  1647  000DCE  EF54  F005         	goto	l2845
  1648  000DD2                     l2985:
  1649  000DD2  ECF3  F00C         	call	_kpReadKey	;wreg free
  1650  000DD6  0A4C               	xorlw	76
  1651  000DD8  A4D8               	btfss	status,2,c
  1652  000DDA  EFF1  F006         	goto	u2481
  1653  000DDE  EFF3  F006         	goto	u2480
  1654  000DE2                     u2481:
  1655  000DE2  EF70  F003         	goto	l47
  1656  000DE6                     u2480:
  1657  000DE6                     
  1658                           ;main.c: 229:                     lcdCommand(0x01);
  1659  000DE6  0E01               	movlw	1
  1660  000DE8  ECE0  F00E         	call	_lcdCommand
  1661  000DEC  EF37  F005         	goto	l2837
  1662  000DF0                     l2993:
  1663                           
  1664                           ;main.c: 237:                 if(v2 == 3) {
  1665  000DF0  0E03               	movlw	3
  1666  000DF2  1829               	xorwf	_v2^0,w,c
  1667  000DF4  A4D8               	btfss	status,2,c
  1668  000DF6  EFFF  F006         	goto	u2491
  1669  000DFA  EF01  F007         	goto	u2490
  1670  000DFE                     u2491:
  1671  000DFE  EF05  F007         	goto	l2997
  1672  000E02                     u2490:
  1673  000E02                     
  1674                           ;main.c: 238:                     v = 0;
  1675  000E02  0E00               	movlw	0
  1676  000E04  6E20               	movwf	(_v+1)^0,c
  1677  000E06  0E00               	movlw	0
  1678  000E08  6E1F               	movwf	_v^0,c
  1679  000E0A                     l2997:
  1680                           
  1681                           ;main.c: 240:                 kpDebounce();
  1682  000E0A  ECEC  F00A         	call	_kpDebounce	;wreg free
  1683  000E0E                     
  1684                           ;main.c: 241:                 lcdString("Radio 4");
  1685  000E0E  0E5D               	movlw	low STR_7
  1686  000E10  6E0F               	movwf	lcdString@msg^0,c
  1687  000E12  0E06               	movlw	high STR_7
  1688  000E14  6E10               	movwf	(lcdString@msg+1)^0,c
  1689  000E16  EC8E  F00D         	call	_lcdString	;wreg free
  1690  000E1A                     
  1691                           ;main.c: 242:                 lcdCommand(0xC0);
  1692  000E1A  0EC0               	movlw	192
  1693  000E1C  ECE0  F00E         	call	_lcdCommand
  1694  000E20                     
  1695                           ;main.c: 243:                 lcdString("BLACKPINK");
  1696  000E20  0E3B               	movlw	low STR_8
  1697  000E22  6E0F               	movwf	lcdString@msg^0,c
  1698  000E24  0E06               	movlw	high STR_8
  1699  000E26  6E10               	movwf	(lcdString@msg+1)^0,c
  1700  000E28  EC8E  F00D         	call	_lcdString	;wreg free
  1701                           
  1702                           ;main.c: 244:                 switch(display) {
  1703  000E2C  EF88  F007         	goto	l3047
  1704  000E30                     l3005:
  1705                           
  1706                           ;main.c: 246:                         soWrite(valor[v0]);
  1707  000E30  0E11               	movlw	low _valor
  1708  000E32  242B               	addwf	_v0^0,w,c
  1709  000E34  6EF6               	movwf	tblptrl,c
  1710  000E36  6AF7               	clrf	tblptrh,c
  1711  000E38  0E06               	movlw	high _valor
  1712  000E3A  22F7               	addwfc	tblptrh,f,c
  1713  000E3C                     	if	0	;There are less than 3 active tblptr bytes
  1714  000E3C                     	endif
  1715  000E3C  0008               	tblrd		*
  1716  000E3E  50F5               	movf	tablat,w,c
  1717  000E40  6E07               	movwf	soWrite@value^0,c
  1718  000E42  6A08               	clrf	(soWrite@value+1)^0,c
  1719  000E44  ECB9  F00D         	call	_soWrite	;wreg free
  1720  000E48                     
  1721                           ;main.c: 247:                         digitalWrite(PIN_D3, 1);
  1722  000E48  0E00               	movlw	0
  1723  000E4A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1724  000E4C  0E1B               	movlw	27
  1725  000E4E  6E01               	movwf	digitalWrite@pin^0,c
  1726  000E50  0E00               	movlw	0
  1727  000E52  6E04               	movwf	(digitalWrite@value+1)^0,c
  1728  000E54  0E01               	movlw	1
  1729  000E56  6E03               	movwf	digitalWrite@value^0,c
  1730  000E58  ECE9  F007         	call	_digitalWrite	;wreg free
  1731  000E5C                     
  1732                           ;main.c: 248:                         display = 1;
  1733  000E5C  0E01               	movlw	1
  1734  000E5E  6E2C               	movwf	_display^0,c
  1735  000E60                     l3011:
  1736                           
  1737                           ;main.c: 249:                         v++;
  1738  000E60  4A1F               	infsnz	_v^0,f,c
  1739  000E62  2A20               	incf	(_v+1)^0,f,c
  1740  000E64                     
  1741                           ;main.c: 250:                         atraso_ms(20);
  1742  000E64  0E00               	movlw	0
  1743  000E66  6E02               	movwf	(atraso_ms@num+1)^0,c
  1744  000E68  0E14               	movlw	20
  1745  000E6A  6E01               	movwf	atraso_ms@num^0,c
  1746  000E6C  EC2F  F00D         	call	_atraso_ms	;wreg free
  1747                           
  1748                           ;main.c: 251:                         break;
  1749  000E70  EFA5  F007         	goto	l3049
  1750  000E74                     l3015:
  1751                           
  1752                           ;main.c: 253:                         soWrite(valor[v1]);
  1753  000E74  0E11               	movlw	low _valor
  1754  000E76  242A               	addwf	_v1^0,w,c
  1755  000E78  6EF6               	movwf	tblptrl,c
  1756  000E7A  6AF7               	clrf	tblptrh,c
  1757  000E7C  0E06               	movlw	high _valor
  1758  000E7E  22F7               	addwfc	tblptrh,f,c
  1759  000E80                     	if	0	;There are less than 3 active tblptr bytes
  1760  000E80                     	endif
  1761  000E80  0008               	tblrd		*
  1762  000E82  50F5               	movf	tablat,w,c
  1763  000E84  6E07               	movwf	soWrite@value^0,c
  1764  000E86  6A08               	clrf	(soWrite@value+1)^0,c
  1765  000E88  ECB9  F00D         	call	_soWrite	;wreg free
  1766  000E8C                     
  1767                           ;main.c: 254:                         digitalWrite(PIN_D2, 1);
  1768  000E8C  0E00               	movlw	0
  1769  000E8E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1770  000E90  0E1A               	movlw	26
  1771  000E92  6E01               	movwf	digitalWrite@pin^0,c
  1772  000E94  0E00               	movlw	0
  1773  000E96  6E04               	movwf	(digitalWrite@value+1)^0,c
  1774  000E98  0E01               	movlw	1
  1775  000E9A  6E03               	movwf	digitalWrite@value^0,c
  1776  000E9C  ECE9  F007         	call	_digitalWrite	;wreg free
  1777  000EA0                     
  1778                           ;main.c: 255:                         display = 2;
  1779  000EA0  0E02               	movlw	2
  1780  000EA2  6E2C               	movwf	_display^0,c
  1781  000EA4  EF30  F007         	goto	l3011
  1782  000EA8                     l3025:
  1783                           
  1784                           ;main.c: 260:                         soWrite(valor[v2]);
  1785  000EA8  0E11               	movlw	low _valor
  1786  000EAA  2429               	addwf	_v2^0,w,c
  1787  000EAC  6EF6               	movwf	tblptrl,c
  1788  000EAE  6AF7               	clrf	tblptrh,c
  1789  000EB0  0E06               	movlw	high _valor
  1790  000EB2  22F7               	addwfc	tblptrh,f,c
  1791  000EB4                     	if	0	;There are less than 3 active tblptr bytes
  1792  000EB4                     	endif
  1793  000EB4  0008               	tblrd		*
  1794  000EB6  50F5               	movf	tablat,w,c
  1795  000EB8  6E07               	movwf	soWrite@value^0,c
  1796  000EBA  6A08               	clrf	(soWrite@value+1)^0,c
  1797  000EBC  ECB9  F00D         	call	_soWrite	;wreg free
  1798  000EC0                     
  1799                           ;main.c: 261:                         digitalWrite(PIN_D1, 1);
  1800  000EC0  0E00               	movlw	0
  1801  000EC2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1802  000EC4  0E19               	movlw	25
  1803  000EC6  6E01               	movwf	digitalWrite@pin^0,c
  1804  000EC8  0E00               	movlw	0
  1805  000ECA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1806  000ECC  0E01               	movlw	1
  1807  000ECE  6E03               	movwf	digitalWrite@value^0,c
  1808  000ED0  ECE9  F007         	call	_digitalWrite	;wreg free
  1809  000ED4                     
  1810                           ;main.c: 262:                         display = 3;
  1811  000ED4  0E03               	movlw	3
  1812  000ED6  6E2C               	movwf	_display^0,c
  1813  000ED8  EF30  F007         	goto	l3011
  1814  000EDC                     l3035:
  1815                           
  1816                           ;main.c: 267:                         soWrite(valor[v3]);
  1817  000EDC  0E11               	movlw	low _valor
  1818  000EDE  2428               	addwf	_v3^0,w,c
  1819  000EE0  6EF6               	movwf	tblptrl,c
  1820  000EE2  6AF7               	clrf	tblptrh,c
  1821  000EE4  0E06               	movlw	high _valor
  1822  000EE6  22F7               	addwfc	tblptrh,f,c
  1823  000EE8                     	if	0	;There are less than 3 active tblptr bytes
  1824  000EE8                     	endif
  1825  000EE8  0008               	tblrd		*
  1826  000EEA  50F5               	movf	tablat,w,c
  1827  000EEC  6E07               	movwf	soWrite@value^0,c
  1828  000EEE  6A08               	clrf	(soWrite@value+1)^0,c
  1829  000EF0  ECB9  F00D         	call	_soWrite	;wreg free
  1830  000EF4                     
  1831                           ;main.c: 268:                         digitalWrite(PIN_D0, 1);
  1832  000EF4  0E00               	movlw	0
  1833  000EF6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1834  000EF8  0E18               	movlw	24
  1835  000EFA  6E01               	movwf	digitalWrite@pin^0,c
  1836  000EFC  0E00               	movlw	0
  1837  000EFE  6E04               	movwf	(digitalWrite@value+1)^0,c
  1838  000F00  0E01               	movlw	1
  1839  000F02  6E03               	movwf	digitalWrite@value^0,c
  1840  000F04  ECE9  F007         	call	_digitalWrite	;wreg free
  1841  000F08                     
  1842                           ;main.c: 269:                         display = 0;
  1843  000F08  0E00               	movlw	0
  1844  000F0A  6E2C               	movwf	_display^0,c
  1845  000F0C  EF30  F007         	goto	l3011
  1846  000F10                     l3047:
  1847  000F10  502C               	movf	_display^0,w,c
  1848  000F12  6E15               	movwf	??_main^0,c
  1849  000F14  6A16               	clrf	(??_main+1)^0,c
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ;	Chosen strategy is simple_byte
  1858  000F16  5016               	movf	(??_main+1)^0,w,c
  1859  000F18  0A00               	xorlw	0	; case 0
  1860  000F1A  B4D8               	btfsc	status,2,c
  1861  000F1C  EF92  F007         	goto	l3265
  1862  000F20  EFA5  F007         	goto	l3049
  1863  000F24                     l3265:
  1864                           
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 4, Range of values is 0 to 3
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte           13     7 (average)
  1870                           ;	Chosen strategy is simple_byte
  1871  000F24  5015               	movf	??_main^0,w,c
  1872  000F26  0A00               	xorlw	0	; case 0
  1873  000F28  B4D8               	btfsc	status,2,c
  1874  000F2A  EF18  F007         	goto	l3005
  1875  000F2E  0A01               	xorlw	1	; case 1
  1876  000F30  B4D8               	btfsc	status,2,c
  1877  000F32  EF3A  F007         	goto	l3015
  1878  000F36  0A03               	xorlw	3	; case 2
  1879  000F38  B4D8               	btfsc	status,2,c
  1880  000F3A  EF54  F007         	goto	l3025
  1881  000F3E  0A01               	xorlw	1	; case 3
  1882  000F40  B4D8               	btfsc	status,2,c
  1883  000F42  EF6E  F007         	goto	l3035
  1884  000F46  EFA5  F007         	goto	l3049
  1885  000F4A                     l3049:
  1886                           
  1887                           ;main.c: 275:                 if(kpReadKey() == 'R') {
  1888  000F4A  ECF3  F00C         	call	_kpReadKey	;wreg free
  1889  000F4E  0A52               	xorlw	82
  1890  000F50  A4D8               	btfss	status,2,c
  1891  000F52  EFAD  F007         	goto	u2501
  1892  000F56  EFAF  F007         	goto	u2500
  1893  000F5A                     u2501:
  1894  000F5A  EFB4  F007         	goto	l3057
  1895  000F5E                     u2500:
  1896  000F5E                     
  1897                           ;main.c: 276:                     lcdCommand(0x01);
  1898  000F5E  0E01               	movlw	1
  1899  000F60  ECE0  F00E         	call	_lcdCommand
  1900  000F64  EF27  F006         	goto	l2917
  1901  000F68                     l3057:
  1902  000F68  ECF3  F00C         	call	_kpReadKey	;wreg free
  1903  000F6C  0A4C               	xorlw	76
  1904  000F6E  A4D8               	btfss	status,2,c
  1905  000F70  EFBC  F007         	goto	u2511
  1906  000F74  EFBE  F007         	goto	u2510
  1907  000F78                     u2511:
  1908  000F78  EF70  F003         	goto	l47
  1909  000F7C                     u2510:
  1910  000F7C                     
  1911                           ;main.c: 281:                     lcdCommand(0x01);
  1912  000F7C  0E01               	movlw	1
  1913  000F7E  ECE0  F00E         	call	_lcdCommand
  1914  000F82  EF14  F006         	goto	l2909
  1915  000F86                     l3065:
  1916                           
  1917                           ;main.c: 289:                 player = 0;
  1918  000F86  0E00               	movlw	0
  1919  000F88  6E18               	movwf	(main@player+1)^0,c
  1920  000F8A  0E00               	movlw	0
  1921  000F8C  6E17               	movwf	main@player^0,c
  1922                           
  1923                           ;main.c: 290:                 break;
  1924  000F8E  EF70  F003         	goto	l47
  1925  000F92                     l3069:
  1926  000F92  C017  F015         	movff	main@player,??_main
  1927  000F96  C018  F016         	movff	main@player+1,??_main+1
  1928                           
  1929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1930                           ; Switch size 1, requested type "simple"
  1931                           ; Number of cases is 1, Range of values is 0 to 0
  1932                           ; switch strategies available:
  1933                           ; Name         Instructions Cycles
  1934                           ; simple_byte            4     3 (average)
  1935                           ;	Chosen strategy is simple_byte
  1936  000F9A  5016               	movf	(??_main+1)^0,w,c
  1937  000F9C  0A00               	xorlw	0	; case 0
  1938  000F9E  B4D8               	btfsc	status,2,c
  1939  000FA0  EFD4  F007         	goto	l3267
  1940  000FA4  EFC3  F007         	goto	l3065
  1941  000FA8                     l3267:
  1942                           
  1943                           ; Switch size 1, requested type "simple"
  1944                           ; Number of cases is 4, Range of values is 0 to 3
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte           13     7 (average)
  1948                           ;	Chosen strategy is simple_byte
  1949  000FA8  5015               	movf	??_main^0,w,c
  1950  000FAA  0A00               	xorlw	0	; case 0
  1951  000FAC  B4D8               	btfsc	status,2,c
  1952  000FAE  EF7D  F004         	goto	l2777
  1953  000FB2  0A01               	xorlw	1	; case 1
  1954  000FB4  B4D8               	btfsc	status,2,c
  1955  000FB6  EF5A  F005         	goto	l2849
  1956  000FBA  0A03               	xorlw	3	; case 2
  1957  000FBC  B4D8               	btfsc	status,2,c
  1958  000FBE  EF2D  F006         	goto	l2921
  1959  000FC2  0A01               	xorlw	1	; case 3
  1960  000FC4  B4D8               	btfsc	status,2,c
  1961  000FC6  EFF8  F006         	goto	l2993
  1962  000FCA  EFC3  F007         	goto	l3065
  1963  000FCE  EF00  F000         	goto	start
  1964  000FD2                     __end_of_main:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _rgbInit *****************
  1968 ;; Defined at:
  1969 ;;		line 45 in file "rgb.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1983 ;;      Params:         0       0       0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 1
  1990 ;; This function calls:
  1991 ;;		_pinMode
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text1
  1998  001C4A                     __ptext1:
  1999                           	callstack 0
  2000  001C4A                     _rgbInit:
  2001                           	callstack 29
  2002  001C4A                     
  2003                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  2004  001C4A  0E00               	movlw	0
  2005  001C4C  6E02               	movwf	(pinMode@pin+1)^0,c
  2006  001C4E  0E18               	movlw	24
  2007  001C50  6E01               	movwf	pinMode@pin^0,c
  2008  001C52  0E00               	movlw	0
  2009  001C54  6E04               	movwf	(pinMode@type+1)^0,c
  2010  001C56  0E00               	movlw	0
  2011  001C58  6E03               	movwf	pinMode@type^0,c
  2012  001C5A  EC10  F009         	call	_pinMode	;wreg free
  2013                           
  2014                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  2015  001C5E  0E00               	movlw	0
  2016  001C60  6E02               	movwf	(pinMode@pin+1)^0,c
  2017  001C62  0E19               	movlw	25
  2018  001C64  6E01               	movwf	pinMode@pin^0,c
  2019  001C66  0E00               	movlw	0
  2020  001C68  6E04               	movwf	(pinMode@type+1)^0,c
  2021  001C6A  0E00               	movlw	0
  2022  001C6C  6E03               	movwf	pinMode@type^0,c
  2023  001C6E  EC10  F009         	call	_pinMode	;wreg free
  2024                           
  2025                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  2026  001C72  0E00               	movlw	0
  2027  001C74  6E02               	movwf	(pinMode@pin+1)^0,c
  2028  001C76  0E1A               	movlw	26
  2029  001C78  6E01               	movwf	pinMode@pin^0,c
  2030  001C7A  0E00               	movlw	0
  2031  001C7C  6E04               	movwf	(pinMode@type+1)^0,c
  2032  001C7E  0E00               	movlw	0
  2033  001C80  6E03               	movwf	pinMode@type^0,c
  2034  001C82  EC10  F009         	call	_pinMode	;wreg free
  2035  001C86  0012               	return		;funcret
  2036  001C88                     __end_of_rgbInit:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _rgbColor *****************
  2040 ;; Defined at:
  2041 ;;		line 3 in file "rgb.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  led             2    6[COMRAM] int 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2055 ;;      Params:         2       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0
  2058 ;;      Totals:         2       0       0       0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		_digitalWrite
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text2
  2070  001886                     __ptext2:
  2071                           	callstack 0
  2072  001886                     _rgbColor:
  2073                           	callstack 29
  2074  001886                     
  2075                           ;rgb.c: 4:  if (led & 1) {
  2076  001886  A007               	btfss	rgbColor@led^0,0,c
  2077  001888  EF48  F00C         	goto	u1971
  2078  00188C  EF4A  F00C         	goto	u1970
  2079  001890                     u1971:
  2080  001890  EF56  F00C         	goto	l2515
  2081  001894                     u1970:
  2082  001894                     
  2083                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  2084  001894  0E00               	movlw	0
  2085  001896  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2086  001898  0E18               	movlw	24
  2087  00189A  6E01               	movwf	digitalWrite@pin^0,c
  2088  00189C  0E00               	movlw	0
  2089  00189E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2090  0018A0  0E01               	movlw	1
  2091  0018A2  6E03               	movwf	digitalWrite@value^0,c
  2092  0018A4  ECE9  F007         	call	_digitalWrite	;wreg free
  2093                           
  2094                           ;rgb.c: 6:  } else {
  2095  0018A8  EF60  F00C         	goto	l2517
  2096  0018AC                     l2515:
  2097                           
  2098                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  2099  0018AC  0E00               	movlw	0
  2100  0018AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2101  0018B0  0E18               	movlw	24
  2102  0018B2  6E01               	movwf	digitalWrite@pin^0,c
  2103  0018B4  0E00               	movlw	0
  2104  0018B6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2105  0018B8  0E00               	movlw	0
  2106  0018BA  6E03               	movwf	digitalWrite@value^0,c
  2107  0018BC  ECE9  F007         	call	_digitalWrite	;wreg free
  2108  0018C0                     l2517:
  2109                           
  2110                           ;rgb.c: 9:  if (led & 2) {
  2111  0018C0  A207               	btfss	rgbColor@led^0,1,c
  2112  0018C2  EF65  F00C         	goto	u1981
  2113  0018C6  EF67  F00C         	goto	u1980
  2114  0018CA                     u1981:
  2115  0018CA  EF73  F00C         	goto	l2521
  2116  0018CE                     u1980:
  2117  0018CE                     
  2118                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2119  0018CE  0E00               	movlw	0
  2120  0018D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2121  0018D2  0E19               	movlw	25
  2122  0018D4  6E01               	movwf	digitalWrite@pin^0,c
  2123  0018D6  0E00               	movlw	0
  2124  0018D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2125  0018DA  0E01               	movlw	1
  2126  0018DC  6E03               	movwf	digitalWrite@value^0,c
  2127  0018DE  ECE9  F007         	call	_digitalWrite	;wreg free
  2128                           
  2129                           ;rgb.c: 11:  } else {
  2130  0018E2  EF7D  F00C         	goto	l2523
  2131  0018E6                     l2521:
  2132                           
  2133                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2134  0018E6  0E00               	movlw	0
  2135  0018E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2136  0018EA  0E19               	movlw	25
  2137  0018EC  6E01               	movwf	digitalWrite@pin^0,c
  2138  0018EE  0E00               	movlw	0
  2139  0018F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2140  0018F2  0E00               	movlw	0
  2141  0018F4  6E03               	movwf	digitalWrite@value^0,c
  2142  0018F6  ECE9  F007         	call	_digitalWrite	;wreg free
  2143  0018FA                     l2523:
  2144                           
  2145                           ;rgb.c: 14:  if (led & 4) {
  2146  0018FA  A407               	btfss	rgbColor@led^0,2,c
  2147  0018FC  EF82  F00C         	goto	u1991
  2148  001900  EF84  F00C         	goto	u1990
  2149  001904                     u1991:
  2150  001904  EF90  F00C         	goto	l2527
  2151  001908                     u1990:
  2152  001908                     
  2153                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2154  001908  0E00               	movlw	0
  2155  00190A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2156  00190C  0E1A               	movlw	26
  2157  00190E  6E01               	movwf	digitalWrite@pin^0,c
  2158  001910  0E00               	movlw	0
  2159  001912  6E04               	movwf	(digitalWrite@value+1)^0,c
  2160  001914  0E01               	movlw	1
  2161  001916  6E03               	movwf	digitalWrite@value^0,c
  2162  001918  ECE9  F007         	call	_digitalWrite	;wreg free
  2163                           
  2164                           ;rgb.c: 16:  } else {
  2165  00191C  EF9A  F00C         	goto	l423
  2166  001920                     l2527:
  2167                           
  2168                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2169  001920  0E00               	movlw	0
  2170  001922  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2171  001924  0E1A               	movlw	26
  2172  001926  6E01               	movwf	digitalWrite@pin^0,c
  2173  001928  0E00               	movlw	0
  2174  00192A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2175  00192C  0E00               	movlw	0
  2176  00192E  6E03               	movwf	digitalWrite@value^0,c
  2177  001930  ECE9  F007         	call	_digitalWrite	;wreg free
  2178  001934                     l423:
  2179  001934  0012               	return		;funcret
  2180  001936                     __end_of_rgbColor:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _lcdString *****************
  2184 ;; Defined at:
  2185 ;;		line 57 in file "lcd.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2188 ;;		 -> STR_8(10), STR_7(8), STR_6(16), STR_5(8), 
  2189 ;;		 -> STR_4(5), STR_3(8), STR_2(8), STR_1(8), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  i               2   18[COMRAM] int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         2       0       0       0       0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0
  2204 ;;      Totals:         6       0       0       0       0       0       0
  2205 ;;Total ram usage:        6 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 5
  2208 ;; This function calls:
  2209 ;;		_lcdChar
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text3
  2216  001B1C                     __ptext3:
  2217                           	callstack 0
  2218  001B1C                     _lcdString:
  2219                           	callstack 25
  2220  001B1C                     
  2221                           ;lcd.c: 58:  int i = 0;
  2222  001B1C  0E00               	movlw	0
  2223  001B1E  6E14               	movwf	(lcdString@i+1)^0,c
  2224  001B20  0E00               	movlw	0
  2225  001B22  6E13               	movwf	lcdString@i^0,c
  2226                           
  2227                           ;lcd.c: 59:  while (msg[i] != 0) {
  2228  001B24  EFA4  F00D         	goto	l2563
  2229  001B28                     l2559:
  2230                           
  2231                           ;lcd.c: 60:   lcdChar(msg[i]);
  2232  001B28  5013               	movf	lcdString@i^0,w,c
  2233  001B2A  240F               	addwf	lcdString@msg^0,w,c
  2234  001B2C  6E11               	movwf	??_lcdString^0,c
  2235  001B2E  5014               	movf	(lcdString@i+1)^0,w,c
  2236  001B30  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2237  001B32  6E12               	movwf	(??_lcdString+1)^0,c
  2238  001B34  C011  FFF6         	movff	??_lcdString,tblptrl
  2239  001B38  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2240  001B3C                     	if	0	;tblptru may be non-zero
  2241  001B3C                     	endif
  2242  001B3C                     	if	0	;tblptru may be non-zero
  2243  001B3C                     	endif
  2244  001B3C  0008               	tblrd		*
  2245  001B3E  50F5               	movf	tablat,w,c
  2246  001B40  ECD1  F00E         	call	_lcdChar
  2247  001B44                     
  2248                           ;lcd.c: 61:   i++;
  2249  001B44  4A13               	infsnz	lcdString@i^0,f,c
  2250  001B46  2A14               	incf	(lcdString@i+1)^0,f,c
  2251  001B48                     l2563:
  2252                           
  2253                           ;lcd.c: 59:  while (msg[i] != 0) {
  2254  001B48  5013               	movf	lcdString@i^0,w,c
  2255  001B4A  240F               	addwf	lcdString@msg^0,w,c
  2256  001B4C  6E11               	movwf	??_lcdString^0,c
  2257  001B4E  5014               	movf	(lcdString@i+1)^0,w,c
  2258  001B50  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2259  001B52  6E12               	movwf	(??_lcdString+1)^0,c
  2260  001B54  C011  FFF6         	movff	??_lcdString,tblptrl
  2261  001B58  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2262  001B5C                     	if	0	;tblptru may be non-zero
  2263  001B5C                     	endif
  2264  001B5C                     	if	0	;tblptru may be non-zero
  2265  001B5C                     	endif
  2266  001B5C  0008               	tblrd		*
  2267  001B5E  50F5               	movf	tablat,w,c
  2268  001B60  0900               	iorlw	0
  2269  001B62  A4D8               	btfss	status,2,c
  2270  001B64  EFB6  F00D         	goto	u2081
  2271  001B68  EFB8  F00D         	goto	u2080
  2272  001B6C                     u2081:
  2273  001B6C  EF94  F00D         	goto	l2559
  2274  001B70                     u2080:
  2275  001B70  0012               	return		;funcret
  2276  001B72                     __end_of_lcdString:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _lcdChar *****************
  2280 ;; Defined at:
  2281 ;;		line 52 in file "lcd.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  value           1    wreg     unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  value           1   13[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         0       0       0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 4
  2302 ;; This function calls:
  2303 ;;		_delayMicro
  2304 ;;		_pushByte
  2305 ;; This function is called by:
  2306 ;;		_lcdString
  2307 ;;		_lcdNumber
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text4
  2312  001DA2                     __ptext4:
  2313                           	callstack 0
  2314  001DA2                     _lcdChar:
  2315                           	callstack 25
  2316                           
  2317                           ;incstack = 0
  2318                           ;lcdChar@value stored from wreg
  2319  001DA2  6E0E               	movwf	lcdChar@value^0,c
  2320  001DA4                     
  2321                           ;lcd.c: 53:  pushByte(value, 1);
  2322  001DA4  0E00               	movlw	0
  2323  001DA6  6E0B               	movwf	(pushByte@rs+1)^0,c
  2324  001DA8  0E01               	movlw	1
  2325  001DAA  6E0A               	movwf	pushByte@rs^0,c
  2326  001DAC  500E               	movf	lcdChar@value^0,w,c
  2327  001DAE  EC61  F00D         	call	_pushByte
  2328  001DB2                     
  2329                           ;lcd.c: 54:  delayMicro(80);
  2330  001DB2  0E00               	movlw	0
  2331  001DB4  6E02               	movwf	(delayMicro@a+1)^0,c
  2332  001DB6  0E50               	movlw	80
  2333  001DB8  6E01               	movwf	delayMicro@a^0,c
  2334  001DBA  ECFA  F00E         	call	_delayMicro	;wreg free
  2335  001DBE  0012               	return		;funcret
  2336  001DC0                     __end_of_lcdChar:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _lcdInit *****************
  2340 ;; Defined at:
  2341 ;;		line 72 in file "lcd.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 5
  2362 ;; This function calls:
  2363 ;;		_delayMicro
  2364 ;;		_delayMili
  2365 ;;		_lcdCommand
  2366 ;;		_pinMode
  2367 ;;		_pushNibble
  2368 ;;		_soInit
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text5
  2375  0017D2                     __ptext5:
  2376                           	callstack 0
  2377  0017D2                     _lcdInit:
  2378                           	callstack 25
  2379  0017D2                     
  2380                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2381  0017D2  0E00               	movlw	0
  2382  0017D4  6E02               	movwf	(pinMode@pin+1)^0,c
  2383  0017D6  0E1C               	movlw	28
  2384  0017D8  6E01               	movwf	pinMode@pin^0,c
  2385  0017DA  0E00               	movlw	0
  2386  0017DC  6E04               	movwf	(pinMode@type+1)^0,c
  2387  0017DE  0E00               	movlw	0
  2388  0017E0  6E03               	movwf	pinMode@type^0,c
  2389  0017E2  EC10  F009         	call	_pinMode	;wreg free
  2390                           
  2391                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2392  0017E6  0E00               	movlw	0
  2393  0017E8  6E02               	movwf	(pinMode@pin+1)^0,c
  2394  0017EA  0E1D               	movlw	29
  2395  0017EC  6E01               	movwf	pinMode@pin^0,c
  2396  0017EE  0E00               	movlw	0
  2397  0017F0  6E04               	movwf	(pinMode@type+1)^0,c
  2398  0017F2  0E00               	movlw	0
  2399  0017F4  6E03               	movwf	pinMode@type^0,c
  2400  0017F6  EC10  F009         	call	_pinMode	;wreg free
  2401                           
  2402                           ;lcd.c: 75:  soInit();
  2403  0017FA  EC44  F00E         	call	_soInit	;wreg free
  2404                           
  2405                           ;lcd.c: 76:  delayMili(15);
  2406  0017FE  0E00               	movlw	0
  2407  001800  6E02               	movwf	(delayMili@a+1)^0,c
  2408  001802  0E0F               	movlw	15
  2409  001804  6E01               	movwf	delayMili@a^0,c
  2410  001806  EC7C  F00E         	call	_delayMili	;wreg free
  2411                           
  2412                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2413  00180A  0E00               	movlw	0
  2414  00180C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2415  00180E  0E00               	movlw	0
  2416  001810  6E0A               	movwf	pushNibble@rs^0,c
  2417  001812  0E03               	movlw	3
  2418  001814  ECBE  F00E         	call	_pushNibble
  2419                           
  2420                           ;lcd.c: 79:  delayMili(5);
  2421  001818  0E00               	movlw	0
  2422  00181A  6E02               	movwf	(delayMili@a+1)^0,c
  2423  00181C  0E05               	movlw	5
  2424  00181E  6E01               	movwf	delayMili@a^0,c
  2425  001820  EC7C  F00E         	call	_delayMili	;wreg free
  2426                           
  2427                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2428  001824  0E00               	movlw	0
  2429  001826  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2430  001828  0E00               	movlw	0
  2431  00182A  6E0A               	movwf	pushNibble@rs^0,c
  2432  00182C  0E03               	movlw	3
  2433  00182E  ECBE  F00E         	call	_pushNibble
  2434  001832                     
  2435                           ;lcd.c: 81:  delayMicro(160);
  2436  001832  0E00               	movlw	0
  2437  001834  6E02               	movwf	(delayMicro@a+1)^0,c
  2438  001836  0EA0               	movlw	160
  2439  001838  6E01               	movwf	delayMicro@a^0,c
  2440  00183A  ECFA  F00E         	call	_delayMicro	;wreg free
  2441  00183E                     
  2442                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2443  00183E  0E00               	movlw	0
  2444  001840  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2445  001842  0E00               	movlw	0
  2446  001844  6E0A               	movwf	pushNibble@rs^0,c
  2447  001846  0E03               	movlw	3
  2448  001848  ECBE  F00E         	call	_pushNibble
  2449                           
  2450                           ;lcd.c: 83:  delayMicro(160);
  2451  00184C  0E00               	movlw	0
  2452  00184E  6E02               	movwf	(delayMicro@a+1)^0,c
  2453  001850  0EA0               	movlw	160
  2454  001852  6E01               	movwf	delayMicro@a^0,c
  2455  001854  ECFA  F00E         	call	_delayMicro	;wreg free
  2456  001858                     
  2457                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2458  001858  0E00               	movlw	0
  2459  00185A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2460  00185C  0E00               	movlw	0
  2461  00185E  6E0A               	movwf	pushNibble@rs^0,c
  2462  001860  0E02               	movlw	2
  2463  001862  ECBE  F00E         	call	_pushNibble
  2464  001866                     
  2465                           ;lcd.c: 86:  delayMili(10);
  2466  001866  0E00               	movlw	0
  2467  001868  6E02               	movwf	(delayMili@a+1)^0,c
  2468  00186A  0E0A               	movlw	10
  2469  00186C  6E01               	movwf	delayMili@a^0,c
  2470  00186E  EC7C  F00E         	call	_delayMili	;wreg free
  2471  001872                     
  2472                           ;lcd.c: 88:  lcdCommand(0x28);
  2473  001872  0E28               	movlw	40
  2474  001874  ECE0  F00E         	call	_lcdCommand
  2475  001878                     
  2476                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2477  001878  0E0C               	movlw	12
  2478  00187A  ECE0  F00E         	call	_lcdCommand
  2479  00187E                     
  2480                           ;lcd.c: 90:  lcdCommand(0x01);
  2481  00187E  0E01               	movlw	1
  2482  001880  ECE0  F00E         	call	_lcdCommand
  2483  001884  0012               	return		;funcret
  2484  001886                     __end_of_lcdInit:
  2485                           	callstack 0
  2486                           
  2487 ;; *************** function _pushNibble *****************
  2488 ;; Defined at:
  2489 ;;		line 25 in file "lcd.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  value           1    wreg     unsigned char 
  2492 ;;  rs              2    9[COMRAM] int 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  value           1   11[COMRAM] unsigned char 
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, status,2, status,0, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2504 ;;      Params:         2       0       0       0       0       0       0
  2505 ;;      Locals:         1       0       0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0       0       0
  2507 ;;      Totals:         3       0       0       0       0       0       0
  2508 ;;Total ram usage:        3 bytes
  2509 ;; Hardware stack levels used: 1
  2510 ;; Hardware stack levels required when called: 3
  2511 ;; This function calls:
  2512 ;;		_digitalWrite
  2513 ;;		_pulseEnablePin
  2514 ;;		_soWrite
  2515 ;; This function is called by:
  2516 ;;		_lcdInit
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text6
  2521  001D7C                     __ptext6:
  2522                           	callstack 0
  2523  001D7C                     _pushNibble:
  2524                           	callstack 26
  2525                           
  2526                           ;incstack = 0
  2527                           ;pushNibble@value stored from wreg
  2528  001D7C  6E0C               	movwf	pushNibble@value^0,c
  2529  001D7E                     
  2530                           ;lcd.c: 26:  soWrite(value);
  2531  001D7E  C00C  F007         	movff	pushNibble@value,soWrite@value
  2532  001D82  6A08               	clrf	(soWrite@value+1)^0,c
  2533  001D84  ECB9  F00D         	call	_soWrite	;wreg free
  2534                           
  2535                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2536  001D88  0E00               	movlw	0
  2537  001D8A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2538  001D8C  0E1D               	movlw	29
  2539  001D8E  6E01               	movwf	digitalWrite@pin^0,c
  2540  001D90  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2541  001D94  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2542  001D98  ECE9  F007         	call	_digitalWrite	;wreg free
  2543                           
  2544                           ;lcd.c: 28:  pulseEnablePin();
  2545  001D9C  EC04  F00E         	call	_pulseEnablePin	;wreg free
  2546  001DA0  0012               	return		;funcret
  2547  001DA2                     __end_of_pushNibble:
  2548                           	callstack 0
  2549                           
  2550 ;; *************** function _lcdCommand *****************
  2551 ;; Defined at:
  2552 ;;		line 40 in file "lcd.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  value           1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  value           1   13[COMRAM] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2566 ;;      Params:         0       0       0       0       0       0       0
  2567 ;;      Locals:         1       0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0
  2569 ;;      Totals:         1       0       0       0       0       0       0
  2570 ;;Total ram usage:        1 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 4
  2573 ;; This function calls:
  2574 ;;		_delayMili
  2575 ;;		_pushByte
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;;		_lcdInit
  2579 ;;		_lcdPosition
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text7
  2584  001DC0                     __ptext7:
  2585                           	callstack 0
  2586  001DC0                     _lcdCommand:
  2587                           	callstack 25
  2588                           
  2589                           ;incstack = 0
  2590                           ;lcdCommand@value stored from wreg
  2591  001DC0  6E0E               	movwf	lcdCommand@value^0,c
  2592  001DC2                     
  2593                           ;lcd.c: 41:  pushByte(value, 0);
  2594  001DC2  0E00               	movlw	0
  2595  001DC4  6E0B               	movwf	(pushByte@rs+1)^0,c
  2596  001DC6  0E00               	movlw	0
  2597  001DC8  6E0A               	movwf	pushByte@rs^0,c
  2598  001DCA  500E               	movf	lcdCommand@value^0,w,c
  2599  001DCC  EC61  F00D         	call	_pushByte
  2600                           
  2601                           ;lcd.c: 42:  delayMili(2);
  2602  001DD0  0E00               	movlw	0
  2603  001DD2  6E02               	movwf	(delayMili@a+1)^0,c
  2604  001DD4  0E02               	movlw	2
  2605  001DD6  6E01               	movwf	delayMili@a^0,c
  2606  001DD8  EC7C  F00E         	call	_delayMili	;wreg free
  2607  001DDC  0012               	return		;funcret
  2608  001DDE                     __end_of_lcdCommand:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _pushByte *****************
  2612 ;; Defined at:
  2613 ;;		line 31 in file "lcd.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  value           1    wreg     unsigned char 
  2616 ;;  rs              2    9[COMRAM] int 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  value           1   12[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2628 ;;      Params:         2       0       0       0       0       0       0
  2629 ;;      Locals:         1       0       0       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0       0       0
  2631 ;;      Totals:         4       0       0       0       0       0       0
  2632 ;;Total ram usage:        4 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 3
  2635 ;; This function calls:
  2636 ;;		_digitalWrite
  2637 ;;		_pulseEnablePin
  2638 ;;		_soWrite
  2639 ;; This function is called by:
  2640 ;;		_lcdCommand
  2641 ;;		_lcdChar
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text8
  2646  001AC2                     __ptext8:
  2647                           	callstack 0
  2648  001AC2                     _pushByte:
  2649                           	callstack 25
  2650                           
  2651                           ;incstack = 0
  2652                           ;pushByte@value stored from wreg
  2653  001AC2  6E0D               	movwf	pushByte@value^0,c
  2654  001AC4                     
  2655                           ;lcd.c: 32:  soWrite(value >> 4);
  2656  001AC4  C00D  F00C         	movff	pushByte@value,??_pushByte
  2657  001AC8  3A0C               	swapf	??_pushByte^0,f,c
  2658  001ACA  0E0F               	movlw	15
  2659  001ACC  160C               	andwf	??_pushByte^0,f,c
  2660  001ACE  500C               	movf	??_pushByte^0,w,c
  2661  001AD0  6E07               	movwf	soWrite@value^0,c
  2662  001AD2  6A08               	clrf	(soWrite@value+1)^0,c
  2663  001AD4  ECB9  F00D         	call	_soWrite	;wreg free
  2664                           
  2665                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2666  001AD8  0E00               	movlw	0
  2667  001ADA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2668  001ADC  0E1D               	movlw	29
  2669  001ADE  6E01               	movwf	digitalWrite@pin^0,c
  2670  001AE0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2671  001AE4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2672  001AE8  ECE9  F007         	call	_digitalWrite	;wreg free
  2673                           
  2674                           ;lcd.c: 34:  pulseEnablePin();
  2675  001AEC  EC04  F00E         	call	_pulseEnablePin	;wreg free
  2676                           
  2677                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2678  001AF0  C00D  F00C         	movff	pushByte@value,??_pushByte
  2679  001AF4  0E0F               	movlw	15
  2680  001AF6  160C               	andwf	??_pushByte^0,f,c
  2681  001AF8  500C               	movf	??_pushByte^0,w,c
  2682  001AFA  6E07               	movwf	soWrite@value^0,c
  2683  001AFC  6A08               	clrf	(soWrite@value+1)^0,c
  2684  001AFE  ECB9  F00D         	call	_soWrite	;wreg free
  2685                           
  2686                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2687  001B02  0E00               	movlw	0
  2688  001B04  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2689  001B06  0E1D               	movlw	29
  2690  001B08  6E01               	movwf	digitalWrite@pin^0,c
  2691  001B0A  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2692  001B0E  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2693  001B12  ECE9  F007         	call	_digitalWrite	;wreg free
  2694                           
  2695                           ;lcd.c: 38:  pulseEnablePin();
  2696  001B16  EC04  F00E         	call	_pulseEnablePin	;wreg free
  2697  001B1A  0012               	return		;funcret
  2698  001B1C                     __end_of_pushByte:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _pulseEnablePin *****************
  2702 ;; Defined at:
  2703 ;;		line 18 in file "lcd.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;		None
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2717 ;;      Params:         0       0       0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0
  2720 ;;      Totals:         0       0       0       0       0       0       0
  2721 ;;Total ram usage:        0 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 1
  2724 ;; This function calls:
  2725 ;;		_delayMicro
  2726 ;;		_digitalWrite
  2727 ;; This function is called by:
  2728 ;;		_pushNibble
  2729 ;;		_pushByte
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text9
  2734  001C08                     __ptext9:
  2735                           	callstack 0
  2736  001C08                     _pulseEnablePin:
  2737                           	callstack 26
  2738  001C08                     
  2739                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2740  001C08  0E00               	movlw	0
  2741  001C0A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2742  001C0C  0E1C               	movlw	28
  2743  001C0E  6E01               	movwf	digitalWrite@pin^0,c
  2744  001C10  0E00               	movlw	0
  2745  001C12  6E04               	movwf	(digitalWrite@value+1)^0,c
  2746  001C14  0E01               	movlw	1
  2747  001C16  6E03               	movwf	digitalWrite@value^0,c
  2748  001C18  ECE9  F007         	call	_digitalWrite	;wreg free
  2749  001C1C                     
  2750                           ;lcd.c: 20:  delayMicro(5);
  2751  001C1C  0E00               	movlw	0
  2752  001C1E  6E02               	movwf	(delayMicro@a+1)^0,c
  2753  001C20  0E05               	movlw	5
  2754  001C22  6E01               	movwf	delayMicro@a^0,c
  2755  001C24  ECFA  F00E         	call	_delayMicro	;wreg free
  2756  001C28                     
  2757                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2758  001C28  0E00               	movlw	0
  2759  001C2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2760  001C2C  0E1C               	movlw	28
  2761  001C2E  6E01               	movwf	digitalWrite@pin^0,c
  2762  001C30  0E00               	movlw	0
  2763  001C32  6E04               	movwf	(digitalWrite@value+1)^0,c
  2764  001C34  0E00               	movlw	0
  2765  001C36  6E03               	movwf	digitalWrite@value^0,c
  2766  001C38  ECE9  F007         	call	_digitalWrite	;wreg free
  2767                           
  2768                           ;lcd.c: 22:  delayMicro(5);
  2769  001C3C  0E00               	movlw	0
  2770  001C3E  6E02               	movwf	(delayMicro@a+1)^0,c
  2771  001C40  0E05               	movlw	5
  2772  001C42  6E01               	movwf	delayMicro@a^0,c
  2773  001C44  ECFA  F00E         	call	_delayMicro	;wreg free
  2774  001C48  0012               	return		;funcret
  2775  001C4A                     __end_of_pulseEnablePin:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _delayMicro *****************
  2779 ;; Defined at:
  2780 ;;		line 5 in file "lcd.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  a               2    0[COMRAM] int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  i               2    0        volatile int 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		None
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2794 ;;      Params:         2       0       0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0
  2797 ;;      Totals:         2       0       0       0       0       0       0
  2798 ;;Total ram usage:        2 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_pulseEnablePin
  2804 ;;		_lcdChar
  2805 ;;		_lcdInit
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text10
  2810  001DF4                     __ptext10:
  2811                           	callstack 0
  2812  001DF4                     _delayMicro:
  2813                           	callstack 26
  2814  001DF4  0012               	return		;funcret
  2815  001DF6                     __end_of_delayMicro:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _delayMili *****************
  2819 ;; Defined at:
  2820 ;;		line 10 in file "lcd.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  a               2    0[COMRAM] int 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  i               2    3[COMRAM] volatile int 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2834 ;;      Params:         2       0       0       0       0       0       0
  2835 ;;      Locals:         2       0       0       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0       0       0
  2837 ;;      Totals:         5       0       0       0       0       0       0
  2838 ;;Total ram usage:        5 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_lcdCommand
  2844 ;;		_lcdInit
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text11
  2849  001CF8                     __ptext11:
  2850                           	callstack 0
  2851  001CF8                     _delayMili:
  2852                           	callstack 28
  2853  001CF8                     
  2854                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2855  001CF8  0E00               	movlw	0
  2856  001CFA  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2857  001CFC  0E00               	movlw	0
  2858  001CFE  6E04               	movwf	delayMili@i^0,c	;volatile
  2859  001D00  EF84  F00E         	goto	l2417
  2860  001D04                     l2415:
  2861                           
  2862                           ;lcd.c: 15:  }
  2863  001D04  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2864  001D06  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2865  001D08                     l2417:
  2866  001D08  5001               	movf	delayMili@a^0,w,c
  2867  001D0A  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2868  001D0C  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2869  001D0E  0A80               	xorlw	128
  2870  001D10  6E03               	movwf	??_delayMili^0,c
  2871  001D12  5002               	movf	(delayMili@a+1)^0,w,c
  2872  001D14  0A80               	xorlw	128
  2873  001D16  5803               	subwfb	??_delayMili^0,w,c
  2874  001D18  A0D8               	btfss	status,0,c
  2875  001D1A  EF91  F00E         	goto	u1821
  2876  001D1E  EF93  F00E         	goto	u1820
  2877  001D22                     u1821:
  2878  001D22  EF82  F00E         	goto	l2415
  2879  001D26                     u1820:
  2880  001D26  0012               	return		;funcret
  2881  001D28                     __end_of_delayMili:
  2882                           	callstack 0
  2883                           
  2884 ;; *************** function _kpReadKey *****************
  2885 ;; Defined at:
  2886 ;;		line 17 in file "keypad.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  i               2    3[COMRAM] int 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      unsigned char 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2900 ;;      Params:         0       0       0       0       0       0       0
  2901 ;;      Locals:         2       0       0       0       0       0       0
  2902 ;;      Temps:          3       0       0       0       0       0       0
  2903 ;;      Totals:         5       0       0       0       0       0       0
  2904 ;;Total ram usage:        5 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text12
  2914  0019E6                     __ptext12:
  2915                           	callstack 0
  2916  0019E6                     _kpReadKey:
  2917                           	callstack 30
  2918  0019E6                     
  2919                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  2920  0019E6  0E00               	movlw	0
  2921  0019E8  6E05               	movwf	(kpReadKey@i+1)^0,c
  2922  0019EA  0E00               	movlw	0
  2923  0019EC  6E04               	movwf	kpReadKey@i^0,c
  2924  0019EE                     l1531:
  2925                           
  2926                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  2927  0019EE  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  2928  0019F2  0E01               	movlw	1
  2929  0019F4  6E02               	movwf	(??_kpReadKey+1)^0,c
  2930  0019F6  0E00               	movlw	0
  2931  0019F8  6E03               	movwf	(??_kpReadKey+2)^0,c
  2932  0019FA  2A01               	incf	??_kpReadKey^0,f,c
  2933  0019FC  EF03  F00D         	goto	u724
  2934  001A00                     u725:
  2935  001A00  90D8               	bcf	status,0,c
  2936  001A02  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  2937  001A04  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  2938  001A06                     u724:
  2939  001A06  2E01               	decfsz	??_kpReadKey^0,f,c
  2940  001A08  EF00  F00D         	goto	u725
  2941  001A0C  501D               	movf	_keys^0,w,c
  2942  001A0E  1602               	andwf	(??_kpReadKey+1)^0,f,c
  2943  001A10  501E               	movf	(_keys+1)^0,w,c
  2944  001A12  1603               	andwf	(??_kpReadKey+2)^0,f,c
  2945  001A14  5002               	movf	(??_kpReadKey+1)^0,w,c
  2946  001A16  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  2947  001A18  B4D8               	btfsc	status,2,c
  2948  001A1A  EF11  F00D         	goto	u731
  2949  001A1E  EF13  F00D         	goto	u730
  2950  001A22                     u731:
  2951  001A22  EF1D  F00D         	goto	l1537
  2952  001A26                     u730:
  2953  001A26                     
  2954                           ;keypad.c: 21:    return charKey[i];
  2955  001A26  0E21               	movlw	low _charKey
  2956  001A28  2404               	addwf	kpReadKey@i^0,w,c
  2957  001A2A  6EF6               	movwf	tblptrl,c
  2958  001A2C  0E06               	movlw	high _charKey
  2959  001A2E  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  2960  001A30  6EF7               	movwf	tblptrh,c
  2961  001A32                     	if	0	;There are less than 3 active tblptr bytes
  2962  001A32                     	endif
  2963  001A32  0008               	tblrd		*
  2964  001A34  50F5               	movf	tablat,w,c
  2965  001A36  EF2E  F00D         	goto	l320
  2966  001A3A                     l1537:
  2967                           
  2968                           ;keypad.c: 23:  }
  2969  001A3A  4A04               	infsnz	kpReadKey@i^0,f,c
  2970  001A3C  2A05               	incf	(kpReadKey@i+1)^0,f,c
  2971  001A3E  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  2972  001A40  EF2B  F00D         	goto	u741
  2973  001A44  5005               	movf	(kpReadKey@i+1)^0,w,c
  2974  001A46  E109               	bnz	u740
  2975  001A48  0E0A               	movlw	10
  2976  001A4A  5C04               	subwf	kpReadKey@i^0,w,c
  2977  001A4C  A0D8               	btfss	status,0,c
  2978  001A4E  EF2B  F00D         	goto	u741
  2979  001A52  EF2D  F00D         	goto	u740
  2980  001A56                     u741:
  2981  001A56  EFF7  F00C         	goto	l1531
  2982  001A5A                     u740:
  2983  001A5A                     
  2984                           ;keypad.c: 25:  return 0;
  2985  001A5A  0E00               	movlw	0
  2986  001A5C                     l320:
  2987  001A5C  0012               	return		;funcret
  2988  001A5E                     __end_of_kpReadKey:
  2989                           	callstack 0
  2990                           
  2991 ;; *************** function _kpInit *****************
  2992 ;; Defined at:
  2993 ;;		line 54 in file "keypad.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3007 ;;      Params:         0       0       0       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0
  3010 ;;      Totals:         0       0       0       0       0       0       0
  3011 ;;Total ram usage:        0 bytes
  3012 ;; Hardware stack levels used: 1
  3013 ;; Hardware stack levels required when called: 2
  3014 ;; This function calls:
  3015 ;;		_pinMode
  3016 ;;		_soInit
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text13
  3023  001CC6                     __ptext13:
  3024                           	callstack 0
  3025  001CC6                     _kpInit:
  3026                           	callstack 28
  3027  001CC6                     
  3028                           ;keypad.c: 55:   soInit();
  3029  001CC6  EC44  F00E         	call	_soInit	;wreg free
  3030                           
  3031                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3032  001CCA  0E00               	movlw	0
  3033  001CCC  6E02               	movwf	(pinMode@pin+1)^0,c
  3034  001CCE  0E0A               	movlw	10
  3035  001CD0  6E01               	movwf	pinMode@pin^0,c
  3036  001CD2  0E00               	movlw	0
  3037  001CD4  6E04               	movwf	(pinMode@type+1)^0,c
  3038  001CD6  0E01               	movlw	1
  3039  001CD8  6E03               	movwf	pinMode@type^0,c
  3040  001CDA  EC10  F009         	call	_pinMode	;wreg free
  3041                           
  3042                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3043  001CDE  0E00               	movlw	0
  3044  001CE0  6E02               	movwf	(pinMode@pin+1)^0,c
  3045  001CE2  0E09               	movlw	9
  3046  001CE4  6E01               	movwf	pinMode@pin^0,c
  3047  001CE6  0E00               	movlw	0
  3048  001CE8  6E04               	movwf	(pinMode@type+1)^0,c
  3049  001CEA  0E01               	movlw	1
  3050  001CEC  6E03               	movwf	pinMode@type^0,c
  3051  001CEE  EC10  F009         	call	_pinMode	;wreg free
  3052  001CF2                     
  3053                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3054  001CF2  0E0C               	movlw	12
  3055  001CF4  6EC1               	movwf	193,c	;volatile
  3056  001CF6  0012               	return		;funcret
  3057  001CF8                     __end_of_kpInit:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _soInit *****************
  3061 ;; Defined at:
  3062 ;;		line 3 in file "so.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3076 ;;      Params:         0       0       0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 1
  3083 ;; This function calls:
  3084 ;;		_pinMode
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;;		_kpInit
  3088 ;;		_lcdInit
  3089 ;;		_ssdInit
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text14
  3094  001C88                     __ptext14:
  3095                           	callstack 0
  3096  001C88                     _soInit:
  3097                           	callstack 29
  3098  001C88                     
  3099                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3100  001C88  0E00               	movlw	0
  3101  001C8A  6E02               	movwf	(pinMode@pin+1)^0,c
  3102  001C8C  0E1F               	movlw	31
  3103  001C8E  6E01               	movwf	pinMode@pin^0,c
  3104  001C90  0E00               	movlw	0
  3105  001C92  6E04               	movwf	(pinMode@type+1)^0,c
  3106  001C94  0E00               	movlw	0
  3107  001C96  6E03               	movwf	pinMode@type^0,c
  3108  001C98  EC10  F009         	call	_pinMode	;wreg free
  3109                           
  3110                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3111  001C9C  0E00               	movlw	0
  3112  001C9E  6E02               	movwf	(pinMode@pin+1)^0,c
  3113  001CA0  0E08               	movlw	8
  3114  001CA2  6E01               	movwf	pinMode@pin^0,c
  3115  001CA4  0E00               	movlw	0
  3116  001CA6  6E04               	movwf	(pinMode@type+1)^0,c
  3117  001CA8  0E00               	movlw	0
  3118  001CAA  6E03               	movwf	pinMode@type^0,c
  3119  001CAC  EC10  F009         	call	_pinMode	;wreg free
  3120                           
  3121                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3122  001CB0  0E00               	movlw	0
  3123  001CB2  6E02               	movwf	(pinMode@pin+1)^0,c
  3124  001CB4  0E1E               	movlw	30
  3125  001CB6  6E01               	movwf	pinMode@pin^0,c
  3126  001CB8  0E00               	movlw	0
  3127  001CBA  6E04               	movwf	(pinMode@type+1)^0,c
  3128  001CBC  0E00               	movlw	0
  3129  001CBE  6E03               	movwf	pinMode@type^0,c
  3130  001CC0  EC10  F009         	call	_pinMode	;wreg free
  3131  001CC4  0012               	return		;funcret
  3132  001CC6                     __end_of_soInit:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _kpDebounce *****************
  3136 ;; Defined at:
  3137 ;;		line 27 in file "keypad.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  i               2   12[COMRAM] int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3151 ;;      Params:         0       0       0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0       0       0
  3153 ;;      Temps:          3       0       0       0       0       0       0
  3154 ;;      Totals:         5       0       0       0       0       0       0
  3155 ;;Total ram usage:        5 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 3
  3158 ;; This function calls:
  3159 ;;		_digitalRead
  3160 ;;		_soWrite
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text15
  3167  0015D8                     __ptext15:
  3168                           	callstack 0
  3169  0015D8                     _kpDebounce:
  3170                           	callstack 27
  3171  0015D8                     
  3172                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3173  0015D8  0E00               	movlw	0
  3174  0015DA  6E1C               	movwf	(kpDebounce@newRead+1)^0,c
  3175  0015DC  0E00               	movlw	0
  3176  0015DE  6E1B               	movwf	kpDebounce@newRead^0,c
  3177                           
  3178                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3179  0015E0  0E00               	movlw	0
  3180  0015E2  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3181  0015E4  0E00               	movlw	0
  3182  0015E6  6E0D               	movwf	kpDebounce@i^0,c
  3183  0015E8                     l2531:
  3184  0015E8  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3185  0015EA  EF00  F00B         	goto	u2001
  3186  0015EE  500E               	movf	(kpDebounce@i+1)^0,w,c
  3187  0015F0  E109               	bnz	u2000
  3188  0015F2  0E05               	movlw	5
  3189  0015F4  5C0D               	subwf	kpDebounce@i^0,w,c
  3190  0015F6  A0D8               	btfss	status,0,c
  3191  0015F8  EF00  F00B         	goto	u2001
  3192  0015FC  EF02  F00B         	goto	u2000
  3193  001600                     u2001:
  3194  001600  EF04  F00B         	goto	l2535
  3195  001604                     u2000:
  3196  001604  EF65  F00B         	goto	l2547
  3197  001608                     l2535:
  3198                           
  3199                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3200  001608  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3201  00160C  0E03               	movlw	3
  3202  00160E  260A               	addwf	??_kpDebounce^0,f,c
  3203  001610  0E01               	movlw	1
  3204  001612  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3205  001614  0E00               	movlw	0
  3206  001616  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3207  001618  2A0A               	incf	??_kpDebounce^0,f,c
  3208  00161A  EF12  F00B         	goto	u2014
  3209  00161E                     u2015:
  3210  00161E  90D8               	bcf	status,0,c
  3211  001620  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3212  001622  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3213  001624                     u2014:
  3214  001624  2E0A               	decfsz	??_kpDebounce^0,f,c
  3215  001626  EF0F  F00B         	goto	u2015
  3216  00162A  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3217  00162E  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3218  001632  ECB9  F00D         	call	_soWrite	;wreg free
  3219                           
  3220                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3221  001636  0E00               	movlw	0
  3222  001638  6E02               	movwf	(digitalRead@pin+1)^0,c
  3223  00163A  0E0A               	movlw	10
  3224  00163C  6E01               	movwf	digitalRead@pin^0,c
  3225  00163E  EC37  F00A         	call	_digitalRead	;wreg free
  3226  001642  5001               	movf	?_digitalRead^0,w,c
  3227  001644  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3228  001646  B4D8               	btfsc	status,2,c
  3229  001648  EF28  F00B         	goto	u2021
  3230  00164C  EF2A  F00B         	goto	u2020
  3231  001650                     u2021:
  3232  001650  EF3D  F00B         	goto	l2539
  3233  001654                     u2020:
  3234  001654                     
  3235                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3236  001654  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3237  001658  0E01               	movlw	1
  3238  00165A  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3239  00165C  0E00               	movlw	0
  3240  00165E  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3241  001660  2A0A               	incf	??_kpDebounce^0,f,c
  3242  001662  EF36  F00B         	goto	u2034
  3243  001666                     u2035:
  3244  001666  90D8               	bcf	status,0,c
  3245  001668  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3246  00166A  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3247  00166C                     u2034:
  3248  00166C  2E0A               	decfsz	??_kpDebounce^0,f,c
  3249  00166E  EF33  F00B         	goto	u2035
  3250  001672  500B               	movf	(??_kpDebounce+1)^0,w,c
  3251  001674  121B               	iorwf	kpDebounce@newRead^0,f,c
  3252  001676  500C               	movf	(??_kpDebounce+2)^0,w,c
  3253  001678  121C               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3254  00167A                     l2539:
  3255                           
  3256                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3257  00167A  0E00               	movlw	0
  3258  00167C  6E02               	movwf	(digitalRead@pin+1)^0,c
  3259  00167E  0E09               	movlw	9
  3260  001680  6E01               	movwf	digitalRead@pin^0,c
  3261  001682  EC37  F00A         	call	_digitalRead	;wreg free
  3262  001686  5001               	movf	?_digitalRead^0,w,c
  3263  001688  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3264  00168A  B4D8               	btfsc	status,2,c
  3265  00168C  EF4A  F00B         	goto	u2041
  3266  001690  EF4C  F00B         	goto	u2040
  3267  001694                     u2041:
  3268  001694  EF61  F00B         	goto	l2543
  3269  001698                     u2040:
  3270  001698                     
  3271                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3272  001698  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3273  00169C  0E05               	movlw	5
  3274  00169E  260A               	addwf	??_kpDebounce^0,f,c
  3275  0016A0  0E01               	movlw	1
  3276  0016A2  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3277  0016A4  0E00               	movlw	0
  3278  0016A6  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3279  0016A8  2A0A               	incf	??_kpDebounce^0,f,c
  3280  0016AA  EF5A  F00B         	goto	u2054
  3281  0016AE                     u2055:
  3282  0016AE  90D8               	bcf	status,0,c
  3283  0016B0  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3284  0016B2  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3285  0016B4                     u2054:
  3286  0016B4  2E0A               	decfsz	??_kpDebounce^0,f,c
  3287  0016B6  EF57  F00B         	goto	u2055
  3288  0016BA  500B               	movf	(??_kpDebounce+1)^0,w,c
  3289  0016BC  121B               	iorwf	kpDebounce@newRead^0,f,c
  3290  0016BE  500C               	movf	(??_kpDebounce+2)^0,w,c
  3291  0016C0  121C               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3292  0016C2                     l2543:
  3293                           
  3294                           ;keypad.c: 42:     }
  3295  0016C2  4A0D               	infsnz	kpDebounce@i^0,f,c
  3296  0016C4  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3297  0016C6  EFF4  F00A         	goto	l2531
  3298  0016CA                     l2547:
  3299                           
  3300                           ;keypad.c: 43:     if (oldRead == newRead) {
  3301  0016CA  501B               	movf	kpDebounce@newRead^0,w,c
  3302  0016CC  1819               	xorwf	kpDebounce@oldRead^0,w,c
  3303  0016CE  E107               	bnz	u2061
  3304  0016D0  501C               	movf	(kpDebounce@newRead+1)^0,w,c
  3305  0016D2  181A               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3306  0016D4  A4D8               	btfss	status,2,c
  3307  0016D6  EF6F  F00B         	goto	u2061
  3308  0016DA  EF71  F00B         	goto	u2060
  3309  0016DE                     u2061:
  3310  0016DE  EF74  F00B         	goto	l2551
  3311  0016E2                     u2060:
  3312  0016E2                     
  3313                           ;keypad.c: 44:         tempo--;
  3314  0016E2  0626               	decf	kpDebounce@tempo^0,f,c
  3315                           
  3316                           ;keypad.c: 45:     } else {
  3317  0016E4  EF7A  F00B         	goto	l334
  3318  0016E8                     l2551:
  3319                           
  3320                           ;keypad.c: 46:         tempo = 1;
  3321  0016E8  0E01               	movlw	1
  3322  0016EA  6E26               	movwf	kpDebounce@tempo^0,c
  3323  0016EC                     
  3324                           ;keypad.c: 47:         oldRead = newRead;
  3325  0016EC  C01B  F019         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3326  0016F0  C01C  F01A         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3327  0016F4                     l334:
  3328                           
  3329                           ;keypad.c: 49:     if (tempo == 0) {
  3330  0016F4  5026               	movf	kpDebounce@tempo^0,w,c
  3331  0016F6  A4D8               	btfss	status,2,c
  3332  0016F8  EF80  F00B         	goto	u2071
  3333  0016FC  EF82  F00B         	goto	u2070
  3334  001700                     u2071:
  3335  001700  EF86  F00B         	goto	l336
  3336  001704                     u2070:
  3337  001704                     
  3338                           ;keypad.c: 50:         keys = oldRead;
  3339  001704  C019  F01D         	movff	kpDebounce@oldRead,_keys
  3340  001708  C01A  F01E         	movff	kpDebounce@oldRead+1,_keys+1
  3341  00170C                     l336:
  3342  00170C  0012               	return		;funcret
  3343  00170E                     __end_of_kpDebounce:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _soWrite *****************
  3347 ;; Defined at:
  3348 ;;		line 18 in file "so.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  value           2    6[COMRAM] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  i               1    8[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:         2       0       0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0
  3365 ;;      Totals:         3       0       0       0       0       0       0
  3366 ;;Total ram usage:        3 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 2
  3369 ;; This function calls:
  3370 ;;		_PulseClockData
  3371 ;;		_PulseEnClock
  3372 ;;		_digitalWrite
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;;		_kpDebounce
  3376 ;;		_pushNibble
  3377 ;;		_pushByte
  3378 ;;		_ssdUpdate
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text16
  3383  001B72                     __ptext16:
  3384                           	callstack 0
  3385  001B72                     _soWrite:
  3386                           	callstack 28
  3387  001B72                     
  3388                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3389  001B72  0E00               	movlw	0
  3390  001B74  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3391  001B76  0E08               	movlw	8
  3392  001B78  6E01               	movwf	digitalWrite@pin^0,c
  3393  001B7A  0E00               	movlw	0
  3394  001B7C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3395  001B7E  0E00               	movlw	0
  3396  001B80  6E03               	movwf	digitalWrite@value^0,c
  3397  001B82  ECE9  F007         	call	_digitalWrite	;wreg free
  3398  001B86                     
  3399                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3400  001B86  0E00               	movlw	0
  3401  001B88  6E09               	movwf	soWrite@i^0,c
  3402  001B8A                     l2357:
  3403                           
  3404                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3405  001B8A  0E00               	movlw	0
  3406  001B8C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3407  001B8E  0E1E               	movlw	30
  3408  001B90  6E01               	movwf	digitalWrite@pin^0,c
  3409  001B92  0E80               	movlw	128
  3410  001B94  1407               	andwf	soWrite@value^0,w,c
  3411  001B96  6E03               	movwf	digitalWrite@value^0,c
  3412  001B98  6A04               	clrf	(digitalWrite@value+1)^0,c
  3413  001B9A  ECE9  F007         	call	_digitalWrite	;wreg free
  3414                           
  3415                           ;so.c: 23:   PulseClockData();
  3416  001B9E  ECA9  F00E         	call	_PulseClockData	;wreg free
  3417  001BA2                     
  3418                           ;so.c: 24:   value <<= 1;
  3419  001BA2  90D8               	bcf	status,0,c
  3420  001BA4  3607               	rlcf	soWrite@value^0,f,c
  3421  001BA6  3608               	rlcf	(soWrite@value+1)^0,f,c
  3422  001BA8                     
  3423                           ;so.c: 25:  }
  3424  001BA8  2A09               	incf	soWrite@i^0,f,c
  3425  001BAA  0E07               	movlw	7
  3426  001BAC  6409               	cpfsgt	soWrite@i^0,c
  3427  001BAE  EFDB  F00D         	goto	u1611
  3428  001BB2  EFDD  F00D         	goto	u1610
  3429  001BB6                     u1611:
  3430  001BB6  EFC5  F00D         	goto	l2357
  3431  001BBA                     u1610:
  3432  001BBA                     
  3433                           ;so.c: 26:  PulseEnClock();
  3434  001BBA  EC94  F00E         	call	_PulseEnClock	;wreg free
  3435  001BBE  0012               	return		;funcret
  3436  001BC0                     __end_of_soWrite:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _PulseEnClock *****************
  3440 ;; Defined at:
  3441 ;;		line 9 in file "so.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;		None
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;		None
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       0       0       0       0       0       0
  3456 ;;      Locals:         0       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         0       0       0       0       0       0       0
  3459 ;;Total ram usage:        0 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 1
  3462 ;; This function calls:
  3463 ;;		_digitalWrite
  3464 ;; This function is called by:
  3465 ;;		_soWrite
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text17
  3470  001D28                     __ptext17:
  3471                           	callstack 0
  3472  001D28                     _PulseEnClock:
  3473                           	callstack 28
  3474  001D28                     
  3475                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3476  001D28  0E00               	movlw	0
  3477  001D2A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3478  001D2C  0E1F               	movlw	31
  3479  001D2E  6E01               	movwf	digitalWrite@pin^0,c
  3480  001D30  0E00               	movlw	0
  3481  001D32  6E04               	movwf	(digitalWrite@value+1)^0,c
  3482  001D34  0E01               	movlw	1
  3483  001D36  6E03               	movwf	digitalWrite@value^0,c
  3484  001D38  ECE9  F007         	call	_digitalWrite	;wreg free
  3485                           
  3486                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3487  001D3C  0E00               	movlw	0
  3488  001D3E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3489  001D40  0E1F               	movlw	31
  3490  001D42  6E01               	movwf	digitalWrite@pin^0,c
  3491  001D44  0E00               	movlw	0
  3492  001D46  6E04               	movwf	(digitalWrite@value+1)^0,c
  3493  001D48  0E00               	movlw	0
  3494  001D4A  6E03               	movwf	digitalWrite@value^0,c
  3495  001D4C  ECE9  F007         	call	_digitalWrite	;wreg free
  3496  001D50  0012               	return		;funcret
  3497  001D52                     __end_of_PulseEnClock:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _PulseClockData *****************
  3501 ;; Defined at:
  3502 ;;		line 14 in file "so.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3516 ;;      Params:         0       0       0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 1
  3523 ;; This function calls:
  3524 ;;		_digitalWrite
  3525 ;; This function is called by:
  3526 ;;		_soWrite
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text18
  3531  001D52                     __ptext18:
  3532                           	callstack 0
  3533  001D52                     _PulseClockData:
  3534                           	callstack 28
  3535  001D52                     
  3536                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3537  001D52  0E00               	movlw	0
  3538  001D54  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3539  001D56  0E08               	movlw	8
  3540  001D58  6E01               	movwf	digitalWrite@pin^0,c
  3541  001D5A  0E00               	movlw	0
  3542  001D5C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3543  001D5E  0E01               	movlw	1
  3544  001D60  6E03               	movwf	digitalWrite@value^0,c
  3545  001D62  ECE9  F007         	call	_digitalWrite	;wreg free
  3546                           
  3547                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3548  001D66  0E00               	movlw	0
  3549  001D68  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3550  001D6A  0E08               	movlw	8
  3551  001D6C  6E01               	movwf	digitalWrite@pin^0,c
  3552  001D6E  0E00               	movlw	0
  3553  001D70  6E04               	movwf	(digitalWrite@value+1)^0,c
  3554  001D72  0E00               	movlw	0
  3555  001D74  6E03               	movwf	digitalWrite@value^0,c
  3556  001D76  ECE9  F007         	call	_digitalWrite	;wreg free
  3557  001D7A  0012               	return		;funcret
  3558  001D7C                     __end_of_PulseClockData:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _digitalWrite *****************
  3562 ;; Defined at:
  3563 ;;		line 14 in file "io.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  pin             2    0[COMRAM] int 
  3566 ;;  value           2    2[COMRAM] int 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3578 ;;      Params:         4       0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0
  3580 ;;      Temps:          2       0       0       0       0       0       0
  3581 ;;      Totals:         6       0       0       0       0       0       0
  3582 ;;Total ram usage:        6 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;;		_pulseEnablePin
  3589 ;;		_pushNibble
  3590 ;;		_pushByte
  3591 ;;		_rgbColor
  3592 ;;		_PulseEnClock
  3593 ;;		_PulseClockData
  3594 ;;		_soWrite
  3595 ;;		_clear_SCL
  3596 ;;		_clear_SDA
  3597 ;;		_turnOn
  3598 ;;		_turnOff
  3599 ;;		_ssdUpdate
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text19
  3604  000FD2                     __ptext19:
  3605                           	callstack 0
  3606  000FD2                     _digitalWrite:
  3607                           	callstack 29
  3608  000FD2                     
  3609                           ;io.c: 16:     if(pin <8){
  3610  000FD2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3611  000FD4  EFF7  F007         	goto	u1410
  3612  000FD8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3613  000FDA  E107               	bnz	u1411
  3614  000FDC  0E08               	movlw	8
  3615  000FDE  5C01               	subwf	digitalWrite@pin^0,w,c
  3616  000FE0  B0D8               	btfsc	status,0,c
  3617  000FE2  EFF5  F007         	goto	u1411
  3618  000FE6  EFF7  F007         	goto	u1410
  3619  000FEA                     u1411:
  3620  000FEA  EF21  F008         	goto	l2313
  3621  000FEE                     u1410:
  3622  000FEE                     
  3623                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3624  000FEE  5003               	movf	digitalWrite@value^0,w,c
  3625  000FF0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3626  000FF2  B4D8               	btfsc	status,2,c
  3627  000FF4  EFFE  F007         	goto	u1421
  3628  000FF8  EF00  F008         	goto	u1420
  3629  000FFC                     u1421:
  3630  000FFC  EF10  F008         	goto	l2311
  3631  001000                     u1420:
  3632  001000  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3633  001004  0E01               	movlw	1
  3634  001006  6E06               	movwf	(??_digitalWrite+1)^0,c
  3635  001008  2A05               	incf	??_digitalWrite^0,f,c
  3636  00100A  EF09  F008         	goto	u1434
  3637  00100E                     u1435:
  3638  00100E  90D8               	bcf	status,0,c
  3639  001010  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3640  001012                     u1434:
  3641  001012  2E05               	decfsz	??_digitalWrite^0,f,c
  3642  001014  EF07  F008         	goto	u1435
  3643  001018  5006               	movf	(??_digitalWrite+1)^0,w,c
  3644  00101A  1280               	iorwf	128,f,c	;volatile
  3645  00101C  EF0F  F009         	goto	l263
  3646  001020                     l2311:
  3647  001020  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3648  001024  0E01               	movlw	1
  3649  001026  6E06               	movwf	(??_digitalWrite+1)^0,c
  3650  001028  2A05               	incf	??_digitalWrite^0,f,c
  3651  00102A  EF19  F008         	goto	u1444
  3652  00102E                     u1445:
  3653  00102E  90D8               	bcf	status,0,c
  3654  001030  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3655  001032                     u1444:
  3656  001032  2E05               	decfsz	??_digitalWrite^0,f,c
  3657  001034  EF17  F008         	goto	u1445
  3658  001038  5006               	movf	(??_digitalWrite+1)^0,w,c
  3659  00103A  0AFF               	xorlw	255
  3660  00103C  1680               	andwf	128,f,c	;volatile
  3661  00103E  EF0F  F009         	goto	l263
  3662  001042                     l2313:
  3663  001042  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3664  001044  EF2F  F008         	goto	u1450
  3665  001048  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3666  00104A  E107               	bnz	u1451
  3667  00104C  0E10               	movlw	16
  3668  00104E  5C01               	subwf	digitalWrite@pin^0,w,c
  3669  001050  B0D8               	btfsc	status,0,c
  3670  001052  EF2D  F008         	goto	u1451
  3671  001056  EF2F  F008         	goto	u1450
  3672  00105A                     u1451:
  3673  00105A  EF5D  F008         	goto	l2321
  3674  00105E                     u1450:
  3675  00105E                     
  3676                           ;io.c: 20:         pin -=8;
  3677  00105E  0EF8               	movlw	248
  3678  001060  2601               	addwf	digitalWrite@pin^0,f,c
  3679  001062  0EFF               	movlw	255
  3680  001064  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3681                           
  3682                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3683  001066  5003               	movf	digitalWrite@value^0,w,c
  3684  001068  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3685  00106A  B4D8               	btfsc	status,2,c
  3686  00106C  EF3A  F008         	goto	u1461
  3687  001070  EF3C  F008         	goto	u1460
  3688  001074                     u1461:
  3689  001074  EF4C  F008         	goto	l2319
  3690  001078                     u1460:
  3691  001078  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3692  00107C  0E01               	movlw	1
  3693  00107E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3694  001080  2A05               	incf	??_digitalWrite^0,f,c
  3695  001082  EF45  F008         	goto	u1474
  3696  001086                     u1475:
  3697  001086  90D8               	bcf	status,0,c
  3698  001088  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3699  00108A                     u1474:
  3700  00108A  2E05               	decfsz	??_digitalWrite^0,f,c
  3701  00108C  EF43  F008         	goto	u1475
  3702  001090  5006               	movf	(??_digitalWrite+1)^0,w,c
  3703  001092  1281               	iorwf	129,f,c	;volatile
  3704  001094  EF0F  F009         	goto	l263
  3705  001098                     l2319:
  3706  001098  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3707  00109C  0E01               	movlw	1
  3708  00109E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3709  0010A0  2A05               	incf	??_digitalWrite^0,f,c
  3710  0010A2  EF55  F008         	goto	u1484
  3711  0010A6                     u1485:
  3712  0010A6  90D8               	bcf	status,0,c
  3713  0010A8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3714  0010AA                     u1484:
  3715  0010AA  2E05               	decfsz	??_digitalWrite^0,f,c
  3716  0010AC  EF53  F008         	goto	u1485
  3717  0010B0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3718  0010B2  0AFF               	xorlw	255
  3719  0010B4  1681               	andwf	129,f,c	;volatile
  3720  0010B6  EF0F  F009         	goto	l263
  3721  0010BA                     l2321:
  3722  0010BA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3723  0010BC  EF6B  F008         	goto	u1490
  3724  0010C0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3725  0010C2  E107               	bnz	u1491
  3726  0010C4  0E18               	movlw	24
  3727  0010C6  5C01               	subwf	digitalWrite@pin^0,w,c
  3728  0010C8  B0D8               	btfsc	status,0,c
  3729  0010CA  EF69  F008         	goto	u1491
  3730  0010CE  EF6B  F008         	goto	u1490
  3731  0010D2                     u1491:
  3732  0010D2  EF99  F008         	goto	l2329
  3733  0010D6                     u1490:
  3734  0010D6                     
  3735                           ;io.c: 24:         pin -=16;
  3736  0010D6  0EF0               	movlw	240
  3737  0010D8  2601               	addwf	digitalWrite@pin^0,f,c
  3738  0010DA  0EFF               	movlw	255
  3739  0010DC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3740                           
  3741                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3742  0010DE  5003               	movf	digitalWrite@value^0,w,c
  3743  0010E0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3744  0010E2  B4D8               	btfsc	status,2,c
  3745  0010E4  EF76  F008         	goto	u1501
  3746  0010E8  EF78  F008         	goto	u1500
  3747  0010EC                     u1501:
  3748  0010EC  EF88  F008         	goto	l2327
  3749  0010F0                     u1500:
  3750  0010F0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3751  0010F4  0E01               	movlw	1
  3752  0010F6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3753  0010F8  2A05               	incf	??_digitalWrite^0,f,c
  3754  0010FA  EF81  F008         	goto	u1514
  3755  0010FE                     u1515:
  3756  0010FE  90D8               	bcf	status,0,c
  3757  001100  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3758  001102                     u1514:
  3759  001102  2E05               	decfsz	??_digitalWrite^0,f,c
  3760  001104  EF7F  F008         	goto	u1515
  3761  001108  5006               	movf	(??_digitalWrite+1)^0,w,c
  3762  00110A  1282               	iorwf	130,f,c	;volatile
  3763  00110C  EF0F  F009         	goto	l263
  3764  001110                     l2327:
  3765  001110  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3766  001114  0E01               	movlw	1
  3767  001116  6E06               	movwf	(??_digitalWrite+1)^0,c
  3768  001118  2A05               	incf	??_digitalWrite^0,f,c
  3769  00111A  EF91  F008         	goto	u1524
  3770  00111E                     u1525:
  3771  00111E  90D8               	bcf	status,0,c
  3772  001120  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3773  001122                     u1524:
  3774  001122  2E05               	decfsz	??_digitalWrite^0,f,c
  3775  001124  EF8F  F008         	goto	u1525
  3776  001128  5006               	movf	(??_digitalWrite+1)^0,w,c
  3777  00112A  0AFF               	xorlw	255
  3778  00112C  1682               	andwf	130,f,c	;volatile
  3779  00112E  EF0F  F009         	goto	l263
  3780  001132                     l2329:
  3781  001132  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3782  001134  EFA7  F008         	goto	u1530
  3783  001138  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3784  00113A  E107               	bnz	u1531
  3785  00113C  0E20               	movlw	32
  3786  00113E  5C01               	subwf	digitalWrite@pin^0,w,c
  3787  001140  B0D8               	btfsc	status,0,c
  3788  001142  EFA5  F008         	goto	u1531
  3789  001146  EFA7  F008         	goto	u1530
  3790  00114A                     u1531:
  3791  00114A  EFD5  F008         	goto	l2337
  3792  00114E                     u1530:
  3793  00114E                     
  3794                           ;io.c: 28:         pin -=24;
  3795  00114E  0EE8               	movlw	232
  3796  001150  2601               	addwf	digitalWrite@pin^0,f,c
  3797  001152  0EFF               	movlw	255
  3798  001154  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3799                           
  3800                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3801  001156  5003               	movf	digitalWrite@value^0,w,c
  3802  001158  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3803  00115A  B4D8               	btfsc	status,2,c
  3804  00115C  EFB2  F008         	goto	u1541
  3805  001160  EFB4  F008         	goto	u1540
  3806  001164                     u1541:
  3807  001164  EFC4  F008         	goto	l2335
  3808  001168                     u1540:
  3809  001168  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3810  00116C  0E01               	movlw	1
  3811  00116E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3812  001170  2A05               	incf	??_digitalWrite^0,f,c
  3813  001172  EFBD  F008         	goto	u1554
  3814  001176                     u1555:
  3815  001176  90D8               	bcf	status,0,c
  3816  001178  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3817  00117A                     u1554:
  3818  00117A  2E05               	decfsz	??_digitalWrite^0,f,c
  3819  00117C  EFBB  F008         	goto	u1555
  3820  001180  5006               	movf	(??_digitalWrite+1)^0,w,c
  3821  001182  1283               	iorwf	131,f,c	;volatile
  3822  001184  EF0F  F009         	goto	l263
  3823  001188                     l2335:
  3824  001188  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3825  00118C  0E01               	movlw	1
  3826  00118E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3827  001190  2A05               	incf	??_digitalWrite^0,f,c
  3828  001192  EFCD  F008         	goto	u1564
  3829  001196                     u1565:
  3830  001196  90D8               	bcf	status,0,c
  3831  001198  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3832  00119A                     u1564:
  3833  00119A  2E05               	decfsz	??_digitalWrite^0,f,c
  3834  00119C  EFCB  F008         	goto	u1565
  3835  0011A0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3836  0011A2  0AFF               	xorlw	255
  3837  0011A4  1683               	andwf	131,f,c	;volatile
  3838  0011A6  EF0F  F009         	goto	l263
  3839  0011AA                     l2337:
  3840  0011AA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3841  0011AC  EFE3  F008         	goto	u1570
  3842  0011B0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3843  0011B2  E107               	bnz	u1571
  3844  0011B4  0E28               	movlw	40
  3845  0011B6  5C01               	subwf	digitalWrite@pin^0,w,c
  3846  0011B8  B0D8               	btfsc	status,0,c
  3847  0011BA  EFE1  F008         	goto	u1571
  3848  0011BE  EFE3  F008         	goto	u1570
  3849  0011C2                     u1571:
  3850  0011C2  EF0F  F009         	goto	l263
  3851  0011C6                     u1570:
  3852  0011C6                     
  3853                           ;io.c: 32:         pin -=32;
  3854  0011C6  0EE0               	movlw	224
  3855  0011C8  2601               	addwf	digitalWrite@pin^0,f,c
  3856  0011CA  0EFF               	movlw	255
  3857  0011CC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3858                           
  3859                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3860  0011CE  5003               	movf	digitalWrite@value^0,w,c
  3861  0011D0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3862  0011D2  B4D8               	btfsc	status,2,c
  3863  0011D4  EFEE  F008         	goto	u1581
  3864  0011D8  EFF0  F008         	goto	u1580
  3865  0011DC                     u1581:
  3866  0011DC  EF00  F009         	goto	l2343
  3867  0011E0                     u1580:
  3868  0011E0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3869  0011E4  0E01               	movlw	1
  3870  0011E6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3871  0011E8  2A05               	incf	??_digitalWrite^0,f,c
  3872  0011EA  EFF9  F008         	goto	u1594
  3873  0011EE                     u1595:
  3874  0011EE  90D8               	bcf	status,0,c
  3875  0011F0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3876  0011F2                     u1594:
  3877  0011F2  2E05               	decfsz	??_digitalWrite^0,f,c
  3878  0011F4  EFF7  F008         	goto	u1595
  3879  0011F8  5006               	movf	(??_digitalWrite+1)^0,w,c
  3880  0011FA  1284               	iorwf	132,f,c	;volatile
  3881  0011FC  EF0F  F009         	goto	l263
  3882  001200                     l2343:
  3883  001200  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3884  001204  0E01               	movlw	1
  3885  001206  6E06               	movwf	(??_digitalWrite+1)^0,c
  3886  001208  2A05               	incf	??_digitalWrite^0,f,c
  3887  00120A  EF09  F009         	goto	u1604
  3888  00120E                     u1605:
  3889  00120E  90D8               	bcf	status,0,c
  3890  001210  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3891  001212                     u1604:
  3892  001212  2E05               	decfsz	??_digitalWrite^0,f,c
  3893  001214  EF07  F009         	goto	u1605
  3894  001218  5006               	movf	(??_digitalWrite+1)^0,w,c
  3895  00121A  0AFF               	xorlw	255
  3896  00121C  1684               	andwf	132,f,c	;volatile
  3897  00121E                     l263:
  3898  00121E  0012               	return		;funcret
  3899  001220                     __end_of_digitalWrite:
  3900                           	callstack 0
  3901                           
  3902 ;; *************** function _digitalRead *****************
  3903 ;; Defined at:
  3904 ;;		line 39 in file "io.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  pin             2    0[COMRAM] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;		None
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  2    0[COMRAM] int 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3918 ;;      Params:         2       0       0       0       0       0       0
  3919 ;;      Locals:         0       0       0       0       0       0       0
  3920 ;;      Temps:          3       0       0       0       0       0       0
  3921 ;;      Totals:         5       0       0       0       0       0       0
  3922 ;;Total ram usage:        5 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_kpDebounce
  3928 ;;		_read_SCL
  3929 ;;		_read_SDA
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text20
  3934  00146E                     __ptext20:
  3935                           	callstack 0
  3936  00146E                     _digitalRead:
  3937                           	callstack 29
  3938  00146E                     
  3939                           ;io.c: 40:     if(pin <8){
  3940  00146E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3941  001470  EF45  F00A         	goto	u1850
  3942  001474  5002               	movf	(digitalRead@pin+1)^0,w,c
  3943  001476  E107               	bnz	u1851
  3944  001478  0E08               	movlw	8
  3945  00147A  5C01               	subwf	digitalRead@pin^0,w,c
  3946  00147C  B0D8               	btfsc	status,0,c
  3947  00147E  EF43  F00A         	goto	u1851
  3948  001482  EF45  F00A         	goto	u1850
  3949  001486                     u1851:
  3950  001486  EF59  F00A         	goto	l2437
  3951  00148A                     u1850:
  3952  00148A                     
  3953                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  3954  00148A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3955  00148E  0E01               	movlw	1
  3956  001490  6E04               	movwf	(??_digitalRead+1)^0,c
  3957  001492  2A03               	incf	??_digitalRead^0,f,c
  3958  001494  EF4E  F00A         	goto	u1864
  3959  001498                     u1865:
  3960  001498  90D8               	bcf	status,0,c
  3961  00149A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3962  00149C                     u1864:
  3963  00149C  2E03               	decfsz	??_digitalRead^0,f,c
  3964  00149E  EF4C  F00A         	goto	u1865
  3965  0014A2  5004               	movf	(??_digitalRead+1)^0,w,c
  3966  0014A4  1480               	andwf	128,w,c	;volatile
  3967  0014A6  6E05               	movwf	(??_digitalRead+2)^0,c
  3968  0014A8  5005               	movf	(??_digitalRead+2)^0,w,c
  3969  0014AA  6E01               	movwf	?_digitalRead^0,c
  3970  0014AC  6A02               	clrf	(?_digitalRead+1)^0,c
  3971  0014AE  EFEB  F00A         	goto	l267
  3972  0014B2                     l2437:
  3973  0014B2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3974  0014B4  EF67  F00A         	goto	u1870
  3975  0014B8  5002               	movf	(digitalRead@pin+1)^0,w,c
  3976  0014BA  E107               	bnz	u1871
  3977  0014BC  0E10               	movlw	16
  3978  0014BE  5C01               	subwf	digitalRead@pin^0,w,c
  3979  0014C0  B0D8               	btfsc	status,0,c
  3980  0014C2  EF65  F00A         	goto	u1871
  3981  0014C6  EF67  F00A         	goto	u1870
  3982  0014CA                     u1871:
  3983  0014CA  EF7D  F00A         	goto	l2445
  3984  0014CE                     u1870:
  3985  0014CE                     
  3986                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  3987  0014CE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  3988  0014D2  0EF8               	movlw	-8
  3989  0014D4  2603               	addwf	??_digitalRead^0,f,c
  3990  0014D6  0E01               	movlw	1
  3991  0014D8  6E04               	movwf	(??_digitalRead+1)^0,c
  3992  0014DA  2A03               	incf	??_digitalRead^0,f,c
  3993  0014DC  EF72  F00A         	goto	u1884
  3994  0014E0                     u1885:
  3995  0014E0  90D8               	bcf	status,0,c
  3996  0014E2  3604               	rlcf	(??_digitalRead+1)^0,f,c
  3997  0014E4                     u1884:
  3998  0014E4  2E03               	decfsz	??_digitalRead^0,f,c
  3999  0014E6  EF70  F00A         	goto	u1885
  4000  0014EA  5004               	movf	(??_digitalRead+1)^0,w,c
  4001  0014EC  1481               	andwf	129,w,c	;volatile
  4002  0014EE  6E05               	movwf	(??_digitalRead+2)^0,c
  4003  0014F0  5005               	movf	(??_digitalRead+2)^0,w,c
  4004  0014F2  6E01               	movwf	?_digitalRead^0,c
  4005  0014F4  6A02               	clrf	(?_digitalRead+1)^0,c
  4006  0014F6  EFEB  F00A         	goto	l267
  4007  0014FA                     l2445:
  4008  0014FA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4009  0014FC  EF8B  F00A         	goto	u1890
  4010  001500  5002               	movf	(digitalRead@pin+1)^0,w,c
  4011  001502  E107               	bnz	u1891
  4012  001504  0E18               	movlw	24
  4013  001506  5C01               	subwf	digitalRead@pin^0,w,c
  4014  001508  B0D8               	btfsc	status,0,c
  4015  00150A  EF89  F00A         	goto	u1891
  4016  00150E  EF8B  F00A         	goto	u1890
  4017  001512                     u1891:
  4018  001512  EFA1  F00A         	goto	l2453
  4019  001516                     u1890:
  4020  001516                     
  4021                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4022  001516  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4023  00151A  0EF0               	movlw	-16
  4024  00151C  2603               	addwf	??_digitalRead^0,f,c
  4025  00151E  0E01               	movlw	1
  4026  001520  6E04               	movwf	(??_digitalRead+1)^0,c
  4027  001522  2A03               	incf	??_digitalRead^0,f,c
  4028  001524  EF96  F00A         	goto	u1904
  4029  001528                     u1905:
  4030  001528  90D8               	bcf	status,0,c
  4031  00152A  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4032  00152C                     u1904:
  4033  00152C  2E03               	decfsz	??_digitalRead^0,f,c
  4034  00152E  EF94  F00A         	goto	u1905
  4035  001532  5004               	movf	(??_digitalRead+1)^0,w,c
  4036  001534  1482               	andwf	130,w,c	;volatile
  4037  001536  6E05               	movwf	(??_digitalRead+2)^0,c
  4038  001538  5005               	movf	(??_digitalRead+2)^0,w,c
  4039  00153A  6E01               	movwf	?_digitalRead^0,c
  4040  00153C  6A02               	clrf	(?_digitalRead+1)^0,c
  4041  00153E  EFEB  F00A         	goto	l267
  4042  001542                     l2453:
  4043  001542  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4044  001544  EFAF  F00A         	goto	u1910
  4045  001548  5002               	movf	(digitalRead@pin+1)^0,w,c
  4046  00154A  E107               	bnz	u1911
  4047  00154C  0E20               	movlw	32
  4048  00154E  5C01               	subwf	digitalRead@pin^0,w,c
  4049  001550  B0D8               	btfsc	status,0,c
  4050  001552  EFAD  F00A         	goto	u1911
  4051  001556  EFAF  F00A         	goto	u1910
  4052  00155A                     u1911:
  4053  00155A  EFC5  F00A         	goto	l2461
  4054  00155E                     u1910:
  4055  00155E                     
  4056                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4057  00155E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4058  001562  0EE8               	movlw	-24
  4059  001564  2603               	addwf	??_digitalRead^0,f,c
  4060  001566  0E01               	movlw	1
  4061  001568  6E04               	movwf	(??_digitalRead+1)^0,c
  4062  00156A  2A03               	incf	??_digitalRead^0,f,c
  4063  00156C  EFBA  F00A         	goto	u1924
  4064  001570                     u1925:
  4065  001570  90D8               	bcf	status,0,c
  4066  001572  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4067  001574                     u1924:
  4068  001574  2E03               	decfsz	??_digitalRead^0,f,c
  4069  001576  EFB8  F00A         	goto	u1925
  4070  00157A  5004               	movf	(??_digitalRead+1)^0,w,c
  4071  00157C  1483               	andwf	131,w,c	;volatile
  4072  00157E  6E05               	movwf	(??_digitalRead+2)^0,c
  4073  001580  5005               	movf	(??_digitalRead+2)^0,w,c
  4074  001582  6E01               	movwf	?_digitalRead^0,c
  4075  001584  6A02               	clrf	(?_digitalRead+1)^0,c
  4076  001586  EFEB  F00A         	goto	l267
  4077  00158A                     l2461:
  4078  00158A  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4079  00158C  EFD3  F00A         	goto	u1930
  4080  001590  5002               	movf	(digitalRead@pin+1)^0,w,c
  4081  001592  E107               	bnz	u1931
  4082  001594  0E28               	movlw	40
  4083  001596  5C01               	subwf	digitalRead@pin^0,w,c
  4084  001598  B0D8               	btfsc	status,0,c
  4085  00159A  EFD1  F00A         	goto	u1931
  4086  00159E  EFD3  F00A         	goto	u1930
  4087  0015A2                     u1931:
  4088  0015A2  EFE9  F00A         	goto	l272
  4089  0015A6                     u1930:
  4090  0015A6                     
  4091                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4092  0015A6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4093  0015AA  0EE0               	movlw	-32
  4094  0015AC  2603               	addwf	??_digitalRead^0,f,c
  4095  0015AE  0E01               	movlw	1
  4096  0015B0  6E04               	movwf	(??_digitalRead+1)^0,c
  4097  0015B2  2A03               	incf	??_digitalRead^0,f,c
  4098  0015B4  EFDE  F00A         	goto	u1944
  4099  0015B8                     u1945:
  4100  0015B8  90D8               	bcf	status,0,c
  4101  0015BA  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4102  0015BC                     u1944:
  4103  0015BC  2E03               	decfsz	??_digitalRead^0,f,c
  4104  0015BE  EFDC  F00A         	goto	u1945
  4105  0015C2  5004               	movf	(??_digitalRead+1)^0,w,c
  4106  0015C4  1484               	andwf	132,w,c	;volatile
  4107  0015C6  6E05               	movwf	(??_digitalRead+2)^0,c
  4108  0015C8  5005               	movf	(??_digitalRead+2)^0,w,c
  4109  0015CA  6E01               	movwf	?_digitalRead^0,c
  4110  0015CC  6A02               	clrf	(?_digitalRead+1)^0,c
  4111  0015CE  EFEB  F00A         	goto	l267
  4112  0015D2                     l272:
  4113  0015D2                     
  4114                           ;io.c: 51:     return -1;
  4115  0015D2  6801               	setf	?_digitalRead^0,c
  4116  0015D4  6802               	setf	(?_digitalRead+1)^0,c
  4117  0015D6                     l267:
  4118  0015D6  0012               	return		;funcret
  4119  0015D8                     __end_of_digitalRead:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _atraso_ms *****************
  4123 ;; Defined at:
  4124 ;;		line 2 in file "atraso.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  num             2    0[COMRAM] unsigned int 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  i               2    2[COMRAM] int 
  4129 ;;  k               1    5[COMRAM] volatile unsigned char 
  4130 ;;  j               1    4[COMRAM] volatile unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4140 ;;      Params:         2       0       0       0       0       0       0
  4141 ;;      Locals:         4       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0
  4143 ;;      Totals:         6       0       0       0       0       0       0
  4144 ;;Total ram usage:        6 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text21
  4154  001A5E                     __ptext21:
  4155                           	callstack 0
  4156  001A5E                     _atraso_ms:
  4157                           	callstack 30
  4158  001A5E                     
  4159                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  4160  001A5E  0E00               	movlw	0
  4161  001A60  6E04               	movwf	(atraso_ms@i+1)^0,c
  4162  001A62  0E00               	movlw	0
  4163  001A64  6E03               	movwf	atraso_ms@i^0,c
  4164  001A66  EF55  F00D         	goto	l2589
  4165  001A6A                     l2567:
  4166                           
  4167                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  4168  001A6A  0E00               	movlw	0
  4169  001A6C  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4170  001A6E                     l2569:
  4171  001A6E  0E28               	movlw	40
  4172  001A70  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4173  001A72  EF3D  F00D         	goto	u2091
  4174  001A76  EF3F  F00D         	goto	u2090
  4175  001A7A                     u2091:
  4176  001A7A  EF41  F00D         	goto	l2573
  4177  001A7E                     u2090:
  4178  001A7E  EF53  F00D         	goto	l2587
  4179  001A82                     l2573:
  4180                           
  4181                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  4182  001A82  0E00               	movlw	0
  4183  001A84  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4184  001A86                     l2575:
  4185  001A86  0E02               	movlw	2
  4186  001A88  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4187  001A8A  EF49  F00D         	goto	u2101
  4188  001A8E  EF4B  F00D         	goto	u2100
  4189  001A92                     u2101:
  4190  001A92  EF4D  F00D         	goto	l2579
  4191  001A96                     u2100:
  4192  001A96  EF50  F00D         	goto	l2583
  4193  001A9A                     l2579:
  4194  001A9A  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4195  001A9C  EF43  F00D         	goto	l2575
  4196  001AA0                     l2583:
  4197                           
  4198                           ;atraso.c: 7:         }
  4199  001AA0  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4200  001AA2  EF37  F00D         	goto	l2569
  4201  001AA6                     l2587:
  4202                           
  4203                           ;atraso.c: 9:     }
  4204  001AA6  4A03               	infsnz	atraso_ms@i^0,f,c
  4205  001AA8  2A04               	incf	(atraso_ms@i+1)^0,f,c
  4206  001AAA                     l2589:
  4207  001AAA  5001               	movf	atraso_ms@num^0,w,c
  4208  001AAC  5C03               	subwf	atraso_ms@i^0,w,c
  4209  001AAE  5002               	movf	(atraso_ms@num+1)^0,w,c
  4210  001AB0  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  4211  001AB2  A0D8               	btfss	status,0,c
  4212  001AB4  EF5E  F00D         	goto	u2111
  4213  001AB8  EF60  F00D         	goto	u2110
  4214  001ABC                     u2111:
  4215  001ABC  EF35  F00D         	goto	l2567
  4216  001AC0                     u2110:
  4217  001AC0  0012               	return		;funcret
  4218  001AC2                     __end_of_atraso_ms:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _adcInit *****************
  4222 ;; Defined at:
  4223 ;;		line 25 in file "adc.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4237 ;;      Params:         0       0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0
  4240 ;;      Totals:         0       0       0       0       0       0       0
  4241 ;;Total ram usage:        0 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 1
  4244 ;; This function calls:
  4245 ;;		_pinMode
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text22
  4252  001BC0                     __ptext22:
  4253                           	callstack 0
  4254  001BC0                     _adcInit:
  4255                           	callstack 29
  4256  001BC0                     
  4257                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4258  001BC0  0E00               	movlw	0
  4259  001BC2  6E02               	movwf	(pinMode@pin+1)^0,c
  4260  001BC4  0E00               	movlw	0
  4261  001BC6  6E01               	movwf	pinMode@pin^0,c
  4262  001BC8  0E00               	movlw	0
  4263  001BCA  6E04               	movwf	(pinMode@type+1)^0,c
  4264  001BCC  0E01               	movlw	1
  4265  001BCE  6E03               	movwf	pinMode@type^0,c
  4266  001BD0  EC10  F009         	call	_pinMode	;wreg free
  4267                           
  4268                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4269  001BD4  0E00               	movlw	0
  4270  001BD6  6E02               	movwf	(pinMode@pin+1)^0,c
  4271  001BD8  0E01               	movlw	1
  4272  001BDA  6E01               	movwf	pinMode@pin^0,c
  4273  001BDC  0E00               	movlw	0
  4274  001BDE  6E04               	movwf	(pinMode@type+1)^0,c
  4275  001BE0  0E01               	movlw	1
  4276  001BE2  6E03               	movwf	pinMode@type^0,c
  4277  001BE4  EC10  F009         	call	_pinMode	;wreg free
  4278                           
  4279                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4280  001BE8  0E00               	movlw	0
  4281  001BEA  6E02               	movwf	(pinMode@pin+1)^0,c
  4282  001BEC  0E02               	movlw	2
  4283  001BEE  6E01               	movwf	pinMode@pin^0,c
  4284  001BF0  0E00               	movlw	0
  4285  001BF2  6E04               	movwf	(pinMode@type+1)^0,c
  4286  001BF4  0E01               	movlw	1
  4287  001BF6  6E03               	movwf	pinMode@type^0,c
  4288  001BF8  EC10  F009         	call	_pinMode	;wreg free
  4289  001BFC                     
  4290                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4291  001BFC  80C2               	bsf	194,0,c	;volatile
  4292  001BFE                     
  4293                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4294  001BFE  0E0C               	movlw	12
  4295  001C00  6EC1               	movwf	193,c	;volatile
  4296  001C02                     
  4297                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4298  001C02  0EAA               	movlw	170
  4299  001C04  6EC0               	movwf	192,c	;volatile
  4300  001C06  0012               	return		;funcret
  4301  001C08                     __end_of_adcInit:
  4302                           	callstack 0
  4303                           
  4304 ;; *************** function _pinMode *****************
  4305 ;; Defined at:
  4306 ;;		line 54 in file "io.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  pin             2    0[COMRAM] int 
  4309 ;;  type            2    2[COMRAM] int 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4321 ;;      Params:         4       0       0       0       0       0       0
  4322 ;;      Locals:         0       0       0       0       0       0       0
  4323 ;;      Temps:          2       0       0       0       0       0       0
  4324 ;;      Totals:         6       0       0       0       0       0       0
  4325 ;;Total ram usage:        6 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;;		_adcInit
  4332 ;;		_kpInit
  4333 ;;		_lcdInit
  4334 ;;		_rgbInit
  4335 ;;		_soInit
  4336 ;;		_i2cInit
  4337 ;;		_read_SCL
  4338 ;;		_read_SDA
  4339 ;;		_clear_SCL
  4340 ;;		_clear_SDA
  4341 ;;		_ssdInit
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text23
  4346  001220                     __ptext23:
  4347                           	callstack 0
  4348  001220                     _pinMode:
  4349                           	callstack 29
  4350  001220                     
  4351                           ;io.c: 56:     if(pin <8){
  4352  001220  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4353  001222  EF1E  F009         	goto	u1620
  4354  001226  5002               	movf	(pinMode@pin+1)^0,w,c
  4355  001228  E107               	bnz	u1621
  4356  00122A  0E08               	movlw	8
  4357  00122C  5C01               	subwf	pinMode@pin^0,w,c
  4358  00122E  B0D8               	btfsc	status,0,c
  4359  001230  EF1C  F009         	goto	u1621
  4360  001234  EF1E  F009         	goto	u1620
  4361  001238                     u1621:
  4362  001238  EF48  F009         	goto	l2381
  4363  00123C                     u1620:
  4364  00123C                     
  4365                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4366  00123C  5003               	movf	pinMode@type^0,w,c
  4367  00123E  1004               	iorwf	(pinMode@type+1)^0,w,c
  4368  001240  B4D8               	btfsc	status,2,c
  4369  001242  EF25  F009         	goto	u1631
  4370  001246  EF27  F009         	goto	u1630
  4371  00124A                     u1631:
  4372  00124A  EF37  F009         	goto	l2379
  4373  00124E                     u1630:
  4374  00124E  C001  F005         	movff	pinMode@pin,??_pinMode
  4375  001252  0E01               	movlw	1
  4376  001254  6E06               	movwf	(??_pinMode+1)^0,c
  4377  001256  2A05               	incf	??_pinMode^0,f,c
  4378  001258  EF30  F009         	goto	u1644
  4379  00125C                     u1645:
  4380  00125C  90D8               	bcf	status,0,c
  4381  00125E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4382  001260                     u1644:
  4383  001260  2E05               	decfsz	??_pinMode^0,f,c
  4384  001262  EF2E  F009         	goto	u1645
  4385  001266  5006               	movf	(??_pinMode+1)^0,w,c
  4386  001268  1292               	iorwf	146,f,c	;volatile
  4387  00126A  EF36  F00A         	goto	l297
  4388  00126E                     l2379:
  4389  00126E  C001  F005         	movff	pinMode@pin,??_pinMode
  4390  001272  0E01               	movlw	1
  4391  001274  6E06               	movwf	(??_pinMode+1)^0,c
  4392  001276  2A05               	incf	??_pinMode^0,f,c
  4393  001278  EF40  F009         	goto	u1654
  4394  00127C                     u1655:
  4395  00127C  90D8               	bcf	status,0,c
  4396  00127E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4397  001280                     u1654:
  4398  001280  2E05               	decfsz	??_pinMode^0,f,c
  4399  001282  EF3E  F009         	goto	u1655
  4400  001286  5006               	movf	(??_pinMode+1)^0,w,c
  4401  001288  0AFF               	xorlw	255
  4402  00128A  1692               	andwf	146,f,c	;volatile
  4403  00128C  EF36  F00A         	goto	l297
  4404  001290                     l2381:
  4405  001290  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4406  001292  EF56  F009         	goto	u1660
  4407  001296  5002               	movf	(pinMode@pin+1)^0,w,c
  4408  001298  E107               	bnz	u1661
  4409  00129A  0E10               	movlw	16
  4410  00129C  5C01               	subwf	pinMode@pin^0,w,c
  4411  00129E  B0D8               	btfsc	status,0,c
  4412  0012A0  EF54  F009         	goto	u1661
  4413  0012A4  EF56  F009         	goto	u1660
  4414  0012A8                     u1661:
  4415  0012A8  EF84  F009         	goto	l2389
  4416  0012AC                     u1660:
  4417  0012AC                     
  4418                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4419  0012AC  5003               	movf	pinMode@type^0,w,c
  4420  0012AE  1004               	iorwf	(pinMode@type+1)^0,w,c
  4421  0012B0  B4D8               	btfsc	status,2,c
  4422  0012B2  EF5D  F009         	goto	u1671
  4423  0012B6  EF5F  F009         	goto	u1670
  4424  0012BA                     u1671:
  4425  0012BA  EF71  F009         	goto	l2387
  4426  0012BE                     u1670:
  4427  0012BE  C001  F005         	movff	pinMode@pin,??_pinMode
  4428  0012C2  0EF8               	movlw	-8
  4429  0012C4  2605               	addwf	??_pinMode^0,f,c
  4430  0012C6  0E01               	movlw	1
  4431  0012C8  6E06               	movwf	(??_pinMode+1)^0,c
  4432  0012CA  2A05               	incf	??_pinMode^0,f,c
  4433  0012CC  EF6A  F009         	goto	u1684
  4434  0012D0                     u1685:
  4435  0012D0  90D8               	bcf	status,0,c
  4436  0012D2  3606               	rlcf	(??_pinMode+1)^0,f,c
  4437  0012D4                     u1684:
  4438  0012D4  2E05               	decfsz	??_pinMode^0,f,c
  4439  0012D6  EF68  F009         	goto	u1685
  4440  0012DA  5006               	movf	(??_pinMode+1)^0,w,c
  4441  0012DC  1293               	iorwf	147,f,c	;volatile
  4442  0012DE  EF36  F00A         	goto	l297
  4443  0012E2                     l2387:
  4444  0012E2  C001  F005         	movff	pinMode@pin,??_pinMode
  4445  0012E6  0EF8               	movlw	-8
  4446  0012E8  2605               	addwf	??_pinMode^0,f,c
  4447  0012EA  0E01               	movlw	1
  4448  0012EC  6E06               	movwf	(??_pinMode+1)^0,c
  4449  0012EE  2A05               	incf	??_pinMode^0,f,c
  4450  0012F0  EF7C  F009         	goto	u1694
  4451  0012F4                     u1695:
  4452  0012F4  90D8               	bcf	status,0,c
  4453  0012F6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4454  0012F8                     u1694:
  4455  0012F8  2E05               	decfsz	??_pinMode^0,f,c
  4456  0012FA  EF7A  F009         	goto	u1695
  4457  0012FE  5006               	movf	(??_pinMode+1)^0,w,c
  4458  001300  0AFF               	xorlw	255
  4459  001302  1693               	andwf	147,f,c	;volatile
  4460  001304  EF36  F00A         	goto	l297
  4461  001308                     l2389:
  4462  001308  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4463  00130A  EF92  F009         	goto	u1700
  4464  00130E  5002               	movf	(pinMode@pin+1)^0,w,c
  4465  001310  E107               	bnz	u1701
  4466  001312  0E18               	movlw	24
  4467  001314  5C01               	subwf	pinMode@pin^0,w,c
  4468  001316  B0D8               	btfsc	status,0,c
  4469  001318  EF90  F009         	goto	u1701
  4470  00131C  EF92  F009         	goto	u1700
  4471  001320                     u1701:
  4472  001320  EFC0  F009         	goto	l2397
  4473  001324                     u1700:
  4474  001324                     
  4475                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4476  001324  5003               	movf	pinMode@type^0,w,c
  4477  001326  1004               	iorwf	(pinMode@type+1)^0,w,c
  4478  001328  B4D8               	btfsc	status,2,c
  4479  00132A  EF99  F009         	goto	u1711
  4480  00132E  EF9B  F009         	goto	u1710
  4481  001332                     u1711:
  4482  001332  EFAD  F009         	goto	l2395
  4483  001336                     u1710:
  4484  001336  C001  F005         	movff	pinMode@pin,??_pinMode
  4485  00133A  0EF0               	movlw	-16
  4486  00133C  2605               	addwf	??_pinMode^0,f,c
  4487  00133E  0E01               	movlw	1
  4488  001340  6E06               	movwf	(??_pinMode+1)^0,c
  4489  001342  2A05               	incf	??_pinMode^0,f,c
  4490  001344  EFA6  F009         	goto	u1724
  4491  001348                     u1725:
  4492  001348  90D8               	bcf	status,0,c
  4493  00134A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4494  00134C                     u1724:
  4495  00134C  2E05               	decfsz	??_pinMode^0,f,c
  4496  00134E  EFA4  F009         	goto	u1725
  4497  001352  5006               	movf	(??_pinMode+1)^0,w,c
  4498  001354  1294               	iorwf	148,f,c	;volatile
  4499  001356  EF36  F00A         	goto	l297
  4500  00135A                     l2395:
  4501  00135A  C001  F005         	movff	pinMode@pin,??_pinMode
  4502  00135E  0EF0               	movlw	-16
  4503  001360  2605               	addwf	??_pinMode^0,f,c
  4504  001362  0E01               	movlw	1
  4505  001364  6E06               	movwf	(??_pinMode+1)^0,c
  4506  001366  2A05               	incf	??_pinMode^0,f,c
  4507  001368  EFB8  F009         	goto	u1734
  4508  00136C                     u1735:
  4509  00136C  90D8               	bcf	status,0,c
  4510  00136E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4511  001370                     u1734:
  4512  001370  2E05               	decfsz	??_pinMode^0,f,c
  4513  001372  EFB6  F009         	goto	u1735
  4514  001376  5006               	movf	(??_pinMode+1)^0,w,c
  4515  001378  0AFF               	xorlw	255
  4516  00137A  1694               	andwf	148,f,c	;volatile
  4517  00137C  EF36  F00A         	goto	l297
  4518  001380                     l2397:
  4519  001380  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4520  001382  EFCE  F009         	goto	u1740
  4521  001386  5002               	movf	(pinMode@pin+1)^0,w,c
  4522  001388  E107               	bnz	u1741
  4523  00138A  0E20               	movlw	32
  4524  00138C  5C01               	subwf	pinMode@pin^0,w,c
  4525  00138E  B0D8               	btfsc	status,0,c
  4526  001390  EFCC  F009         	goto	u1741
  4527  001394  EFCE  F009         	goto	u1740
  4528  001398                     u1741:
  4529  001398  EFFC  F009         	goto	l2405
  4530  00139C                     u1740:
  4531  00139C                     
  4532                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4533  00139C  5003               	movf	pinMode@type^0,w,c
  4534  00139E  1004               	iorwf	(pinMode@type+1)^0,w,c
  4535  0013A0  B4D8               	btfsc	status,2,c
  4536  0013A2  EFD5  F009         	goto	u1751
  4537  0013A6  EFD7  F009         	goto	u1750
  4538  0013AA                     u1751:
  4539  0013AA  EFE9  F009         	goto	l2403
  4540  0013AE                     u1750:
  4541  0013AE  C001  F005         	movff	pinMode@pin,??_pinMode
  4542  0013B2  0EE8               	movlw	-24
  4543  0013B4  2605               	addwf	??_pinMode^0,f,c
  4544  0013B6  0E01               	movlw	1
  4545  0013B8  6E06               	movwf	(??_pinMode+1)^0,c
  4546  0013BA  2A05               	incf	??_pinMode^0,f,c
  4547  0013BC  EFE2  F009         	goto	u1764
  4548  0013C0                     u1765:
  4549  0013C0  90D8               	bcf	status,0,c
  4550  0013C2  3606               	rlcf	(??_pinMode+1)^0,f,c
  4551  0013C4                     u1764:
  4552  0013C4  2E05               	decfsz	??_pinMode^0,f,c
  4553  0013C6  EFE0  F009         	goto	u1765
  4554  0013CA  5006               	movf	(??_pinMode+1)^0,w,c
  4555  0013CC  1295               	iorwf	149,f,c	;volatile
  4556  0013CE  EF36  F00A         	goto	l297
  4557  0013D2                     l2403:
  4558  0013D2  C001  F005         	movff	pinMode@pin,??_pinMode
  4559  0013D6  0EE8               	movlw	-24
  4560  0013D8  2605               	addwf	??_pinMode^0,f,c
  4561  0013DA  0E01               	movlw	1
  4562  0013DC  6E06               	movwf	(??_pinMode+1)^0,c
  4563  0013DE  2A05               	incf	??_pinMode^0,f,c
  4564  0013E0  EFF4  F009         	goto	u1774
  4565  0013E4                     u1775:
  4566  0013E4  90D8               	bcf	status,0,c
  4567  0013E6  3606               	rlcf	(??_pinMode+1)^0,f,c
  4568  0013E8                     u1774:
  4569  0013E8  2E05               	decfsz	??_pinMode^0,f,c
  4570  0013EA  EFF2  F009         	goto	u1775
  4571  0013EE  5006               	movf	(??_pinMode+1)^0,w,c
  4572  0013F0  0AFF               	xorlw	255
  4573  0013F2  1695               	andwf	149,f,c	;volatile
  4574  0013F4  EF36  F00A         	goto	l297
  4575  0013F8                     l2405:
  4576  0013F8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4577  0013FA  EF0A  F00A         	goto	u1780
  4578  0013FE  5002               	movf	(pinMode@pin+1)^0,w,c
  4579  001400  E107               	bnz	u1781
  4580  001402  0E28               	movlw	40
  4581  001404  5C01               	subwf	pinMode@pin^0,w,c
  4582  001406  B0D8               	btfsc	status,0,c
  4583  001408  EF08  F00A         	goto	u1781
  4584  00140C  EF0A  F00A         	goto	u1780
  4585  001410                     u1781:
  4586  001410  EF36  F00A         	goto	l297
  4587  001414                     u1780:
  4588  001414                     
  4589                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4590  001414  5003               	movf	pinMode@type^0,w,c
  4591  001416  1004               	iorwf	(pinMode@type+1)^0,w,c
  4592  001418  B4D8               	btfsc	status,2,c
  4593  00141A  EF11  F00A         	goto	u1791
  4594  00141E  EF13  F00A         	goto	u1790
  4595  001422                     u1791:
  4596  001422  EF25  F00A         	goto	l2411
  4597  001426                     u1790:
  4598  001426  C001  F005         	movff	pinMode@pin,??_pinMode
  4599  00142A  0EE0               	movlw	-32
  4600  00142C  2605               	addwf	??_pinMode^0,f,c
  4601  00142E  0E01               	movlw	1
  4602  001430  6E06               	movwf	(??_pinMode+1)^0,c
  4603  001432  2A05               	incf	??_pinMode^0,f,c
  4604  001434  EF1E  F00A         	goto	u1804
  4605  001438                     u1805:
  4606  001438  90D8               	bcf	status,0,c
  4607  00143A  3606               	rlcf	(??_pinMode+1)^0,f,c
  4608  00143C                     u1804:
  4609  00143C  2E05               	decfsz	??_pinMode^0,f,c
  4610  00143E  EF1C  F00A         	goto	u1805
  4611  001442  5006               	movf	(??_pinMode+1)^0,w,c
  4612  001444  1296               	iorwf	150,f,c	;volatile
  4613  001446  EF36  F00A         	goto	l297
  4614  00144A                     l2411:
  4615  00144A  C001  F005         	movff	pinMode@pin,??_pinMode
  4616  00144E  0EE0               	movlw	-32
  4617  001450  2605               	addwf	??_pinMode^0,f,c
  4618  001452  0E01               	movlw	1
  4619  001454  6E06               	movwf	(??_pinMode+1)^0,c
  4620  001456  2A05               	incf	??_pinMode^0,f,c
  4621  001458  EF30  F00A         	goto	u1814
  4622  00145C                     u1815:
  4623  00145C  90D8               	bcf	status,0,c
  4624  00145E  3606               	rlcf	(??_pinMode+1)^0,f,c
  4625  001460                     u1814:
  4626  001460  2E05               	decfsz	??_pinMode^0,f,c
  4627  001462  EF2E  F00A         	goto	u1815
  4628  001466  5006               	movf	(??_pinMode+1)^0,w,c
  4629  001468  0AFF               	xorlw	255
  4630  00146A  1696               	andwf	150,f,c	;volatile
  4631  00146C                     l297:
  4632  00146C  0012               	return		;funcret
  4633  00146E                     __end_of_pinMode:
  4634                           	callstack 0
  4635                           
  4636 ;; *************** function ___awmod *****************
  4637 ;; Defined at:
  4638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;  dividend        2    8[COMRAM] int 
  4641 ;;  divisor         2   10[COMRAM] int 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  sign            1   13[COMRAM] unsigned char 
  4644 ;;  counter         1   12[COMRAM] unsigned char 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  2    8[COMRAM] int 
  4647 ;; Registers used:
  4648 ;;		wreg, status,2, status,0
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4654 ;;      Params:         4       0       0       0       0       0       0
  4655 ;;      Locals:         2       0       0       0       0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0
  4657 ;;      Totals:         6       0       0       0       0       0       0
  4658 ;;Total ram usage:        6 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;;		_dec2bcd
  4665 ;;		_lcdNumber
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text24
  4670  001936                     __ptext24:
  4671                           	callstack 0
  4672  001936                     ___awmod:
  4673                           	callstack 30
  4674  001936  0E00               	movlw	0
  4675  001938  6E0E               	movwf	___awmod@sign^0,c
  4676  00193A  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4677  00193C  EFA4  F00C         	goto	u2250
  4678  001940  EFA2  F00C         	goto	u2251
  4679  001944                     u2251:
  4680  001944  EFAA  F00C         	goto	l2713
  4681  001948                     u2250:
  4682  001948  6C09               	negf	___awmod@dividend^0,c
  4683  00194A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4684  00194C  B0D8               	btfsc	status,0,c
  4685  00194E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4686  001950  0E01               	movlw	1
  4687  001952  6E0E               	movwf	___awmod@sign^0,c
  4688  001954                     l2713:
  4689  001954  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4690  001956  EFB1  F00C         	goto	u2260
  4691  00195A  EFAF  F00C         	goto	u2261
  4692  00195E                     u2261:
  4693  00195E  EFB5  F00C         	goto	l2717
  4694  001962                     u2260:
  4695  001962  6C0B               	negf	___awmod@divisor^0,c
  4696  001964  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4697  001966  B0D8               	btfsc	status,0,c
  4698  001968  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4699  00196A                     l2717:
  4700  00196A  500B               	movf	___awmod@divisor^0,w,c
  4701  00196C  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4702  00196E  B4D8               	btfsc	status,2,c
  4703  001970  EFBC  F00C         	goto	u2271
  4704  001974  EFBE  F00C         	goto	u2270
  4705  001978                     u2271:
  4706  001978  EFE2  F00C         	goto	l2733
  4707  00197C                     u2270:
  4708  00197C  0E01               	movlw	1
  4709  00197E  6E0D               	movwf	___awmod@counter^0,c
  4710  001980  EFC6  F00C         	goto	l2723
  4711  001984                     l2721:
  4712  001984  90D8               	bcf	status,0,c
  4713  001986  360B               	rlcf	___awmod@divisor^0,f,c
  4714  001988  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4715  00198A  2A0D               	incf	___awmod@counter^0,f,c
  4716  00198C                     l2723:
  4717  00198C  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4718  00198E  EFCB  F00C         	goto	u2281
  4719  001992  EFCD  F00C         	goto	u2280
  4720  001996                     u2281:
  4721  001996  EFC2  F00C         	goto	l2721
  4722  00199A                     u2280:
  4723  00199A                     l2725:
  4724  00199A  500B               	movf	___awmod@divisor^0,w,c
  4725  00199C  5C09               	subwf	___awmod@dividend^0,w,c
  4726  00199E  500C               	movf	(___awmod@divisor+1)^0,w,c
  4727  0019A0  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4728  0019A2  A0D8               	btfss	status,0,c
  4729  0019A4  EFD6  F00C         	goto	u2291
  4730  0019A8  EFD8  F00C         	goto	u2290
  4731  0019AC                     u2291:
  4732  0019AC  EFDC  F00C         	goto	l2729
  4733  0019B0                     u2290:
  4734  0019B0  500B               	movf	___awmod@divisor^0,w,c
  4735  0019B2  5E09               	subwf	___awmod@dividend^0,f,c
  4736  0019B4  500C               	movf	(___awmod@divisor+1)^0,w,c
  4737  0019B6  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4738  0019B8                     l2729:
  4739  0019B8  90D8               	bcf	status,0,c
  4740  0019BA  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4741  0019BC  320B               	rrcf	___awmod@divisor^0,f,c
  4742  0019BE  2E0D               	decfsz	___awmod@counter^0,f,c
  4743  0019C0  EFCD  F00C         	goto	l2725
  4744  0019C4                     l2733:
  4745  0019C4  500E               	movf	___awmod@sign^0,w,c
  4746  0019C6  B4D8               	btfsc	status,2,c
  4747  0019C8  EFE8  F00C         	goto	u2301
  4748  0019CC  EFEA  F00C         	goto	u2300
  4749  0019D0                     u2301:
  4750  0019D0  EFEE  F00C         	goto	l2737
  4751  0019D4                     u2300:
  4752  0019D4  6C09               	negf	___awmod@dividend^0,c
  4753  0019D6  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4754  0019D8  B0D8               	btfsc	status,0,c
  4755  0019DA  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4756  0019DC                     l2737:
  4757  0019DC  C009  F009         	movff	___awmod@dividend,?___awmod
  4758  0019E0  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4759  0019E4  0012               	return		;funcret
  4760  0019E6                     __end_of___awmod:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function ___awdiv *****************
  4764 ;; Defined at:
  4765 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  dividend        2    0[COMRAM] int 
  4768 ;;  divisor         2    2[COMRAM] int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  quotient        2    6[COMRAM] int 
  4771 ;;  sign            1    5[COMRAM] unsigned char 
  4772 ;;  counter         1    4[COMRAM] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2    0[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         4       0       0       0       0       0       0
  4783 ;;      Locals:         4       0       0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0
  4785 ;;      Totals:         8       0       0       0       0       0       0
  4786 ;;Total ram usage:        8 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;;		_dec2bcd
  4793 ;;		_bcd2dec
  4794 ;;		_lcdNumber
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text25
  4799  00170E                     __ptext25:
  4800                           	callstack 0
  4801  00170E                     ___awdiv:
  4802                           	callstack 30
  4803  00170E  0E00               	movlw	0
  4804  001710  6E06               	movwf	___awdiv@sign^0,c
  4805  001712  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4806  001714  EF90  F00B         	goto	u2190
  4807  001718  EF8E  F00B         	goto	u2191
  4808  00171C                     u2191:
  4809  00171C  EF96  F00B         	goto	l2669
  4810  001720                     u2190:
  4811  001720  6C03               	negf	___awdiv@divisor^0,c
  4812  001722  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4813  001724  B0D8               	btfsc	status,0,c
  4814  001726  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4815  001728  0E01               	movlw	1
  4816  00172A  6E06               	movwf	___awdiv@sign^0,c
  4817  00172C                     l2669:
  4818  00172C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4819  00172E  EF9D  F00B         	goto	u2200
  4820  001732  EF9B  F00B         	goto	u2201
  4821  001736                     u2201:
  4822  001736  EFA3  F00B         	goto	l2675
  4823  00173A                     u2200:
  4824  00173A  6C01               	negf	___awdiv@dividend^0,c
  4825  00173C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4826  00173E  B0D8               	btfsc	status,0,c
  4827  001740  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4828  001742  0E01               	movlw	1
  4829  001744  1A06               	xorwf	___awdiv@sign^0,f,c
  4830  001746                     l2675:
  4831  001746  0E00               	movlw	0
  4832  001748  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4833  00174A  0E00               	movlw	0
  4834  00174C  6E07               	movwf	___awdiv@quotient^0,c
  4835  00174E  5003               	movf	___awdiv@divisor^0,w,c
  4836  001750  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4837  001752  B4D8               	btfsc	status,2,c
  4838  001754  EFAE  F00B         	goto	u2211
  4839  001758  EFB0  F00B         	goto	u2210
  4840  00175C                     u2211:
  4841  00175C  EFD8  F00B         	goto	l2697
  4842  001760                     u2210:
  4843  001760  0E01               	movlw	1
  4844  001762  6E05               	movwf	___awdiv@counter^0,c
  4845  001764  EFB8  F00B         	goto	l2683
  4846  001768                     l2681:
  4847  001768  90D8               	bcf	status,0,c
  4848  00176A  3603               	rlcf	___awdiv@divisor^0,f,c
  4849  00176C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4850  00176E  2A05               	incf	___awdiv@counter^0,f,c
  4851  001770                     l2683:
  4852  001770  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4853  001772  EFBD  F00B         	goto	u2221
  4854  001776  EFBF  F00B         	goto	u2220
  4855  00177A                     u2221:
  4856  00177A  EFB4  F00B         	goto	l2681
  4857  00177E                     u2220:
  4858  00177E                     l2685:
  4859  00177E  90D8               	bcf	status,0,c
  4860  001780  3607               	rlcf	___awdiv@quotient^0,f,c
  4861  001782  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4862  001784  5003               	movf	___awdiv@divisor^0,w,c
  4863  001786  5C01               	subwf	___awdiv@dividend^0,w,c
  4864  001788  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4865  00178A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4866  00178C  A0D8               	btfss	status,0,c
  4867  00178E  EFCB  F00B         	goto	u2231
  4868  001792  EFCD  F00B         	goto	u2230
  4869  001796                     u2231:
  4870  001796  EFD2  F00B         	goto	l2693
  4871  00179A                     u2230:
  4872  00179A  5003               	movf	___awdiv@divisor^0,w,c
  4873  00179C  5E01               	subwf	___awdiv@dividend^0,f,c
  4874  00179E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4875  0017A0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4876  0017A2  8007               	bsf	___awdiv@quotient^0,0,c
  4877  0017A4                     l2693:
  4878  0017A4  90D8               	bcf	status,0,c
  4879  0017A6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4880  0017A8  3203               	rrcf	___awdiv@divisor^0,f,c
  4881  0017AA  2E05               	decfsz	___awdiv@counter^0,f,c
  4882  0017AC  EFBF  F00B         	goto	l2685
  4883  0017B0                     l2697:
  4884  0017B0  5006               	movf	___awdiv@sign^0,w,c
  4885  0017B2  B4D8               	btfsc	status,2,c
  4886  0017B4  EFDE  F00B         	goto	u2241
  4887  0017B8  EFE0  F00B         	goto	u2240
  4888  0017BC                     u2241:
  4889  0017BC  EFE4  F00B         	goto	l2701
  4890  0017C0                     u2240:
  4891  0017C0  6C07               	negf	___awdiv@quotient^0,c
  4892  0017C2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4893  0017C4  B0D8               	btfsc	status,0,c
  4894  0017C6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4895  0017C8                     l2701:
  4896  0017C8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4897  0017CC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4898  0017D0  0012               	return		;funcret
  4899  0017D2                     __end_of___awdiv:
  4900                           	callstack 0
  4901                           
  4902                           	psect	rparam
  4903  0000                     
  4904                           	psect	idloc
  4905                           
  4906                           ;Config register IDLOC0 @ 0x200000
  4907                           ;	unspecified, using default values
  4908  200000                     	org	2097152
  4909  200000  FF                 	db	255
  4910                           
  4911                           ;Config register IDLOC1 @ 0x200001
  4912                           ;	unspecified, using default values
  4913  200001                     	org	2097153
  4914  200001  FF                 	db	255
  4915                           
  4916                           ;Config register IDLOC2 @ 0x200002
  4917                           ;	unspecified, using default values
  4918  200002                     	org	2097154
  4919  200002  FF                 	db	255
  4920                           
  4921                           ;Config register IDLOC3 @ 0x200003
  4922                           ;	unspecified, using default values
  4923  200003                     	org	2097155
  4924  200003  FF                 	db	255
  4925                           
  4926                           ;Config register IDLOC4 @ 0x200004
  4927                           ;	unspecified, using default values
  4928  200004                     	org	2097156
  4929  200004  FF                 	db	255
  4930                           
  4931                           ;Config register IDLOC5 @ 0x200005
  4932                           ;	unspecified, using default values
  4933  200005                     	org	2097157
  4934  200005  FF                 	db	255
  4935                           
  4936                           ;Config register IDLOC6 @ 0x200006
  4937                           ;	unspecified, using default values
  4938  200006                     	org	2097158
  4939  200006  FF                 	db	255
  4940                           
  4941                           ;Config register IDLOC7 @ 0x200007
  4942                           ;	unspecified, using default values
  4943  200007                     	org	2097159
  4944  200007  FF                 	db	255
  4945                           
  4946                           	psect	config
  4947                           
  4948                           ; Padding undefined space
  4949  300000                     	org	3145728
  4950  300000  FF                 	db	255
  4951                           
  4952                           ;Config register CONFIG1H @ 0x300001
  4953                           ;	Oscillator Selection bits
  4954                           ;	OSC = HS, HS oscillator
  4955                           ;	Fail-Safe Clock Monitor Enable bit
  4956                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4957                           ;	Internal/External Oscillator Switchover bit
  4958                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4959  300001                     	org	3145729
  4960  300001  02                 	db	2
  4961                           
  4962                           ;Config register CONFIG2L @ 0x300002
  4963                           ;	Power-up Timer Enable bit
  4964                           ;	PWRT = OFF, PWRT disabled
  4965                           ;	Brown-out Reset Enable bits
  4966                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4967                           ;	Brown Out Reset Voltage bits
  4968                           ;	BORV = 0x2E, user specified literal
  4969  300002                     	org	3145730
  4970  300002  71                 	db	369
  4971                           
  4972                           ;Config register CONFIG2H @ 0x300003
  4973                           ;	Watchdog Timer Enable bit
  4974                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4975                           ;	Watchdog Timer Postscale Select bits
  4976                           ;	WDTPS = 1, 1:1
  4977  300003                     	org	3145731
  4978  300003  00                 	db	0
  4979                           
  4980                           ; Padding undefined space
  4981  300004                     	org	3145732
  4982  300004  FF                 	db	255
  4983                           
  4984                           ;Config register CONFIG3H @ 0x300005
  4985                           ;	CCP2 MUX bit
  4986                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4987                           ;	PORTB A/D Enable bit
  4988                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4989                           ;	Low-Power Timer1 Oscillator Enable bit
  4990                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4991                           ;	MCLR Pin Enable bit
  4992                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4993  300005                     	org	3145733
  4994  300005  83                 	db	131
  4995                           
  4996                           ;Config register CONFIG4L @ 0x300006
  4997                           ;	Stack Full/Underflow Reset Enable bit
  4998                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4999                           ;	Single-Supply ICSP Enable bit
  5000                           ;	LVP = OFF, Single-Supply ICSP disabled
  5001                           ;	Extended Instruction Set Enable bit
  5002                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5003                           ;	Background Debugger Enable bit
  5004                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5005  300006                     	org	3145734
  5006  300006  80                 	db	128
  5007                           
  5008                           ; Padding undefined space
  5009  300007                     	org	3145735
  5010  300007  FF                 	db	255
  5011                           
  5012                           ;Config register CONFIG5L @ 0x300008
  5013                           ;	Code Protection bit
  5014                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5015                           ;	Code Protection bit
  5016                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5017                           ;	Code Protection bit
  5018                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5019                           ;	Code Protection bit
  5020                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5021  300008                     	org	3145736
  5022  300008  0F                 	db	15
  5023                           
  5024                           ;Config register CONFIG5H @ 0x300009
  5025                           ;	Boot Block Code Protection bit
  5026                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5027                           ;	Data EEPROM Code Protection bit
  5028                           ;	CPD = OFF, Data EEPROM not code-protected
  5029  300009                     	org	3145737
  5030  300009  C0                 	db	192
  5031                           
  5032                           ;Config register CONFIG6L @ 0x30000A
  5033                           ;	Write Protection bit
  5034                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5035                           ;	Write Protection bit
  5036                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5037                           ;	Write Protection bit
  5038                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5039                           ;	Write Protection bit
  5040                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5041  30000A                     	org	3145738
  5042  30000A  0F                 	db	15
  5043                           
  5044                           ;Config register CONFIG6H @ 0x30000B
  5045                           ;	Configuration Register Write Protection bit
  5046                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5047                           ;	Boot Block Write Protection bit
  5048                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5049                           ;	Data EEPROM Write Protection bit
  5050                           ;	WRTD = OFF, Data EEPROM not write-protected
  5051  30000B                     	org	3145739
  5052  30000B  E0                 	db	224
  5053                           
  5054                           ;Config register CONFIG7L @ 0x30000C
  5055                           ;	Table Read Protection bit
  5056                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5057                           ;	Table Read Protection bit
  5058                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5059                           ;	Table Read Protection bit
  5060                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5061                           ;	Table Read Protection bit
  5062                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5063  30000C                     	org	3145740
  5064  30000C  0F                 	db	15
  5065                           
  5066                           ;Config register CONFIG7H @ 0x30000D
  5067                           ;	Boot Block Table Read Protection bit
  5068                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5069  30000D                     	org	3145741
  5070  30000D  40                 	db	64
  5071                           tosu	equ	0xFFF
  5072                           tosh	equ	0xFFE
  5073                           tosl	equ	0xFFD
  5074                           stkptr	equ	0xFFC
  5075                           pclatu	equ	0xFFB
  5076                           pclath	equ	0xFFA
  5077                           pcl	equ	0xFF9
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           indf0	equ	0xFEF
  5085                           postinc0	equ	0xFEE
  5086                           postdec0	equ	0xFED
  5087                           preinc0	equ	0xFEC
  5088                           plusw0	equ	0xFEB
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           indf1	equ	0xFE7
  5093                           postinc1	equ	0xFE6
  5094                           postdec1	equ	0xFE5
  5095                           preinc1	equ	0xFE4
  5096                           plusw1	equ	0xFE3
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           bsr	equ	0xFE0
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           preinc2	equ	0xFDC
  5104                           plusw2	equ	0xFDB
  5105                           fsr2h	equ	0xFDA
  5106                           fsr2l	equ	0xFD9
  5107                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    42
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     24      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[10]), STR_7(CODE[8]), STR_6(CODE[16]), STR_5(CODE[8]), 
		 -> STR_4(CODE[5]), STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  297341
                                             20 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                            _adcInit
                          _atraso_ms
                       _digitalWrite
                         _kpDebounce
                             _kpInit
                          _kpReadKey
                         _lcdCommand
                            _lcdInit
                          _lcdString
                            _pinMode
                           _rgbColor
                            _rgbInit
                             _soInit
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    4544
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    8794
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   46265
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   45567
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0  100628
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   45273
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   45537
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   45165
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    8880
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    9088
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _soInit                                               0     0      0    4544
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   28181
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _soWrite                                              3     1      2   27545
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _PulseEnClock                                         0     0      0    8500
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _PulseClockData                                       0     0      0    8500
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    8500
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2    1962
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    4544
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    4544
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1208
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _adcInit
     _pinMode
   _atraso_ms
   _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpReadKey
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _pinMode
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _soInit
   _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     18      2C       1       34.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      15        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 02 18:39:21 2021

                      _v 001F           _pulseEnablePin 1C08             lcdString@msg 000F  
                     l53 0890                       l47 06E0             ___awdiv@sign 0006  
                     _v0 002B                       _v1 002A                       _v2 0029  
                     _v3 0028                      l117 1C06                      l320 1A5C  
                    l334 16F4                      l350 1DF4                      l263 121E  
                    l423 1934                      l272 15D2                      l336 170C  
                    l362 1DA0                      l267 15D6                      l339 1CF6  
                    l268 15D2                      l356 1D26                      l365 1B1A  
                    l382 1B70                      l438 1C86                      l359 1C48  
                    l391 1884                      l480 1D50                      l368 1DDC  
                    l376 1DBE                      l297 146C                      l561 1AC0  
                    l483 1D7A                      l477 1CC4                      l808 19E4  
                    l488 1BBE                      l795 17D0                      _PR2 000FCB  
                    u730 1A26                      u731 1A22                      u740 1A5A  
                    u724 1A06                      u741 1A56                      u725 1A00  
           ___awmod@sign 000E                      wreg 000FE8                     l3001 0E1A  
                   l3011 0E60                     l3003 0E20                     l3013 0E64  
                   l3005 0E30                     l2311 1020                     l3015 0E74  
                   l3007 0E48                     l2401 13AE                     l2321 10BA  
                   l2313 1042                     l2305 0FD2                     l3025 0EA8  
                   l3017 0E8C                     l3009 0E5C                     l2411 144A  
                   l2403 13D2                     l2331 114E                     l2323 10D6  
                   l2315 105E                     l2307 0FEE                     l1531 19EE  
                   l3051 0F5E                     l3035 0EDC                     l3027 0EC0  
                   l3019 0EA0                     l2405 13F8                     l2341 11E0  
                   l2333 1168                     l2325 10F0                     l2317 1078  
                   l2309 1000                     l2421 1C88                     l1541 1A5A  
                   l1533 1A26                     l1525 19E6                     l2413 1CF8  
                   l2501 1872                     l3037 0EF4                     l3029 0ED4  
                   l2407 1414                     l2431 148A                     l2343 1200  
                   l2335 1188                     l2327 1110                     l2319 1098  
                   l2351 1B86                     l2415 1D04                     l2423 1DC2  
                   l2503 1878                     l2511 1886                     l3039 0F08  
                   l3047 0F10                     l2409 1426                     l2337 11AA  
                   l2329 1132                     l2345 1D28                     l2361 1BA8  
                   l1537 1A3A                     l2417 1D08                     l2505 187E  
                   l2521 18E6                     l2513 1894                     l3065 0F86  
                   l3057 0F68                     l3049 0F4A                     l2339 11C6  
                   l2347 1D52                     l2363 1BAA                     l2531 15E8  
                   l2507 1CC6                     l1539 1A3E                     l2371 1C28  
                   l2419 1AC4                     l2523 18FA                     l2515 18AC  
                   l3059 0F7C                     l2701 17C8                     l2381 1290  
                   l2373 1220                     l2461 158A                     l2453 1542  
                   l2445 14FA                     l2437 14B2                     l2429 146E  
                   l2365 1BBA                     l2357 1B8A                     l2349 1B72  
                   l2541 1698                     l2509 1CF2                     l2525 1908  
                   l2517 18C0                     l3261 0BE8                     l3069 0F92  
                   l2711 1950                     l2391 1324                     l2383 12AC  
                   l2375 123C                     l2463 15A6                     l2455 155E  
                   l2447 1516                     l2439 14CE                     l2359 1BA2  
                   l2551 16E8                     l2543 16C2                     l2535 1608  
                   l2367 1C08                     l2527 1920                     l2519 18CE  
                   l3263 0D8E                     l2721 1984                     l2713 1954  
                   l2705 1936                     l2393 1336                     l2385 12BE  
                   l2377 124E                     l2553 16EC                     l2537 1654  
                   l2529 15D8                     l2369 1C1C                     l2561 1B44  
                   l2481 1C4A                     l3265 0F24                     l2801 0996  
                   l2731 19BE                     l2723 198C                     l2715 1962  
                   l2707 193A                     l2395 135A                     l2387 12E2  
                   l2379 126E                     l2483 1BC0                     l2555 1704  
                   l2539 167A                     l2547 16CA                     l2475 1D7E  
                   l2491 17D2                     l2563 1B48                     l3267 0FA8  
                   l3259 0A2E                     l2811 09CA                     l2803 09AA  
                   l2661 170E                     l2725 199A                     l2733 19C4  
                   l2717 196A                     l2709 1948                     l2397 1380  
                   l2389 1308                     l2485 1BFC                     l2573 1A82  
                   l2565 1A5E                     l2549 16E2                     l2493 1832  
                   l2477 1DA4                     l2557 1B1C                     l2821 09FE  
                   l2813 09DE                     l2741 0674                     l2671 173A  
                   l2663 1712                     l2735 19D4                     l2727 19B0  
                   l2719 197C                     l2399 139C                     l2487 1BFE  
                   l2583 1AA0                     l2575 1A86                     l2567 1A6A  
                   l2495 183E                     l2479 1DB2                     l2559 1B28  
                   l2903 0BD4                     l2823 0A12                     l2831 0A1A  
                   l2751 0798                     l2743 06D0                     l2681 1768  
                   l2673 1742                     l2665 1720                     l2737 19DC  
                   l2729 19B8                     l2489 1C02                     l2569 1A6E  
                   l2497 1858                     l2921 0C5A                     l2913 0C34  
                   l2905 0C0E                     l2841 0A8E                     l2809 09B2  
                   l2833 0A54                     l2761 07E0                     l2753 07AC  
                   l2745 06D0                     l2691 17A2                     l2683 1770  
                   l2675 1746                     l2667 1728                     l2579 1A9A  
                   l2587 1AA6                     l2499 1866                     l2931 0C8A  
                   l2923 0C6C                     l2915 0C48                     l2907 0C22  
                   l2851 0AC6                     l2843 0AA2                     l2835 0A68  
                   l2819 09E6                     l2771 084C                     l2763 07FC  
                   l2755 07B4                     l2747 077C                     l2693 17A4  
                   l2685 177E                     l2677 174E                     l2669 172C  
                   l2589 1AAA                     l2941 0CCE                     l2933 0C9A  
                   l2925 0C74                     l2917 0C4E                     l2909 0C28  
                   l2861 0AF4                     l2853 0ACE                     l2845 0AA8  
                   l2837 0A6E                     l2781 0914                     l2773 0868  
                   l2765 0808                     l2757 07CA                     l2749 0790  
                   l2695 17AA                     l2687 1784                     l2679 1760  
                   l2943 0CDE                     l2935 0CB2                     l2927 0C78  
                   l2871 0B38                     l2863 0B0C                     l2855 0AD2  
                   l2839 0A76                     l2791 0952                     l2783 0918  
                   l2775 0884                     l2767 0824                     l2759 07D2  
                   l2689 179A                     l2697 17B0                     l2953 0D12  
                   l2945 0CF6                     l2937 0CC6                     l2929 0C84  
                   l2881 0B6C                     l2873 0B50                     l2865 0B20  
                   l2857 0ADE                     l2849 0AB4                     l2793 0966  
                   l2785 0924                     l2777 08FA                     l2769 0840  
                   l2699 17C0                     l2963 0D46                     l2955 0D2A  
                   l2947 0D0A                     l2939 0CCA                     l2891 0BA0  
                   l2883 0B84                     l2875 0B64                     l2867 0B24  
                   l2859 0AE4                     l2795 096A                     l2787 092A  
                   l2779 090C                     l2965 0D5E                     l2957 0D3E  
                   l2893 0BB8                     l2885 0B98                     l2869 0B28  
                   l2797 096E                     l2789 093A                     l2967 0D72  
                   l2975 0D7A                     l2895 0BCC                     l2799 097E  
                   l2993 0DF0                     l2985 0DD2                     l2977 0DB4  
                   l2995 0E02                     l2987 0DE6                     l2979 0DC8  
                   l2997 0E0A                     l2999 0E0E                     STR_1 0645  
                   STR_2 0665                     STR_3 064D                     STR_4 066D  
                   STR_5 0655                     STR_6 062B                     STR_7 065D  
                   STR_8 063B                     u2000 1604                     u2001 1600  
                   u2100 1A96                     u2020 1654                     u2101 1A92  
                   u2021 1650                     u2110 1AC0                     u2014 1624  
                   u2111 1ABC                     u2015 161E                     u2200 173A  
                   u2040 1698                     u2201 1736                     u2041 1694  
                   u2210 1760                     u1410 0FEE                     u2034 166C  
                   u2211 175C                     u1411 0FEA                     u2035 1666  
                   u2220 177E                     u2300 19D4                     u1500 10F0  
                   u1420 1000                     u2060 16E2                     u2221 177A  
                   u2301 19D0                     u1501 10EC                     u1421 0FFC  
                   u2061 16DE                     u2230 179A                     u2070 1704  
                   u2054 16B4                     u2310 0790                     u2231 1796  
                   u2071 1700                     u2055 16AE                     u2311 078C  
                   u2240 17C0                     u2080 1B70                     u2400 090C  
                   u2320 07AC                     u2241 17BC                     u2081 1B6C  
                   u2401 0908                     u2321 07A8                     u2250 1948  
                   u2090 1A7E                     u1530 114E                     u1514 1102  
                   u1450 105E                     u1434 1012                     u1610 1BBA  
                   u2410 0A68                     u2330 07CA                     u2251 1944  
                   u2091 1A7A                     u1531 114A                     u1515 10FE  
                   u1451 105A                     u1435 100E                     u1611 1BB6  
                   u2411 0A64                     u2331 07C6                     u2260 1962  
                   u1700 1324                     u1620 123C                     u1604 1212  
                   u1540 1168                     u1524 1122                     u1460 1078  
                   u1444 1032                     u2500 0F5E                     u2420 0AA2  
                   u2340 07E0                     u2261 195E                     u1701 1320  
                   u1621 1238                     u1605 120E                     u1541 1164  
                   u1525 111E                     u1461 1074                     u1445 102E  
                   u2501 0F5A                     u2421 0A9E                     u2341 07DC  
                   u2190 1720                     u2270 197C                     u1710 1336  
                   u1630 124E                     u2510 0F7C                     u2430 0AC6  
                   u2350 07FC                     u2191 171C                     u2271 1978  
                   u1711 1332                     u1631 124A                     u2511 0F78  
                   u2431 0AC2                     u2351 07F8                     u2280 199A  
                   u2440 0C22                     u2360 0824                     u2281 1996  
                   u2441 0C1E                     u2361 0820                     u2290 19B0  
                   u1570 11C6                     u1554 117A                     u1490 10D6  
                   u1474 108A                     u2450 0C48                     u2370 0840  
                   u2291 19AC                     u1571 11C2                     u1555 1176  
                   u1491 10D2                     u1475 1086                     u2451 0C44  
                   u2371 083C                     u1804 143C                     u1740 139C  
                   u1724 134C                     u1660 12AC                     u1644 1260  
                   u1580 11E0                     u1564 119A                     u1484 10AA  
                   u1820 1D26                     u2460 0C6C                     u2380 0868  
                   u1805 1438                     u1741 1398                     u1725 1348  
                   u1661 12A8                     u1645 125C                     u1581 11DC  
                   u1565 1196                     u1485 10A6                     u1821 1D22  
                   u2461 0C68                     u2381 0864                     u1814 1460  
                   u1750 13AE                     u1734 1370                     u1670 12BE  
                   u1654 1280                     u1910 155E                     u2470 0DC8  
                   u2390 0884                     u1815 145C                     u1751 13AA  
                   u1735 136C                     u1671 12BA                     u1655 127C  
                   u1911 155A                     u2471 0DC4                     u2391 0880  
                   u1904 152C                     u2480 0DE6                     u1905 1528  
                   u2481 0DE2                     u1930 15A6                     u1850 148A  
                   u1594 11F2                     u2490 0E02                     u1931 15A2  
                   u1851 1486                     u1595 11EE                     u2491 0DFE  
                   u1780 1414                     u1764 13C4                     u1684 12D4  
                   u1924 1574                     u1781 1410                     u1765 13C0  
                   u1685 12D0                     u1925 1570                     u1790 1426  
                   u1774 13E8                     u1694 12F8                     u1870 14CE  
                   u1791 1422                     u1775 13E4                     u1695 12F4  
                   u1871 14CA                     u1944 15BC                     u1864 149C  
                   u1945 15B8                     u1865 1498                     u1890 1516  
                   u1970 1894                     u1891 1512                     u1971 1890  
                   u1884 14E4                     u1980 18CE                     u1885 14E0  
                   u1981 18CA                     u1990 1908                     u1991 1904  
                   _PIR1 000F9E                     _main 0674                     _keys 001D  
       ??_PulseClockData 0007                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1C4A                    ?_main 0001  
        __end_of_adcInit 1C08          __end_of___awdiv 17D2          __end_of___awmod 19E6  
                  _T0CON 000FD5          ___awdiv@divisor 0003                    _T2CON 000FCA  
        ___awdiv@counter 0005                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84          __end_of_charKey 062B  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_lcdChar 1DC0          __end_of_lcdInit 1886  
        __end_of_rgbInit 1C88          __end_of_pinMode 146E                    _valor 0611  
        __end_of_soWrite 1BC0                    tablat 000FF5                    status 000FD8  
           pushNibble@rs 000A     __end_of_digitalWrite 1220          __initialization 1DDE  
        ?_pulseEnablePin 0001             __end_of_main 0FD2                   ??_main 0015  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000FBB         ___awdiv@dividend 0001  
            rgbColor@led 0007             atraso_ms@num 0001                   _INTCON 000FF2  
                 _SPBRGH 000FB0                ??_adcInit 0007                ??___awdiv 0005  
              ??___awmod 000D                   _kpInit 1CC6         __end_of_rgbColor 1936  
                 clear_0 1DE4                   _soInit 1C88         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F          ___awmod@counter 000D                ??_rgbInit 0007  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
       __end_of_pushByte 1B1C               __accesstop 0080  __end_of__initialization 1DEA  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0621       __size_of_delayMili 0030  
     __size_of_lcdString 0056       __size_of_kpReadKey 0078       __size_of_atraso_ms 0064  
  __size_of_digitalWrite 024E               _delayMicro 1DF4              _v0@ssd$F654 0024  
             _lcdCommand 1DC0              _v1@ssd$F655 0023                  ?_kpInit 0001  
                _CCP2CON 000FBA                  _BAUDCON 000FB8                  ?_soInit 0001  
             _kpDebounce 15D8              _v2@ssd$F656 0022              _v3@ssd$F657 0021  
           _digitalWrite 0FD2        __end_of_delayMili 1D28                ?_rgbColor 0007  
       ??_pulseEnablePin 0007                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcdString 1B72          kpDebounce@tempo 0026        __end_of_kpReadKey 1A5E  
                _adcInit 1BC0                  ___awdiv 170E                  ___awmod 1936  
              ?_pushByte 000A        __end_of_atraso_ms 1AC2             __psmallconst 0600  
        __size_of_kpInit 0032                  _charKey 0621                  __pcinit 1DDE  
                _lcdChar 1DA2                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 17D2                  __ptext0 0674                  __ptext1 1C4A  
                __ptext2 1886                  __ptext3 1B1C                  __ptext4 1DA2  
                __ptext5 17D2                  __ptext6 1D7C                  __ptext7 1DC0  
                __ptext8 1AC2                  __ptext9 1C08                  _display 002C  
                _rgbInit 1C4A                  _pinMode 1220         ___awmod@dividend 0009  
             delayMili@a 0001               delayMili@i 0004                  _soWrite 1B72  
                _started 0027     end_of_initialization 1DEA            ?_PulseEnClock 0001  
             ??_rgbColor 0009            __Lmediumconst 0000           digitalRead@pin 0001  
            ?_delayMicro 0001              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001           _valor@ssd$F652 0601               _pushNibble 1D7C  
             lcdString@i 0013           ??_PulseEnClock 0007               kpReadKey@i 0004  
             main@player 0017               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006           __end_of_kpInit 1CF8   __end_of_valor@ssd$F652 0611  
         __end_of_soInit 1CC6      __size_of_delayMicro 0002      start_initialization 1DDE  
    __end_of_digitalRead 15D8      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
      kpDebounce@oldRead 0019        kpDebounce@newRead 001B                 ??_kpInit 0007  
               ??_soInit 0007              __pbssCOMRAM 0019              ?_pushNibble 000A  
             pinMode@pin 0001        __size_of_rgbColor 00B0                _delayMili 1CF8  
               ?_adcInit 0001                 ?___awdiv 0001                 ?___awmod 0009  
         _PulseClockData 1D52     __end_of_PulseEnClock 1D52                _lcdString 1B1C  
            _digitalRead 146E                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001                _kpReadKey 19E6                _atraso_ms 1A5E  
            __smallconst 0600                 ?_rgbInit 0001                 ?_pinMode 0001  
               ?_soWrite 0007         _display@ssd$F653 0025             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 1D7C      __size_of_pushNibble 0026  
           ??_lcdCommand 000E               ?_lcdString 000F             ??_kpDebounce 000A  
             ?_kpReadKey 0001               ?_atraso_ms 0001          lcdCommand@value 000E  
     __end_of_delayMicro 1DF6       __end_of_lcdCommand 1DDE               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 170E                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 0001         __size_of_adcInit 0048  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4         __size_of_rgbInit 003E  
       __size_of_pinMode 024E                 __ptext10 1DF4                 __ptext11 1CF8  
               __ptext20 146E                 __ptext12 19E6                 __ptext21 1A5E  
               __ptext13 1CC6                 __ptext22 1BC0                 __ptext14 1C88  
               __ptext23 1220                 __ptext15 15D8                 __ptext24 1936  
               __ptext16 1B72                 __ptext25 170E                 __ptext17 1D28  
               __ptext18 1D52                 __ptext19 0FD2         __size_of_soWrite 004E  
               _rgbColor 1886            __size_of_main 095E              ??_delayMili 0003  
  __size_of_PulseEnClock 002A              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007                 _pushByte 1AC2              ??_lcdString 0011  
            ??_kpReadKey 0001              ??_atraso_ms 0003             ??_pushNibble 000C  
          ?_digitalWrite 0001             _PulseEnClock 1D28        digitalWrite@value 0003  
               soWrite@i 0009       __end_of_pushNibble 1DA2             ?_digitalRead 0001  
            kpDebounce@i 000D           ??_digitalWrite 0005          digitalWrite@pin 0001  
